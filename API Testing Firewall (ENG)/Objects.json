{
	"info": {
		"_postman_id": "373fe4a0-1ed8-4327-8d5e-e8ce0cd37c08",
		"name": "Objects",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19984505"
	},
	"item": [
		{
			"name": "Network objects",
			"item": [
				{
					"name": "Network",
					"item": [
						{
							"name": "Config Block/Create",
							"item": [
								{
									"name": "Locking configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/acquire/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"acquire",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "/acquire-config-lock",
													"path": [
														"acquire-config-lock"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates a new config",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201 and 'CurrentUuidConf'\", function () {\r",
													"    pm.response.to.have.status(201); //Checking that the answer is 201\r",
													"    var jsonData = pm.response.json(); //Create a variable and save the whole answer in it\r",
													"    var tempUuid = jsonData.uuid; //Create a variable and place the value in it \"uuid\"\r",
													"    pm.environment.set('CurrentUuidConf', tempUuid); //Passing uuid value to a variable 'CurrentUuidConf'\r",
													"    var tempId = jsonData.id; //Create a variable and place the value in it \"id\"\r",
													"    pm.environment.set('CurrentIdConf', tempId); //Passing the id value into a variable 'CurrentIdConf'\r",
													"    //console.info(\"Successfully created IdConf \" + pm.environment.get(\"CurrentIdConf\") + \" with uuid \" + pm.environment.get(\"CurrentUuidConf\")) //Write a message in the log\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"id\");\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"is_active\");\r",
													"    pm.expect(pm.response.text()).to.include(\"source\");\r",
													"    pm.expect(pm.response.text()).to.include(\"version\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"{{$randomUUID}}\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/config/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													},
													{
														"key": "Accept",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/config/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"id\": 24,\n    \"name\": \"string\",\n    \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n    \"is_active\": true,\n    \"domain_level\": 1,\n    \"subtype\": \"adminedit\",\n    \"description\": \"string\",\n    \"source\": 1,\n    \"version\": 10042\n}"
										}
									]
								}
							]
						},
						{
							"name": "Positive",
							"item": [
								{
									"name": "Create a Network without additional parameters Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name, IP and Network is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"Local Net\");\r",
													"    pm.expect(jsonData.ip).to.eql(\"192.168.0.0/24\");\r",
													"    pm.expect(jsonData.subtype).to.eql(\"network\");\r",
													"});\r",
													"// Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"pm.environment.set(\"UuidNetObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"network\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 40,\r\n    \"uuid\": \"ea13f6ad-b70e-4206-a8da-aef3943d5d4b\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-09T07:56:41\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Local Net\",\r\n    \"description\": null,\r\n    \"is_enabled\": true,\r\n    \"ip\": \"192.168.0.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 79,\r\n    \"version\": 10148\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										}
									]
								},
								{
									"name": "Request Created Network Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name, IP and Network is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"Local Net\");\r",
													"    pm.expect(jsonData.ip).to.eql(\"192.168.0.0/24\");\r",
													"    pm.expect(jsonData.subtype).to.eql(\"network\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidNetObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"81c318a5-0f90-481f-8330-b6e7837dfebe"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:17:24 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 6,\r\n    \"uuid\": \"81c318a5-0f90-481f-8330-b6e7837dfebe\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:00:04\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"228.57.248.119\",\r\n    \"description\": \"Kristine Rosenbaum\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"228.57.248.119\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/8.8.8.8",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"8.8.8.8"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:19:32 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Cookie"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /consumer/net-object/8.8.8.8</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>http://172.17.117.21/consumer/net-object/8.8.8.8</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>djdb.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                config/\n                \n            \n          </li>\n        \n          <li>\n            \n                aserv/\n                \n            \n          </li>\n        \n          <li>\n            \n                administration/\n                \n            \n          </li>\n        \n          <li>\n            \n                backup/\n                \n            \n          </li>\n        \n          <li>\n            \n                cert/\n                \n            \n          </li>\n        \n          <li>\n            \n                cgw/\n                \n            \n          </li>\n        \n          <li>\n            \n                channels/\n                \n            \n          </li>\n        \n          <li>\n            \n                cluster/\n                \n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/$\n                [name='net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/mass-delete/$\n                [name='net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/mass-delete\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/related-cgw/$\n                [name='net-object-related-cgw']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/related-cgw\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-related-cgw']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/upload/$\n                [name='net-object-upload']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/upload\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-upload']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy/$\n                [name='password-policy-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='password-policy-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='password-policy-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='password-policy-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/$\n                [name='user-net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/full-view/$\n                [name='user-net-object-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/full-view\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/mass-delete/$\n                [name='user-net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/mass-delete\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='user-net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/$\n                [name='user-profile-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-profile-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/full-view/$\n                [name='user-profile-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/full-view\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-profile-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='user-profile-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-profile-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^$\n                [name='api-root']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='api-root']\n            \n          </li>\n        \n          <li>\n            \n                dos-protect/\n                \n            \n          </li>\n        \n          <li>\n            \n                firewall/\n                \n            \n          </li>\n        \n          <li>\n            \n                group/\n                \n            \n          </li>\n        \n          <li>\n            \n                install-policy/\n                \n            \n          </li>\n        \n          <li>\n            \n                interfaces/\n                \n            \n          </li>\n        \n          <li>\n            \n                ips/\n                \n            \n          </li>\n        \n          <li>\n            \n                keys/\n                \n            \n          </li>\n        \n          <li>\n            \n                license/\n                \n            \n          </li>\n        \n          <li>\n            \n                links/\n                \n            \n          </li>\n        \n          <li>\n            \n                logs/\n                \n            \n          </li>\n        \n          <li>\n            \n                multiwan/\n                \n            \n          </li>\n        \n          <li>\n            \n                netflow/\n                \n            \n          </li>\n        \n          <li>\n            \n                networking/\n                \n            \n          </li>\n        \n          <li>\n            \n                param/\n                \n            \n          </li>\n        \n          <li>\n            \n                qos/\n                \n            \n          </li>\n        \n          <li>\n            \n                rule/\n                \n            \n          </li>\n        \n          <li>\n            \n                server/\n                \n            \n          </li>\n        \n          <li>\n            \n                ssh/\n                \n            \n          </li>\n        \n          <li>\n            \n                structure/\n                \n            \n          </li>\n        \n          <li>\n            \n                task/\n                \n            \n          </li>\n        \n          <li>\n            \n                update/\n                \n            \n          </li>\n        \n          <li>\n            \n                userauth/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-server/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-server/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^user-auth/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^shell$\n                \n            \n          </li>\n        \n          <li>\n            \n                ^swagger$\n                \n            \n          </li>\n        \n          <li>\n            \n                drf-swagger/\n                [name='schema-swagger-ui']\n            \n          </li>\n        \n      </ol>\n      <p>\n        \n        The current path, <code>consumer/net-object/8.8.8.8</code>, didn't match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/81c318a5-0f90-481f-8331-b6e7837dfebe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"81c318a5-0f90-481f-8331-b6e7837dfebe"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:21:40 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										}
									]
								},
								{
									"name": "Create a Network with additional parameters Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var VarNetObj = pm.variables.replaceIn('{{$randomSemver}}'+'.0/24'); //Assign a random value to the new variable\r",
													"pm.environment.set('VarNetObj', VarNetObj); //Passing the new value into a variable\r",
													"// console.log(VarNetObj);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Network is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.subtype).to.eql(\"network\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"{{VarNetObj}}\",\n  \"subtype\": \"network\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										}
									]
								},
								{
									"name": "Create a Network with valid characters Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name,Desc,network is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"azAZa09`!@#$^()-=_+[]’;,\");\r",
													"    pm.expect(jsonData.description).to.eql(\"azAZa09`!@#$^()-=_+[]’;,\");\r",
													"    pm.expect(jsonData.subtype).to.eql(\"network\");\r",
													"});\r",
													"// Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"pm.environment.set(\"UuidNetDelObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"azAZa09`!@#$^()-=_+[]’;,\",\n  \"description\": \"azAZa09`!@#$^()-=_+[]’;,\",\n  \"ip\": \"123.123.123.0/30\",\n  \"subtype\": \"network\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										}
									]
								},
								{
									"name": "Change Network Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name,Desc,network is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"Changed name net\");\r",
													"    pm.expect(jsonData.ip).to.eql(\"192.168.0.0/24\");\r",
													"    pm.expect(jsonData.subtype).to.eql(\"network\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Changed name net\",\n  \"description\": \"{{$randomFullName}}\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"network\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidNetObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Changed name net\",\n  \"description\": \"{{$randomFullName}}\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:40:21 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 178,\r\n    \"uuid\": \"56a8b1dd-b975-4139-b74b-4ad99287c1c1\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-20T13:59:59\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Changed name net\",\r\n    \"description\": \"Mr. Bradley Parker\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"192.168.0.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 1,\r\n    \"version\": 10225\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Change partially Network Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name,Desc,network is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Modified_object_PUTCH_Net\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Modified_object_PUTCH_Net\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidNetObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Modified_object_PUTCH\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidNetObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:40:21 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 111,\r\n    \"uuid\": \"863af910-e92b-4187-8824-f9cdc6b8bc7e\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-20T07:29:29\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Changed name again\",\r\n    \"description\": \"Modified_object_PUTCH\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"192.168.0.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 100,\r\n    \"version\": 10188\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Delete Network Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetDelObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidNetDelObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "204 No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/f2a62e12-05c8-4021-9de3-f43c14219525/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"f2a62e12-05c8-4021-9de3-f43c14219525",
														""
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:56:17 GMT"
												},
												{
													"key": "Content-Length",
													"value": "0"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:50:32 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>ContentNotRenderedError\n          at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>ContentNotRenderedError\n       at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</h1>\n  <pre class=\"exception_value\">The response content must be rendered before it can be accessed.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>DELETE</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>ContentNotRenderedError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>The response content must be rendered before it can be accessed.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/template/response.py in content, line 128</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:50:32 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686077498944\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686077498944\">\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686077498944\">\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077498944')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077498944\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>ContentNotRenderedError(&#39;The response content must be rendered before it can be accessed.&#39;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686077972640\">\n              \n                <ol start=\"89\" class=\"pre-context\" id=\"pre139686077972640\">\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>            response = self.process_request(request)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        response = response or self.get_response(request)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"96\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>            response = self.process_response(request, response)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='97' class=\"post-context\" id=\"post139686077972640\">\n                  \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077972640')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077972640\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_response</code>\n\n          \n            <div class=\"context\" id=\"c139686078140656\">\n              \n                <ol start=\"105\" class=\"pre-context\" id=\"pre139686078140656\">\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        if response.status_code == 404:</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>            if self.should_redirect_with_slash(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>                return self.response_redirect_class(self.get_full_path_with_slash(request))</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        # Add the Content-Length header to non-streaming responses if not</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        # already set.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        if not response.streaming and not response.has_header(&#39;Content-Length&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"112\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>            response[&#39;Content-Length&#39;] = str(len(response.content))</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='113' class=\"post-context\" id=\"post139686078140656\">\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>class BrokenLinkEmailsMiddleware(MiddlewareMixin):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686078140656')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686078140656\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/template/response.py</code> in <code>content</code>\n\n          \n            <div class=\"context\" id=\"c139686077554032\">\n              \n                <ol start=\"121\" class=\"pre-context\" id=\"pre139686077554032\">\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            )</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        return super().__iter__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    @property</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    def content(self):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        if not self._is_rendered:</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            raise ContentNotRenderedError(</pre></li>\n                \n                </ol>\n              \n              <ol start=\"128\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>                &#39;The response content must be rendered before it can be accessed.&#39;</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='129' class=\"post-context\" id=\"post139686077554032\">\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        return super().content</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    @content.setter</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    def content(self, value):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        &quot;&quot;&quot;Set the content for the response.&quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077554032')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077554032\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>__class__</td>\n                    <td class=\"code\"><pre>&lt;class &#39;django.template.response.SimpleTemplateResponse&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"ContentNotRenderedError at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: DELETE\nRequest URL: http://172.17.117.21/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  96.             response = self.process_response(request, response)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_response\n  112.             response[&#39;Content-Length&#39;] = str(len(response.content))\n\nFile \"/usr/lib/python3.7/site-packages/django/template/response.py\" in content\n  128.                 &#39;The response content must be rendered before it can be accessed.&#39;\n\nException Type: ContentNotRenderedError at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\nException Value: The response content must be rendered before it can be accessed.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[Built-in administrator():4fa8223e-19df-4596-9c15-f3cd93f1330a:v10013]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;afc46c14-6836-412d-a906-67b2bf75b227&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;26004&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;DELETE&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 26004)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b330a4f10&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b330a4090&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_717216_3644436&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "Request a Network that does not exist Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Status is 'Not found.'\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Not found.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/81c318a5-0f90-7777-7777-b6e7837dfebe/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"81c318a5-0f90-7777-7777-b6e7837dfebe",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"81c318a5-0f90-481f-8330-b6e7837dfebe"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:17:24 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 6,\r\n    \"uuid\": \"81c318a5-0f90-481f-8330-b6e7837dfebe\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:00:04\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"228.57.248.119\",\r\n    \"description\": \"Kristine Rosenbaum\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"228.57.248.119\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/8.8.8.8",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"8.8.8.8"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:19:32 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Cookie"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /consumer/net-object/8.8.8.8</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>http://172.17.117.21/consumer/net-object/8.8.8.8</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>djdb.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                config/\n                \n            \n          </li>\n        \n          <li>\n            \n                aserv/\n                \n            \n          </li>\n        \n          <li>\n            \n                administration/\n                \n            \n          </li>\n        \n          <li>\n            \n                backup/\n                \n            \n          </li>\n        \n          <li>\n            \n                cert/\n                \n            \n          </li>\n        \n          <li>\n            \n                cgw/\n                \n            \n          </li>\n        \n          <li>\n            \n                channels/\n                \n            \n          </li>\n        \n          <li>\n            \n                cluster/\n                \n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/$\n                [name='net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/mass-delete/$\n                [name='net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/mass-delete\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/related-cgw/$\n                [name='net-object-related-cgw']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/related-cgw\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-related-cgw']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/upload/$\n                [name='net-object-upload']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/upload\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-upload']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy/$\n                [name='password-policy-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='password-policy-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='password-policy-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='password-policy-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/$\n                [name='user-net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/full-view/$\n                [name='user-net-object-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/full-view\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/mass-delete/$\n                [name='user-net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/mass-delete\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='user-net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/$\n                [name='user-profile-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-profile-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/full-view/$\n                [name='user-profile-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/full-view\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-profile-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='user-profile-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-profile-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^$\n                [name='api-root']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='api-root']\n            \n          </li>\n        \n          <li>\n            \n                dos-protect/\n                \n            \n          </li>\n        \n          <li>\n            \n                firewall/\n                \n            \n          </li>\n        \n          <li>\n            \n                group/\n                \n            \n          </li>\n        \n          <li>\n            \n                install-policy/\n                \n            \n          </li>\n        \n          <li>\n            \n                interfaces/\n                \n            \n          </li>\n        \n          <li>\n            \n                ips/\n                \n            \n          </li>\n        \n          <li>\n            \n                keys/\n                \n            \n          </li>\n        \n          <li>\n            \n                license/\n                \n            \n          </li>\n        \n          <li>\n            \n                links/\n                \n            \n          </li>\n        \n          <li>\n            \n                logs/\n                \n            \n          </li>\n        \n          <li>\n            \n                multiwan/\n                \n            \n          </li>\n        \n          <li>\n            \n                netflow/\n                \n            \n          </li>\n        \n          <li>\n            \n                networking/\n                \n            \n          </li>\n        \n          <li>\n            \n                param/\n                \n            \n          </li>\n        \n          <li>\n            \n                qos/\n                \n            \n          </li>\n        \n          <li>\n            \n                rule/\n                \n            \n          </li>\n        \n          <li>\n            \n                server/\n                \n            \n          </li>\n        \n          <li>\n            \n                ssh/\n                \n            \n          </li>\n        \n          <li>\n            \n                structure/\n                \n            \n          </li>\n        \n          <li>\n            \n                task/\n                \n            \n          </li>\n        \n          <li>\n            \n                update/\n                \n            \n          </li>\n        \n          <li>\n            \n                userauth/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-server/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-server/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^user-auth/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^shell$\n                \n            \n          </li>\n        \n          <li>\n            \n                ^swagger$\n                \n            \n          </li>\n        \n          <li>\n            \n                drf-swagger/\n                [name='schema-swagger-ui']\n            \n          </li>\n        \n      </ol>\n      <p>\n        \n        The current path, <code>consumer/net-object/8.8.8.8</code>, didn't match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/81c318a5-0f90-481f-8331-b6e7837dfebe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"81c318a5-0f90-481f-8331-b6e7837dfebe"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:21:40 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										}
									]
								},
								{
									"name": "Create a Network with an invalid name Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for keys in json\r",
													"// pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"//     pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"Invalid subnet address\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "// {\n//   \"name\": \"€↑\",\n//   \"description\": \"€↑\",\n//   \"ip\": \"123.123.124.0/30\",\n//   \"subtype\": \"network\"\n// }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										}
									]
								},
								{
									"name": "Create a Network with a name of 129 characters Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// THERE IS A RESTRICTION ON 256\r",
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for keys in json\r",
													"// pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"//     pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"Invalid subnet address\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "// {\n//   \"name\": \"iLDzvjHmCyxXnZdiWBcDtW7nui7ADSA2TExbNGpsAXHeXC2ZYAHEUHJsy5WpXJeQ2YPwGtzS6QZ8hjfPHhExEvBUwmHD38hbVXHWCeyMBCAsMcPAiDgvNi2mVvSLVAEL1\",\n//   \"ip\": \"123.123.124.0/30\",\n//   \"subtype\": \"network\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										}
									]
								},
								{
									"name": "Create a Network with a description of 1025 characters Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for keys in json\r",
													"// pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"//     pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"Invalid subnet address\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "// {\n//   \"name\": \"name1025\",\n//   \"description\": \"GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111\",\n//   \"ip\": \"123.125.124.0/30\",\n//   \"subtype\": \"network\"\n// }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										}
									]
								},
								{
									"name": "Create a Network with the wrong address Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Invalid subnet address\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.ip[0]).to.include(\"Invalid subnet address: 123.125.124.1/30.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"name5\",\n  \"description\": \"desc\",\n  \"ip\": \"123.125.124.1/30\",\n  \"subtype\": \"network\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"name5\",\n  \"description\": \"desc\",\n  \"ip\": \"123.125.124.1/30\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"ip\": [\r\n        \"#Code 611: Invalid subnet address: 123.125.124.1/30.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Create a Network Duplicate at Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for data in the response in json\r",
													"// pm.test(\"Invalid subnet address\", function () {\r",
													"//     pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"//     pm.expect(pm.response.text()).to.include(\"Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });\r",
													"// pm.test(\"There is an error in the array\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"#Code 611: Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"name5\",\n  \"description\": \"desc\",\n  \"ip\": \"123.125.124.1/30\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"ip\": [\r\n        \"#Code 611: Invalid subnet address: 123.125.124.1/30.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Create a Network duplicate by name Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"There is an error in the array\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"#Code 611: Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"name5\",\n  \"description\": \"desc\",\n  \"ip\": \"123.125.124.1/30\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"ip\": [\r\n        \"#Code 611: Invalid subnet address: 123.125.124.1/30.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Create a Network without a mandatory field Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Required field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.ip[0]).to.eql(\"#Code 10: Required field.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"name\",\n  \"description\": \"description\",\n  \"subtype\": \"network\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"name\",\n  \"description\": \"description\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"ip\": [\r\n        \"#Code 10: Required field.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Change Network with incorrect data Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Enter a valid address\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.ip[0]).to.eql(\"Enter a valid IPv4 or IPv6 address.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Changed name Net\",\n  \"description\": \"{{$randomFullName}}\",\n  \"ip\": \"192.168.0.0.0/24\",\n  \"subtype\": \"network\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidNetObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:40:21 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 10,\r\n    \"uuid\": \"26b242e5-a450-45f7-90e5-79c7ff39ce7f\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:40:21\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"172.17.1.1\",\r\n    \"description\": \"Modified_object\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"172.17.1.1\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Changed name Net\",\n  \"description\": \"{{$randomFullName}}\",\n  \"ip\": \"192.168.0.0.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidNetObj}}",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 15:20:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "83"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"ip\": [\n        \"Enter a valid IPv4 or IPv6 address.\"\n    ]\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Change Network with incorrect type Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Enter a valid address\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.non_field_errors[0]).to.eql(\"#Code 284: Changing the network object type is prohibited.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Changed name Net\",\n  \"description\": \"{{$randomFullName}}\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"ip\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidNetObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:40:21 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 10,\r\n    \"uuid\": \"26b242e5-a450-45f7-90e5-79c7ff39ce7f\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:40:21\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"172.17.1.1\",\r\n    \"description\": \"Modified_object\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"172.17.1.1\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Changed name Net\",\n  \"description\": \"{{$randomFullName}}\",\n  \"ip\": \"192.168.0.0.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidNetObj}}",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 15:20:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "83"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"ip\": [\n        \"Enter a valid IPv4 or IPv6 address.\"\n    ]\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Change Network without a mandatory field Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"Enter a valid address\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"Enter a valid IPv4 or IPv6 address.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Changed name net again\",\n  \"description\": \"{{$randomFullName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidNetObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:40:21 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 10,\r\n    \"uuid\": \"26b242e5-a450-45f7-90e5-79c7ff39ce7f\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:40:21\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"172.17.1.1\",\r\n    \"description\": \"Modified_object\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"172.17.1.1\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Change partially Network with incorrect data Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Enter a valid address\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.ip[0]).to.eql(\"Enter a valid IPv4 or IPv6 address.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"192.168.0.0.0/24\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidNetObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"192.168.0.0.0/24\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidNetObj}}",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 07:38:28 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "83"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"ip\": [\n        \"Enter a valid IPv4 or IPv6 address.\"\n    ]\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Delete a non-existing network Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Status is 'Not found.'\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Not found.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/6d319e7c-7777-7777-7777-e4b4234ce376/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"6d319e7c-7777-7777-7777-e4b4234ce376",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "204 No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/f2a62e12-05c8-4021-9de3-f43c14219525/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"f2a62e12-05c8-4021-9de3-f43c14219525",
														""
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:56:17 GMT"
												},
												{
													"key": "Content-Length",
													"value": "0"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:50:32 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>ContentNotRenderedError\n          at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>ContentNotRenderedError\n       at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</h1>\n  <pre class=\"exception_value\">The response content must be rendered before it can be accessed.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>DELETE</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>ContentNotRenderedError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>The response content must be rendered before it can be accessed.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/template/response.py in content, line 128</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:50:32 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686077498944\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686077498944\">\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686077498944\">\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077498944')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077498944\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>ContentNotRenderedError(&#39;The response content must be rendered before it can be accessed.&#39;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686077972640\">\n              \n                <ol start=\"89\" class=\"pre-context\" id=\"pre139686077972640\">\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>            response = self.process_request(request)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        response = response or self.get_response(request)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"96\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>            response = self.process_response(request, response)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='97' class=\"post-context\" id=\"post139686077972640\">\n                  \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077972640')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077972640\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_response</code>\n\n          \n            <div class=\"context\" id=\"c139686078140656\">\n              \n                <ol start=\"105\" class=\"pre-context\" id=\"pre139686078140656\">\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        if response.status_code == 404:</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>            if self.should_redirect_with_slash(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>                return self.response_redirect_class(self.get_full_path_with_slash(request))</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        # Add the Content-Length header to non-streaming responses if not</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        # already set.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        if not response.streaming and not response.has_header(&#39;Content-Length&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"112\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>            response[&#39;Content-Length&#39;] = str(len(response.content))</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='113' class=\"post-context\" id=\"post139686078140656\">\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>class BrokenLinkEmailsMiddleware(MiddlewareMixin):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686078140656')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686078140656\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/template/response.py</code> in <code>content</code>\n\n          \n            <div class=\"context\" id=\"c139686077554032\">\n              \n                <ol start=\"121\" class=\"pre-context\" id=\"pre139686077554032\">\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            )</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        return super().__iter__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    @property</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    def content(self):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        if not self._is_rendered:</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            raise ContentNotRenderedError(</pre></li>\n                \n                </ol>\n              \n              <ol start=\"128\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>                &#39;The response content must be rendered before it can be accessed.&#39;</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='129' class=\"post-context\" id=\"post139686077554032\">\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        return super().content</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    @content.setter</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    def content(self, value):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        &quot;&quot;&quot;Set the content for the response.&quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077554032')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077554032\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>__class__</td>\n                    <td class=\"code\"><pre>&lt;class &#39;django.template.response.SimpleTemplateResponse&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"ContentNotRenderedError at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: DELETE\nRequest URL: http://172.17.117.21/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  96.             response = self.process_response(request, response)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_response\n  112.             response[&#39;Content-Length&#39;] = str(len(response.content))\n\nFile \"/usr/lib/python3.7/site-packages/django/template/response.py\" in content\n  128.                 &#39;The response content must be rendered before it can be accessed.&#39;\n\nException Type: ContentNotRenderedError at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\nException Value: The response content must be rendered before it can be accessed.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[Built-in administrator():4fa8223e-19df-4596-9c15-f3cd93f1330a:v10013]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;afc46c14-6836-412d-a906-67b2bf75b227&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;26004&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;DELETE&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 26004)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b330a4f10&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b330a4090&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_717216_3644436&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Delete through incorrect request Network Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 404\", function () {\r",
													"//     pm.response.to.have.status(404);\r",
													"// });\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for keys in json\r",
													"// pm.test(\"Body has detail\", function () {\r",
													"//     pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"// });\r",
													"// // Checking for values in the keys\r",
													"// pm.test(\"Status is 'Not found.'\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.detail).to.eql(\"Not found.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/6d319e7c-7777-7777-7777-e4b4234ce376",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"6d319e7c-7777-7777-7777-e4b4234ce376"
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "204 No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/f2a62e12-05c8-4021-9de3-f43c14219525/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"f2a62e12-05c8-4021-9de3-f43c14219525",
														""
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:56:17 GMT"
												},
												{
													"key": "Content-Length",
													"value": "0"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:50:32 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>ContentNotRenderedError\n          at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>ContentNotRenderedError\n       at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</h1>\n  <pre class=\"exception_value\">The response content must be rendered before it can be accessed.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>DELETE</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>ContentNotRenderedError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>The response content must be rendered before it can be accessed.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/template/response.py in content, line 128</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:50:32 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686077498944\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686077498944\">\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686077498944\">\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077498944')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077498944\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>ContentNotRenderedError(&#39;The response content must be rendered before it can be accessed.&#39;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686077972640\">\n              \n                <ol start=\"89\" class=\"pre-context\" id=\"pre139686077972640\">\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>            response = self.process_request(request)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        response = response or self.get_response(request)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"96\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>            response = self.process_response(request, response)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='97' class=\"post-context\" id=\"post139686077972640\">\n                  \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077972640')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077972640\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_response</code>\n\n          \n            <div class=\"context\" id=\"c139686078140656\">\n              \n                <ol start=\"105\" class=\"pre-context\" id=\"pre139686078140656\">\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        if response.status_code == 404:</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>            if self.should_redirect_with_slash(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>                return self.response_redirect_class(self.get_full_path_with_slash(request))</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        # Add the Content-Length header to non-streaming responses if not</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        # already set.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        if not response.streaming and not response.has_header(&#39;Content-Length&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"112\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>            response[&#39;Content-Length&#39;] = str(len(response.content))</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='113' class=\"post-context\" id=\"post139686078140656\">\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>class BrokenLinkEmailsMiddleware(MiddlewareMixin):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686078140656')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686078140656\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/template/response.py</code> in <code>content</code>\n\n          \n            <div class=\"context\" id=\"c139686077554032\">\n              \n                <ol start=\"121\" class=\"pre-context\" id=\"pre139686077554032\">\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            )</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        return super().__iter__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    @property</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    def content(self):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        if not self._is_rendered:</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            raise ContentNotRenderedError(</pre></li>\n                \n                </ol>\n              \n              <ol start=\"128\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>                &#39;The response content must be rendered before it can be accessed.&#39;</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='129' class=\"post-context\" id=\"post139686077554032\">\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        return super().content</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    @content.setter</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    def content(self, value):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        &quot;&quot;&quot;Set the content for the response.&quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077554032')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077554032\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>__class__</td>\n                    <td class=\"code\"><pre>&lt;class &#39;django.template.response.SimpleTemplateResponse&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"ContentNotRenderedError at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: DELETE\nRequest URL: http://172.17.117.21/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  96.             response = self.process_response(request, response)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_response\n  112.             response[&#39;Content-Length&#39;] = str(len(response.content))\n\nFile \"/usr/lib/python3.7/site-packages/django/template/response.py\" in content\n  128.                 &#39;The response content must be rendered before it can be accessed.&#39;\n\nException Type: ContentNotRenderedError at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\nException Value: The response content must be rendered before it can be accessed.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[Built-in administrator():4fa8223e-19df-4596-9c15-f3cd93f1330a:v10013]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;afc46c14-6836-412d-a906-67b2bf75b227&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;26004&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;DELETE&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 26004)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b330a4f10&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b330a4090&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_717216_3644436&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								}
							]
						},
						{
							"name": "Destructive",
							"item": [
								{
									"name": "Create a Network without  \"Content-type\" Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 415\", function () {\r",
													"    pm.response.to.have.status(415);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Unsupported data type\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Unsupported data type \\\"\\\" in a query.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true
										}
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"bad Content-type Net\",\n  \"ip\": \"{{VarNetObj}}\",\n  \"subtype\": \"network\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 40,\r\n    \"uuid\": \"ea13f6ad-b70e-4206-a8da-aef3943d5d4b\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-09T07:56:41\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Local Net\",\r\n    \"description\": null,\r\n    \"is_enabled\": true,\r\n    \"ip\": \"192.168.0.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 79,\r\n    \"version\": 10148\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										},
										{
											"name": "415 Unsupported Media Type",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"bad Content-type\",\n  \"ip\": \"{{$randomIP}}\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 11:22:50 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "89"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"Unsupported data type \\\"\\\" in a query.\"\n}"
										}
									]
								},
								{
									"name": "Create a Network with an incorrect structure Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"JSON parse error\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.include(\"JSON parse error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"{{VarNetObj}}\",\n  \"name\": \"bad structure\" \n  \"subtype\": \"network\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 40,\r\n    \"uuid\": \"ea13f6ad-b70e-4206-a8da-aef3943d5d4b\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-09T07:56:41\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Local Net\",\r\n    \"description\": null,\r\n    \"is_enabled\": true,\r\n    \"ip\": \"192.168.0.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 79,\r\n    \"version\": 10148\r\n}"
										},
										{
											"name": "415 Unsupported Media Type",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"bad Content-type\",\n  \"ip\": \"{{$randomIP}}\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 11:22:50 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "89"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"Unsupported data type \\\"\\\" in a query.\"\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"{{VarNetObj}}\",\n  \"name\": \"bad Content-type\" \n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 11:35:48 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"JSON parse error - Expecting ',' delimiter: line 4 column 3 (char 56)\"\n}"
										}
									]
								},
								{
									"name": "Create a Network with an incorrect  \"Content-Length\" Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has code, error, error_description\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"code\");\r",
													"    pm.expect(pm.response.text()).to.include(\"error\");\r",
													"    pm.expect(pm.response.text()).to.include(\"error_description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Bad Request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error_description).to.eql(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-length": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Length",
												"value": "GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"{{VarNetObj}}\",\n  \"name\": \"bad header\",\n  \"subtype\": \"network\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 40,\r\n    \"uuid\": \"ea13f6ad-b70e-4206-a8da-aef3943d5d4b\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-09T07:56:41\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Local Net\",\r\n    \"description\": null,\r\n    \"is_enabled\": true,\r\n    \"ip\": \"192.168.0.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 79,\r\n    \"version\": 10148\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Length",
														"value": "GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"{{VarNetObj}}\",\n  \"name\": \"bad header\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 12:55:49 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Connection",
													"value": "close"
												},
												{
													"key": "ETag",
													"value": "\"6107cac5-52\""
												}
											],
											"cookie": [],
											"body": "{\n    \"code\": 400,\n    \"error\": \"bad_request\",\n    \"error_description\": \"Bad Request\"\n}"
										}
									]
								},
								{
									"name": "Create a Network Create a Network with Empty Data Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Required field\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.ip[0]).to.eql(\"#Code 10: Required field.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"\",\n  \"description\": \"\",\n  \"ip\": \"\",\n  \"subtype\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 40,\r\n    \"uuid\": \"ea13f6ad-b70e-4206-a8da-aef3943d5d4b\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-09T07:56:41\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Local Net\",\r\n    \"description\": null,\r\n    \"is_enabled\": true,\r\n    \"ip\": \"192.168.0.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 79,\r\n    \"version\": 10148\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"\",\n  \"description\": \"\",\n  \"ip\": \"\",\n  \"subtype\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 12:54:27 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "55"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"ip\": [\n        \"#Code 10: Required field.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Request Network uuid 1025 characters Destructive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Status is 'Not found.'\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Not found.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"81c318a5-0f90-481f-8330-b6e7837dfebe"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:17:24 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 6,\r\n    \"uuid\": \"81c318a5-0f90-481f-8330-b6e7837dfebe\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:00:04\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"228.57.248.119\",\r\n    \"description\": \"Kristine Rosenbaum\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"228.57.248.119\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 12:17:39 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"Not found.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Config Save/Unlock",
							"item": [
								{
									"name": "Saving Configuration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/{{CurrentIdConf}}/commit/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"{{CurrentIdConf}}",
												"commit",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/24/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"24",
														"commit",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/25/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"25",
														"commit",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 Jun 2022 14:38:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										}
									]
								},
								{
									"name": "Installing the policy on the MCC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check status\r",
													"pm.test(\"Status task is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.status).to.eql(\"ok\");\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Uuid=36\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.tasks[0]).to.length(36);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/install-policy/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"install-policy",
												""
											]
										},
										"description": "Performs policy installation on the node\n\n:post-data:\n    ::\n\n        {\n            'target': ['Serial number of the target node for the installation']\n        }\n:response:\n    ::\n\n        {\n            'task': <task_id>\n        }"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/install-policy/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"install-policy",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 13:18:42 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"ok\",\n    \"tasks\": [\n        \"e86dd596-b724-4b26-9107-ab4ac06c2efe\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Unlock the configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Waiting in \"ms\" for the policy to be installed\r",
													"setTimeout(() => {}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/free/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"free",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/lock/free/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"lock",
														"free",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Host",
					"item": [
						{
							"name": "Config Block/Create",
							"item": [
								{
									"name": "Locking configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/acquire/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"acquire",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "/acquire-config-lock",
													"path": [
														"acquire-config-lock"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates a new config",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201 and 'CurrentUuidConf'\", function () {\r",
													"    pm.response.to.have.status(201); //Checking that the answer is 201\r",
													"    var jsonData = pm.response.json(); //Create a variable and save the whole answer in it\r",
													"    var tempUuid = jsonData.uuid; //Create a variable and place the value in it \"uuid\"\r",
													"    pm.environment.set('CurrentUuidConf', tempUuid); //Passing uuid value to a variable 'CurrentUuidConf'\r",
													"    var tempId = jsonData.id; //Create a variable and place the value in it \"id\"\r",
													"    pm.environment.set('CurrentIdConf', tempId); //Passing the id value into a variable 'CurrentIdConf'\r",
													"    //console.info(\"Successfully created IdConf \" + pm.environment.get(\"CurrentIdConf\") + \" with uuid \" + pm.environment.get(\"CurrentUuidConf\")) //Write a message in the log\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"id\");\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"is_active\");\r",
													"    pm.expect(pm.response.text()).to.include(\"source\");\r",
													"    pm.expect(pm.response.text()).to.include(\"version\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"{{$randomUUID}}\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/config/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													},
													{
														"key": "Accept",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/config/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"id\": 24,\n    \"name\": \"string\",\n    \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n    \"is_active\": true,\n    \"domain_level\": 1,\n    \"subtype\": \"adminedit\",\n    \"description\": \"string\",\n    \"source\": 1,\n    \"version\": 10042\n}"
										}
									]
								}
							]
						},
						{
							"name": "Positive",
							"item": [
								{
									"name": "Create a Host without options Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name and IP is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"Simple ip\");\r",
													"    pm.expect(jsonData.ip).to.eql(\"7.7.8.8\");\r",
													"    pm.expect(jsonData.subtype).to.eql(\"ip\");\r",
													"});\r",
													"// Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"pm.environment.set(\"UuidIpObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Simple ip\",\n  \"ip\": \"7.7.8.8\",\n  \"subtype\": \"ip\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Simple ip\",\n  \"ip\": \"7.7.8.8\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 13:32:13 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "244"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 181,\n    \"uuid\": \"96972f21-0213-4693-8f9c-965ff21cd54b\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-20T13:32:13\",\n    \"domain_level\": 1,\n    \"name\": \"Simple ip\",\n    \"description\": null,\n    \"is_enabled\": true,\n    \"ip\": \"7.7.8.8\",\n    \"subtype\": \"ip\",\n    \"config\": 121,\n    \"version\": 10228\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Simple ip\",\n  \"ip\": \"7.7.8.888\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 13:56:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "83"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"ip\": [\n        \"Enter a valid IPv4 or IPv6 address.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Request Created Host Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name, IP and Network is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"Simple ip\");\r",
													"    pm.expect(jsonData.ip).to.eql(\"7.7.8.8\");\r",
													"    pm.expect(jsonData.subtype).to.eql(\"ip\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidIpObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"81c318a5-0f90-481f-8330-b6e7837dfebe"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:17:24 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 6,\r\n    \"uuid\": \"81c318a5-0f90-481f-8330-b6e7837dfebe\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:00:04\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"228.57.248.119\",\r\n    \"description\": \"Kristine Rosenbaum\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"228.57.248.119\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/8.8.8.8",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"8.8.8.8"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:19:32 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Cookie"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /consumer/net-object/8.8.8.8</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>http://172.17.117.21/consumer/net-object/8.8.8.8</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>djdb.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                config/\n                \n            \n          </li>\n        \n          <li>\n            \n                aserv/\n                \n            \n          </li>\n        \n          <li>\n            \n                administration/\n                \n            \n          </li>\n        \n          <li>\n            \n                backup/\n                \n            \n          </li>\n        \n          <li>\n            \n                cert/\n                \n            \n          </li>\n        \n          <li>\n            \n                cgw/\n                \n            \n          </li>\n        \n          <li>\n            \n                channels/\n                \n            \n          </li>\n        \n          <li>\n            \n                cluster/\n                \n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/$\n                [name='net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/mass-delete/$\n                [name='net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/mass-delete\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/related-cgw/$\n                [name='net-object-related-cgw']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/related-cgw\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-related-cgw']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/upload/$\n                [name='net-object-upload']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/upload\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-upload']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy/$\n                [name='password-policy-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='password-policy-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='password-policy-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='password-policy-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/$\n                [name='user-net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/full-view/$\n                [name='user-net-object-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/full-view\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/mass-delete/$\n                [name='user-net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/mass-delete\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='user-net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/$\n                [name='user-profile-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-profile-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/full-view/$\n                [name='user-profile-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/full-view\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-profile-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='user-profile-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-profile-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^$\n                [name='api-root']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='api-root']\n            \n          </li>\n        \n          <li>\n            \n                dos-protect/\n                \n            \n          </li>\n        \n          <li>\n            \n                firewall/\n                \n            \n          </li>\n        \n          <li>\n            \n                group/\n                \n            \n          </li>\n        \n          <li>\n            \n                install-policy/\n                \n            \n          </li>\n        \n          <li>\n            \n                interfaces/\n                \n            \n          </li>\n        \n          <li>\n            \n                ips/\n                \n            \n          </li>\n        \n          <li>\n            \n                keys/\n                \n            \n          </li>\n        \n          <li>\n            \n                license/\n                \n            \n          </li>\n        \n          <li>\n            \n                links/\n                \n            \n          </li>\n        \n          <li>\n            \n                logs/\n                \n            \n          </li>\n        \n          <li>\n            \n                multiwan/\n                \n            \n          </li>\n        \n          <li>\n            \n                netflow/\n                \n            \n          </li>\n        \n          <li>\n            \n                networking/\n                \n            \n          </li>\n        \n          <li>\n            \n                param/\n                \n            \n          </li>\n        \n          <li>\n            \n                qos/\n                \n            \n          </li>\n        \n          <li>\n            \n                rule/\n                \n            \n          </li>\n        \n          <li>\n            \n                server/\n                \n            \n          </li>\n        \n          <li>\n            \n                ssh/\n                \n            \n          </li>\n        \n          <li>\n            \n                structure/\n                \n            \n          </li>\n        \n          <li>\n            \n                task/\n                \n            \n          </li>\n        \n          <li>\n            \n                update/\n                \n            \n          </li>\n        \n          <li>\n            \n                userauth/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-server/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-server/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^user-auth/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^shell$\n                \n            \n          </li>\n        \n          <li>\n            \n                ^swagger$\n                \n            \n          </li>\n        \n          <li>\n            \n                drf-swagger/\n                [name='schema-swagger-ui']\n            \n          </li>\n        \n      </ol>\n      <p>\n        \n        The current path, <code>consumer/net-object/8.8.8.8</code>, didn't match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/81c318a5-0f90-481f-8331-b6e7837dfebe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"81c318a5-0f90-481f-8331-b6e7837dfebe"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:21:40 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										}
									]
								},
								{
									"name": "Create a Host with additional parameters Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var VarIpObj = pm.variables.replaceIn('{{$randomIP}}'); //Assign a random value to the new variable\r",
													"pm.environment.set('VarIpObj', VarIpObj); //Passing the new value into a variable\r",
													"// console.log(VarIpObj);\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"IP is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.subtype).to.eql(\"ip\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarIpObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"{{VarIpObj}}\",\n  \"subtype\": \"ip\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"1.1.1.1\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"1.1.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"1.1.1.1\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"1.1.1.1\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.888\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"ip\": [\r\n        \"Enter a valid IPv4 or IPv6 address.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Create a Host with valid characters Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name,Desc,ip is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"aazAZa09`!@#$^()-=_+[]’;,\");\r",
													"    pm.expect(jsonData.description).to.eql(\"aazAZa09`!@#$^()-=_+[]’;,\");\r",
													"    pm.expect(jsonData.subtype).to.eql(\"ip\");\r",
													"});\r",
													"// Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"pm.environment.set(\"UuidIpDelObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"aazAZa09`!@#$^()-=_+[]’;,\",\n  \"description\": \"aazAZa09`!@#$^()-=_+[]’;,\",\n  \"ip\": \"8.8.8.9\",\n  \"subtype\": \"ip\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"aazAZa09`!@#$^()-=_+[]’;,\",\n  \"description\": \"aazAZa09`!@#$^()-=_+[]’;,\",\n  \"ip\": \"8.8.8.9\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 183,\r\n    \"uuid\": \"c9e32872-2d4f-4e22-b9e4-bb791a5ed88d\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-20T13:50:31\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"azAZa09`!@#$^()-=_+[]’;,\",\r\n    \"description\": \"azAZa09`!@#$^()-=_+[]’;,\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"8.8.8.9\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 121,\r\n    \"version\": 10228\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.888\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"ip\": [\r\n        \"Enter a valid IPv4 or IPv6 address.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Change Host Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name,Desc,network is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"Changed name ip\");\r",
													"    pm.expect(jsonData.ip).to.eql(\"9.9.1.1\");\r",
													"    pm.expect(jsonData.subtype).to.eql(\"ip\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Changed name ip\",\n  \"description\": \"{{$randomFullName}}\",\n  \"ip\": \"9.9.1.1\",\n  \"subtype\": \"ip\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidIpObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:40:21 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 10,\r\n    \"uuid\": \"26b242e5-a450-45f7-90e5-79c7ff39ce7f\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:40:21\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"172.17.1.1\",\r\n    \"description\": \"Modified_object\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"172.17.1.1\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Change partially Host Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name,Desc,network is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Modified_object_PUTCH_IP\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Modified_object_PUTCH_IP\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidIpObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Modified_object_PUTCH_IP\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidNetObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:40:21 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 181,\r\n    \"uuid\": \"96972f21-0213-4693-8f9c-965ff21cd54b\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-20T13:55:41\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Changed name ip\",\r\n    \"description\": \"Modified_object_PUTCH_IP\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"9.9.1.1\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 121,\r\n    \"version\": 10228\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Delete Host Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpDelObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidIpDelObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "204 No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/f2a62e12-05c8-4021-9de3-f43c14219525/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"f2a62e12-05c8-4021-9de3-f43c14219525",
														""
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:56:17 GMT"
												},
												{
													"key": "Content-Length",
													"value": "0"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:50:32 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>ContentNotRenderedError\n          at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>ContentNotRenderedError\n       at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</h1>\n  <pre class=\"exception_value\">The response content must be rendered before it can be accessed.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>DELETE</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>ContentNotRenderedError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>The response content must be rendered before it can be accessed.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/template/response.py in content, line 128</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:50:32 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686077498944\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686077498944\">\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686077498944\">\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077498944')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077498944\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>ContentNotRenderedError(&#39;The response content must be rendered before it can be accessed.&#39;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686077972640\">\n              \n                <ol start=\"89\" class=\"pre-context\" id=\"pre139686077972640\">\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>            response = self.process_request(request)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        response = response or self.get_response(request)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"96\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>            response = self.process_response(request, response)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='97' class=\"post-context\" id=\"post139686077972640\">\n                  \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077972640')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077972640\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_response</code>\n\n          \n            <div class=\"context\" id=\"c139686078140656\">\n              \n                <ol start=\"105\" class=\"pre-context\" id=\"pre139686078140656\">\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        if response.status_code == 404:</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>            if self.should_redirect_with_slash(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>                return self.response_redirect_class(self.get_full_path_with_slash(request))</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        # Add the Content-Length header to non-streaming responses if not</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        # already set.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        if not response.streaming and not response.has_header(&#39;Content-Length&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"112\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>            response[&#39;Content-Length&#39;] = str(len(response.content))</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='113' class=\"post-context\" id=\"post139686078140656\">\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>class BrokenLinkEmailsMiddleware(MiddlewareMixin):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686078140656')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686078140656\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/template/response.py</code> in <code>content</code>\n\n          \n            <div class=\"context\" id=\"c139686077554032\">\n              \n                <ol start=\"121\" class=\"pre-context\" id=\"pre139686077554032\">\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            )</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        return super().__iter__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    @property</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    def content(self):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        if not self._is_rendered:</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            raise ContentNotRenderedError(</pre></li>\n                \n                </ol>\n              \n              <ol start=\"128\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>                &#39;The response content must be rendered before it can be accessed.&#39;</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='129' class=\"post-context\" id=\"post139686077554032\">\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        return super().content</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    @content.setter</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    def content(self, value):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        &quot;&quot;&quot;Set the content for the response.&quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077554032')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077554032\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>__class__</td>\n                    <td class=\"code\"><pre>&lt;class &#39;django.template.response.SimpleTemplateResponse&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"ContentNotRenderedError at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: DELETE\nRequest URL: http://172.17.117.21/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  96.             response = self.process_response(request, response)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_response\n  112.             response[&#39;Content-Length&#39;] = str(len(response.content))\n\nFile \"/usr/lib/python3.7/site-packages/django/template/response.py\" in content\n  128.                 &#39;The response content must be rendered before it can be accessed.&#39;\n\nException Type: ContentNotRenderedError at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\nException Value: The response content must be rendered before it can be accessed.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[Built-in administrator():4fa8223e-19df-4596-9c15-f3cd93f1330a:v10013]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;afc46c14-6836-412d-a906-67b2bf75b227&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;26004&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;DELETE&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 26004)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b330a4f10&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b330a4090&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_717216_3644436&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "Create a Host with an invalid name Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for keys in json\r",
													"// pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"//     pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"Invalid subnet address\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "// {\n//   \"name\": \"€↑\",\n//   \"description\": \"€↑\",\n//   \"ip\": \"123.123.124.13\",\n//   \"subtype\": \"ip\"\n// }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										}
									]
								},
								{
									"name": "Create a Host with a name of 129 characters Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// THERE IS A RESTRICTION ON 256\r",
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for keys in json\r",
													"// pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"//     pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"Invalid subnet address\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "// {\n//   \"name\": \"iLDzvjHmCyxXnZdiWBcDtW7nui7ADSA2TExbNGpsAXHeXC2ZYAHEUHJsy5WpXJeQ2YPwGtzS6QZ8hjfPHhExEvBUwmHD38hbVXHWCeyMBCAsMcPAiDgvNi2mVvSLVAEL1\",\n//   \"ip\": \"123.123.124.14\",\n//   \"subtype\": \"ip\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										}
									]
								},
								{
									"name": "Create a Host with a description of 1025 characters Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for keys in json\r",
													"// pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"//     pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"Invalid subnet address\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "// {\n//   \"name\": \"name10233\",\n//   \"description\": \"GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111\",\n//   \"ip\": \"123.125.124.14\",\n//   \"subtype\": \"ip\"\n// }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										}
									]
								},
								{
									"name": "Create a Host with the wrong address Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Invalid subnet address\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.ip[0]).to.include(\"Enter a valid address IPv4\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"name7\",\n  \"description\": \"desc7\",\n  \"ip\": \"123.125.124.555\",\n  \"subtype\": \"ip\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"name7\",\n  \"description\": \"desc7\",\n  \"ip\": \"123.125.124.555\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"ip\": [\r\n        \"Enter a valid IPv4 or IPv6 address.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Create a Host Duplicate at Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for data in the response in json\r",
													"// pm.test(\"Invalid subnet address\", function () {\r",
													"//     pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"//     pm.expect(pm.response.text()).to.include(\"Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });\r",
													"// pm.test(\"There is an error in the array\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"#Code 611: Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"name5\",\n  \"description\": \"desc\",\n  \"ip\": \"123.125.124.1/30\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"ip\": [\r\n        \"#Code 611: Invalid subnet address: 123.125.124.1/30.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Create a Host duplicate by name Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"There is an error in the array\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"#Code 611: Incorrect subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"name5\",\n  \"description\": \"desc\",\n  \"ip\": \"123.125.124.1/30\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"ip\": [\r\n        \"#Code 611: Invalid subnet address: 123.125.124.1/30.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Change Host with incorrect data Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Enter a valid address\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.ip[0]).to.eql(\"Enter a valid IPv4 or IPv6 address.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Changed name IP\",\n  \"description\": \"{{$randomFullName}}\",\n  \"ip\": \"192.168.0.0.1\",\n  \"subtype\": \"ip\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidIpObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:40:21 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 10,\r\n    \"uuid\": \"26b242e5-a450-45f7-90e5-79c7ff39ce7f\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:40:21\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"172.17.1.1\",\r\n    \"description\": \"Modified_object\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"172.17.1.1\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Changed name IP\",\n  \"description\": \"{{$randomFullName}}\",\n  \"ip\": \"192.168.0.0.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 15:16:47 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "83"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"ip\": [\n        \"Enter a valid IPv4 or IPv6 address.\"\n    ]\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Change Host without a mandatory field Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"Enter a valid address\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"Enter a valid IPv4 or IPv6 address.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Changed name ip again\",\n  \"description\": \"{{$randomFullName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidIpObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:40:21 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 10,\r\n    \"uuid\": \"26b242e5-a450-45f7-90e5-79c7ff39ce7f\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:40:21\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"172.17.1.1\",\r\n    \"description\": \"Modified_object\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"172.17.1.1\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Change partially Host with incorrect data Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Enter a valid address\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.ip[0]).to.eql(\"Enter a valid IPv4 or IPv6 address.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"192.168.0.0.1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidIpObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"192.168.0.0.0/24\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidNetObj}}",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 07:38:28 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "83"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"ip\": [\n        \"Enter a valid IPv4 or IPv6 address.\"\n    ]\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								}
							]
						},
						{
							"name": "Destructive",
							"item": [
								{
									"name": "Create a Range without \"Content-type\" Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 415\", function () {\r",
													"    pm.response.to.have.status(415);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Unsupported data type\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Unsupported data type \\\"\\\" in a query.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true
										}
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"bad Content-type Range\",\n  \"ip\": \"{{VarRangeObj}}\",\n  \"subtype\": \"range\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 40,\r\n    \"uuid\": \"ea13f6ad-b70e-4206-a8da-aef3943d5d4b\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-09T07:56:41\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Local Net\",\r\n    \"description\": null,\r\n    \"is_enabled\": true,\r\n    \"ip\": \"192.168.0.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 79,\r\n    \"version\": 10148\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										},
										{
											"name": "415 Unsupported Media Type",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"bad Content-type Range\",\n  \"ip\": \"{{VarRangeObj}}\",\n  \"subtype\": \"range\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 11:22:50 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "89"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"Unsupported data type \\\"\\\" in a query.\"\n}"
										}
									]
								},
								{
									"name": "Create a Range with an incorrect structure Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"JSON parse error\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.include(\"JSON parse error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"{{VarRangeObj}}\",\n  \"name\": \"bad structure\",\n  \"subtype\": \"range\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 40,\r\n    \"uuid\": \"ea13f6ad-b70e-4206-a8da-aef3943d5d4b\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-09T07:56:41\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Local Net\",\r\n    \"description\": null,\r\n    \"is_enabled\": true,\r\n    \"ip\": \"192.168.0.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 79,\r\n    \"version\": 10148\r\n}"
										},
										{
											"name": "415 Unsupported Media Type",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"{{VarRangeObj}}\",\n  \"name\": \"bad structure\" \n  \"subtype\": \"range\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 11:22:50 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "89"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"Unsupported data type \\\"\\\" in a query.\"\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"{{VarNetObj}}\",\n  \"name\": \"bad Content-type\" \n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 11:35:48 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"JSON parse error - Expecting ',' delimiter: line 4 column 3 (char 56)\"\n}"
										}
									]
								},
								{
									"name": "Create a Host with an incorrect  \"Content-Length\" Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has code, error, error_description\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"code\");\r",
													"    pm.expect(pm.response.text()).to.include(\"error\");\r",
													"    pm.expect(pm.response.text()).to.include(\"error_description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Bad Request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error_description).to.eql(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-length": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Length",
												"value": "GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"{{VarRangeObj}}\",\n  \"name\": \"bad header\",\n  \"subtype\": \"range\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 40,\r\n    \"uuid\": \"ea13f6ad-b70e-4206-a8da-aef3943d5d4b\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-09T07:56:41\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Local Net\",\r\n    \"description\": null,\r\n    \"is_enabled\": true,\r\n    \"ip\": \"192.168.0.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 79,\r\n    \"version\": 10148\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Length",
														"value": "GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"{{VarRangeObj}}\",\n  \"name\": \"bad header\",\n  \"subtype\": \"range\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 12:55:49 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Connection",
													"value": "close"
												},
												{
													"key": "ETag",
													"value": "\"6107cac5-52\""
												}
											],
											"cookie": [],
											"body": "{\n    \"code\": 400,\n    \"error\": \"bad_request\",\n    \"error_description\": \"Bad Request\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Config Save/Unlock",
							"item": [
								{
									"name": "Saving Configuration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/{{CurrentIdConf}}/commit/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"{{CurrentIdConf}}",
												"commit",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/24/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"24",
														"commit",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/25/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"25",
														"commit",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 Jun 2022 14:38:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										}
									]
								},
								{
									"name": "Installing the policy on the MCC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check status\r",
													"pm.test(\"Status task is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.status).to.eql(\"ok\");\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Uuid=36\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.tasks[0]).to.length(36);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/install-policy/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"install-policy",
												""
											]
										},
										"description": "Performs policy installation on the node\n\n:post-data:\n    ::\n\n        {\n            'target': ['Serial number of the target node for the installation']\n        }\n:response:\n    ::\n\n        {\n            'task': <task_id>\n        }"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/install-policy/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"install-policy",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 13:18:42 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"ok\",\n    \"tasks\": [\n        \"e86dd596-b724-4b26-9107-ab4ac06c2efe\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Unlock the configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Waiting in \"ms\" for the policy to be installed\r",
													"setTimeout(() => {}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/free/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"free",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/lock/free/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"lock",
														"free",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Address range",
					"item": [
						{
							"name": "Config Block/Create",
							"item": [
								{
									"name": "Locking configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/acquire/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"acquire",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "/acquire-config-lock",
													"path": [
														"acquire-config-lock"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates a new config",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201 and 'CurrentUuidConf'\", function () {\r",
													"    pm.response.to.have.status(201); //Checking that the answer is 201\r",
													"    var jsonData = pm.response.json(); //Create a variable and save the whole answer in it\r",
													"    var tempUuid = jsonData.uuid; //Create a variable and place the value in it \"uuid\"\r",
													"    pm.environment.set('CurrentUuidConf', tempUuid); //Passing uuid value to a variable 'CurrentUuidConf'\r",
													"    var tempId = jsonData.id; //Create a variable and place the value in it \"id\"\r",
													"    pm.environment.set('CurrentIdConf', tempId); //Passing the id value into a variable 'CurrentIdConf'\r",
													"    //console.info(\"Successfully created IdConf \" + pm.environment.get(\"CurrentIdConf\") + \" with uuid \" + pm.environment.get(\"CurrentUuidConf\")) //Write a message in the log\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"id\");\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"is_active\");\r",
													"    pm.expect(pm.response.text()).to.include(\"source\");\r",
													"    pm.expect(pm.response.text()).to.include(\"version\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"{{$randomUUID}}\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/config/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													},
													{
														"key": "Accept",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/config/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"id\": 24,\n    \"name\": \"string\",\n    \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n    \"is_active\": true,\n    \"domain_level\": 1,\n    \"subtype\": \"adminedit\",\n    \"description\": \"string\",\n    \"source\": 1,\n    \"version\": 10042\n}"
										}
									]
								}
							]
						},
						{
							"name": "Positive",
							"item": [
								{
									"name": "Create a Range without options Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name, IP and Range is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"Simple range\");\r",
													"    pm.expect(jsonData.ip).to.eql(\"7.7.8.8-7.7.9.9\");\r",
													"    pm.expect(jsonData.subtype).to.eql(\"range\");\r",
													"});\r",
													"// Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"pm.environment.set(\"UuidRangeObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Simple range\",\n  \"ip\": \"7.7.8.8-7.7.9.9\",\n  \"subtype\": \"range\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Simple range\",\n  \"ip\": \"7.7.8.8-7.7.9.9\",\n  \"subtype\": \"range\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 13:32:13 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "244"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 192,\n    \"uuid\": \"3487e438-8a23-4e27-8da8-3023a578049d\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T07:52:08\",\n    \"domain_level\": 1,\n    \"name\": \"Simple range\",\n    \"description\": null,\n    \"is_enabled\": true,\n    \"ip\": \"7.7.8.8-7.7.9.9\",\n    \"subtype\": \"range\",\n    \"config\": 137,\n    \"version\": 10260\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Simple ip\",\n  \"ip\": \"7.7.8.888\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 13:56:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "83"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"ip\": [\n        \"Enter a valid IPv4 or IPv6 address.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Request Range Host Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name, IP and Range is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"Simple range\");\r",
													"    pm.expect(jsonData.ip).to.eql(\"7.7.8.8-7.7.9.9\");\r",
													"    pm.expect(jsonData.subtype).to.eql(\"range\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidRangeObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidRangeObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"81c318a5-0f90-481f-8330-b6e7837dfebe"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:17:24 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 192,\r\n    \"uuid\": \"3487e438-8a23-4e27-8da8-3023a578049d\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-21T07:52:08\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Simple range\",\r\n    \"description\": null,\r\n    \"is_enabled\": true,\r\n    \"ip\": \"7.7.8.8-7.7.9.9\",\r\n    \"subtype\": \"range\",\r\n    \"config\": 137,\r\n    \"version\": 10260\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/8.8.8.8",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"8.8.8.8"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:19:32 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Cookie"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /consumer/net-object/8.8.8.8</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>http://172.17.117.21/consumer/net-object/8.8.8.8</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>djdb.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                config/\n                \n            \n          </li>\n        \n          <li>\n            \n                aserv/\n                \n            \n          </li>\n        \n          <li>\n            \n                administration/\n                \n            \n          </li>\n        \n          <li>\n            \n                backup/\n                \n            \n          </li>\n        \n          <li>\n            \n                cert/\n                \n            \n          </li>\n        \n          <li>\n            \n                cgw/\n                \n            \n          </li>\n        \n          <li>\n            \n                channels/\n                \n            \n          </li>\n        \n          <li>\n            \n                cluster/\n                \n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/$\n                [name='net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/mass-delete/$\n                [name='net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/mass-delete\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/related-cgw/$\n                [name='net-object-related-cgw']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/related-cgw\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-related-cgw']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/upload/$\n                [name='net-object-upload']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/upload\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-upload']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^net-object/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy/$\n                [name='password-policy-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='password-policy-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='password-policy-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^password-policy/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='password-policy-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/$\n                [name='user-net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/full-view/$\n                [name='user-net-object-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/full-view\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/mass-delete/$\n                [name='user-net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/mass-delete\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-mass-delete']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='user-net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-net-object/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-net-object-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/$\n                [name='user-profile-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-profile-list']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/full-view/$\n                [name='user-profile-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/full-view\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-profile-full-view']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/(?P&lt;uuid&gt;[^/.]+)/$\n                [name='user-profile-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^user-profile/(?P&lt;uuid&gt;[^/.]+)\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='user-profile-detail']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^$\n                [name='api-root']\n            \n          </li>\n        \n          <li>\n            \n                consumer/\n                \n            \n                ^\\.(?P&lt;format&gt;[a-z0-9]+)/?$\n                [name='api-root']\n            \n          </li>\n        \n          <li>\n            \n                dos-protect/\n                \n            \n          </li>\n        \n          <li>\n            \n                firewall/\n                \n            \n          </li>\n        \n          <li>\n            \n                group/\n                \n            \n          </li>\n        \n          <li>\n            \n                install-policy/\n                \n            \n          </li>\n        \n          <li>\n            \n                interfaces/\n                \n            \n          </li>\n        \n          <li>\n            \n                ips/\n                \n            \n          </li>\n        \n          <li>\n            \n                keys/\n                \n            \n          </li>\n        \n          <li>\n            \n                license/\n                \n            \n          </li>\n        \n          <li>\n            \n                links/\n                \n            \n          </li>\n        \n          <li>\n            \n                logs/\n                \n            \n          </li>\n        \n          <li>\n            \n                multiwan/\n                \n            \n          </li>\n        \n          <li>\n            \n                netflow/\n                \n            \n          </li>\n        \n          <li>\n            \n                networking/\n                \n            \n          </li>\n        \n          <li>\n            \n                param/\n                \n            \n          </li>\n        \n          <li>\n            \n                qos/\n                \n            \n          </li>\n        \n          <li>\n            \n                rule/\n                \n            \n          </li>\n        \n          <li>\n            \n                server/\n                \n            \n          </li>\n        \n          <li>\n            \n                ssh/\n                \n            \n          </li>\n        \n          <li>\n            \n                structure/\n                \n            \n          </li>\n        \n          <li>\n            \n                task/\n                \n            \n          </li>\n        \n          <li>\n            \n                update/\n                \n            \n          </li>\n        \n          <li>\n            \n                userauth/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-objects/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-server/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^api-v1-server/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^user-auth/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^shell$\n                \n            \n          </li>\n        \n          <li>\n            \n                ^swagger$\n                \n            \n          </li>\n        \n          <li>\n            \n                drf-swagger/\n                [name='schema-swagger-ui']\n            \n          </li>\n        \n      </ol>\n      <p>\n        \n        The current path, <code>consumer/net-object/8.8.8.8</code>, didn't match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/81c318a5-0f90-481f-8331-b6e7837dfebe",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"81c318a5-0f90-481f-8331-b6e7837dfebe"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:21:40 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										}
									]
								},
								{
									"name": "Create a Range with additional parameters Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var VarRangeObjCal = pm.variables.replaceIn('{{$randomSemver}}'+'.0'); //Creating the first part of the Diapason Ip\r",
													"pm.variables.set('VarRangeObjCal', VarRangeObjCal); //Passing the new value into a variable\r",
													"var VarRangeObjCut = VarRangeObjCal.slice(0,-1); //Cut off the last character\r",
													"var VarRangeObj = pm.variables.replaceIn(VarRangeObjCal + '-' + (VarRangeObjCut + '5')); //Assign a new variable to the ip address range\r",
													"pm.environment.set('VarRangeObj', VarRangeObj); //Passing the new value into a variable"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Range is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.subtype).to.eql(\"range\");\r",
													"});\r",
													"// Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"pm.environment.set(\"UuidRangeObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarRangeObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"{{VarRangeObj}}\",\n  \"subtype\": \"range\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarRangeObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"{{VarRangeObj}}\",\n  \"subtype\": \"range\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 193,\r\n    \"uuid\": \"1533d9ab-4c6e-4c5d-8b7a-766c3a7f79f0\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-21T08:00:20\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"9.8.4.0-9.8.4.5\",\r\n    \"description\": \"Ms. Christopher Pagac\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"9.8.4.0-9.8.4.5\",\r\n    \"subtype\": \"range\",\r\n    \"config\": 137,\r\n    \"version\": 10260\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.888\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"ip\": [\r\n        \"Enter a valid IPv4 or IPv6 address.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Create Range with valid characters Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name,Desc,range is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"aaazAZa09`!@#$^()-=_+[]’;,\");\r",
													"    pm.expect(jsonData.description).to.eql(\"aaazAZa09`!@#$^()-=_+[]’;,\");\r",
													"    pm.expect(jsonData.subtype).to.eql(\"range\");\r",
													"});\r",
													"// Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"pm.environment.set(\"UuidRangeDelObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"aaazAZa09`!@#$^()-=_+[]’;,\",\n  \"description\": \"aaazAZa09`!@#$^()-=_+[]’;,\",\n  \"ip\": \"8.8.8.9-8.8.8.14\",\n  \"subtype\": \"range\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"aaazAZa09`!@#$^()-=_+[]’;,\",\n  \"description\": \"aaazAZa09`!@#$^()-=_+[]’;,\",\n  \"ip\": \"8.8.8.9-8.8.8.14\",\n  \"subtype\": \"range\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 194,\r\n    \"uuid\": \"f935f700-06bf-48e9-a176-2876dd27373a\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-21T08:17:39\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"aaazAZa09`!@#$^()-=_+[]’;,\",\r\n    \"description\": \"aaazAZa09`!@#$^()-=_+[]’;,\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"8.8.8.9-8.8.8.14\",\r\n    \"subtype\": \"range\",\r\n    \"config\": 137,\r\n    \"version\": 10260\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.888\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"ip\": [\r\n        \"Enter a valid IPv4 or IPv6 address.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Change Range Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name,Desc,range is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.name).to.eql(\"Changed name range\");\r",
													"    pm.expect(jsonData.ip).to.eql(\"9.9.1.1-9.9.1.15\");\r",
													"    pm.expect(jsonData.subtype).to.eql(\"range\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Changed name range\",\n  \"description\": \"{{$randomFullName}}\",\n  \"ip\": \"9.9.1.1-9.9.1.15\",\n  \"subtype\": \"range\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidRangeObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidRangeObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Changed name range\",\n  \"description\": \"{{$randomFullName}}\",\n  \"ip\": \"9.9.1.1-9.9.1.15\",\n  \"subtype\": \"range\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:40:21 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 192,\r\n    \"uuid\": \"3487e438-8a23-4e27-8da8-3023a578049d\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-21T08:20:19\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Changed name range\",\r\n    \"description\": \"Wendell West\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"9.9.1.1-9.9.1.15\",\r\n    \"subtype\": \"range\",\r\n    \"config\": 137,\r\n    \"version\": 10260\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Change partially Range Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Name,Desc,range is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.description).to.eql(\"Modified_object_PUTCH_Range\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Modified_object_PUTCH_Range\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidRangeObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidRangeObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Modified_object_PUTCH_IP\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidNetObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:40:21 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 181,\r\n    \"uuid\": \"96972f21-0213-4693-8f9c-965ff21cd54b\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-20T13:55:41\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Changed name ip\",\r\n    \"description\": \"Modified_object_PUTCH_IP\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"9.9.1.1\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 121,\r\n    \"version\": 10228\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Delete Range Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidRangeDelObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidRangeDelObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "204 No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/f2a62e12-05c8-4021-9de3-f43c14219525/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"f2a62e12-05c8-4021-9de3-f43c14219525",
														""
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:56:17 GMT"
												},
												{
													"key": "Content-Length",
													"value": "0"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:50:32 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>ContentNotRenderedError\n          at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>ContentNotRenderedError\n       at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</h1>\n  <pre class=\"exception_value\">The response content must be rendered before it can be accessed.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>DELETE</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>ContentNotRenderedError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>The response content must be rendered before it can be accessed.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/template/response.py in content, line 128</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:50:32 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686077498944\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686077498944\">\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686077498944\">\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077498944', 'post139686077498944')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077498944')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077498944\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>ContentNotRenderedError(&#39;The response content must be rendered before it can be accessed.&#39;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686077972640\">\n              \n                <ol start=\"89\" class=\"pre-context\" id=\"pre139686077972640\">\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>            response = self.process_request(request)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        response = response or self.get_response(request)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"96\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>            response = self.process_response(request, response)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='97' class=\"post-context\" id=\"post139686077972640\">\n                  \n                  <li onclick=\"toggle('pre139686077972640', 'post139686077972640')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077972640')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077972640\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_response</code>\n\n          \n            <div class=\"context\" id=\"c139686078140656\">\n              \n                <ol start=\"105\" class=\"pre-context\" id=\"pre139686078140656\">\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        if response.status_code == 404:</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>            if self.should_redirect_with_slash(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>                return self.response_redirect_class(self.get_full_path_with_slash(request))</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        # Add the Content-Length header to non-streaming responses if not</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        # already set.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        if not response.streaming and not response.has_header(&#39;Content-Length&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"112\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>            response[&#39;Content-Length&#39;] = str(len(response.content))</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='113' class=\"post-context\" id=\"post139686078140656\">\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre>class BrokenLinkEmailsMiddleware(MiddlewareMixin):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686078140656', 'post139686078140656')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686078140656')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686078140656\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: DELETE &#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/template/response.py</code> in <code>content</code>\n\n          \n            <div class=\"context\" id=\"c139686077554032\">\n              \n                <ol start=\"121\" class=\"pre-context\" id=\"pre139686077554032\">\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            )</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        return super().__iter__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    @property</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    def content(self):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        if not self._is_rendered:</pre></li>\n                \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            raise ContentNotRenderedError(</pre></li>\n                \n                </ol>\n              \n              <ol start=\"128\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>                &#39;The response content must be rendered before it can be accessed.&#39;</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='129' class=\"post-context\" id=\"post139686077554032\">\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        return super().content</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    @content.setter</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>    def content(self, value):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686077554032', 'post139686077554032')\"><pre>        &quot;&quot;&quot;Set the content for the response.&quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686077554032')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686077554032\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>__class__</td>\n                    <td class=\"code\"><pre>&lt;class &#39;django.template.response.SimpleTemplateResponse&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"ContentNotRenderedError at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: DELETE\nRequest URL: http://172.17.117.21/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  96.             response = self.process_response(request, response)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_response\n  112.             response[&#39;Content-Length&#39;] = str(len(response.content))\n\nFile \"/usr/lib/python3.7/site-packages/django/template/response.py\" in content\n  128.                 &#39;The response content must be rendered before it can be accessed.&#39;\n\nException Type: ContentNotRenderedError at /consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/\nException Value: The response content must be rendered before it can be accessed.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[Built-in administrator():4fa8223e-19df-4596-9c15-f3cd93f1330a:v10013]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;afc46c14-6836-412d-a906-67b2bf75b227&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce7f/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;26004&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;DELETE&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 26004)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b330a4f10&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b330a4090&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_717216_3644436&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "Create a Range with an invalid name Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for keys in json\r",
													"// pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"//     pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"Invalid subnet address\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "// {\n//   \"name\": \"€↑\",\n//   \"description\": \"€↑\",\n//   \"ip\": \"123.123.124.0-123.123.124.10\",\n//   \"subtype\": \"range\"\n// }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										}
									]
								},
								{
									"name": "Create a Range with a name of 129 characters Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// THERE IS A RESTRICTION ON 256\r",
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for keys in json\r",
													"// pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"//     pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"Invalid subnet address\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "// {\n//   \"name\": \"iLDzvjHmCyxXnZdiWBcDtW7nui7ADSA2TExbNGpsAXHeXC2ZYAHEUHJsy5WpXJeQ2YPwGtzS6QZ8hjfPHhExEvBUwmHD38hbVXHWCeyMBCAsMcPAiDgvNi2mVvSLVAEL1\",\n//   \"ip\": \"123.123.124.0-123.123.124.10\",\n//   \"subtype\": \"range\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										}
									]
								},
								{
									"name": "Create a Range with a description of 1025 characters Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for keys in json\r",
													"// pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"//     pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"Invalid subnet address\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "// {\n//   \"name\": \"name10233\",\n//   \"description\": \"GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111\",\n//   \"ip\": \"123.125.124.14\",\n//   \"subtype\": \"ip\"\n// }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"{{VarNetObj}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										}
									]
								},
								{
									"name": "Create a Range with the wrong address Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Incorrect range address\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.ip[0]).to.include(\"Incorrect range address\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"name8\",\n  \"description\": \"desc8\",\n  \"ip\": \"123.125.124.0-123.123.124.12\",\n  \"subtype\": \"range\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"name8\",\n  \"description\": \"desc8\",\n  \"ip\": \"123.125.124.0-123.123.124.12\",\n  \"subtype\": \"range\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"ip\": [\r\n        \"#Code 286: Incorrect range address: 123.125.124.0-123.123.124.12.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Create a Range Duplicate at Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for data in the response in json\r",
													"// pm.test(\"Invalid subnet address\", function () {\r",
													"//     pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"//     pm.expect(pm.response.text()).to.include(\"Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });\r",
													"// pm.test(\"There is an error in the array\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"#Code 611: Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"name5\",\n  \"description\": \"desc\",\n  \"ip\": \"123.125.124.1/30\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"ip\": [\r\n        \"#Code 611: Invalid subnet address: 123.125.124.1/30.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Create a Range duplicate by name Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"There is an error in the array\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"#Code 611: Invalid subnet address: 123.125.124.1/30.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"6.0.3.0/24\",\n  \"description\": \"Gertrude Gaylord\",\n  \"is_enabled\": true,\n  \"ip\": \"6.0.3.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 7,\r\n    \"uuid\": \"3c4a9379-f73f-4a2f-a530-3fc7e70547ae\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:02:38\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"6.0.3.0/24\",\r\n    \"description\": \"Gertrude Gaylord\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"6.0.3.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"name5\",\n  \"description\": \"desc\",\n  \"ip\": \"123.125.124.1/30\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"ip\": [\r\n        \"#Code 611: Invalid subnet address: 123.125.124.1/30.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Change Range with incorrect data Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Enter a valid address range\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.ip[0]).to.eql(\"#Code 286: Incorrect range address: 192.168.0.9-192.168.0.0.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Changed name Range\",\n  \"description\": \"{{$randomFullName}}\",\n  \"ip\": \"192.168.0.9-192.168.0.0\",\n  \"subtype\": \"range\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidRangeObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidRangeObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:40:21 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 10,\r\n    \"uuid\": \"26b242e5-a450-45f7-90e5-79c7ff39ce7f\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:40:21\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"172.17.1.1\",\r\n    \"description\": \"Modified_object\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"172.17.1.1\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Changed name Range\",\n  \"description\": \"{{$randomFullName}}\",\n  \"ip\": \"192.168.0.9-192.168.0.0\",\n  \"subtype\": \"range\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 15:16:47 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "83"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"ip\": [\n        \"#Code 286: Incorrect range address: 192.168.0.9-192.168.0.0.\"\n    ]\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Change Range without a mandatory field Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 400\", function () {\r",
													"//     pm.response.to.have.status(400);\r",
													"// });\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for data in the json response in an array\r",
													"// pm.test(\"Enter a valid address\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.ip[0]).to.eql(\"Enter a valid IPv4 or IPv6 address.\");\r",
													"// });"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Changed name range again\",\n  \"description\": \"{{$randomFullName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidRangeObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidRangeObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:40:21 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 10,\r\n    \"uuid\": \"26b242e5-a450-45f7-90e5-79c7ff39ce7f\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T07:40:21\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"172.17.1.1\",\r\n    \"description\": \"Modified_object\",\r\n    \"is_enabled\": true,\r\n    \"ip\": \"172.17.1.1\",\r\n    \"subtype\": \"ip\",\r\n    \"config\": 34,\r\n    \"version\": 10062\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Change partially Host with incorrect data Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Incorrect range address\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.ip[0]).to.eql(\"#Code 286: Incorrect range address: 123.125.124.0-123.123.124.12.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"123.125.124.0-123.123.124.12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/{{UuidRangeObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												"{{UuidRangeObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"192.168.0.0.0/24\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidNetObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidNetObj}}",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 07:38:28 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "83"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"ip\": [\n        \"Enter a valid IPv4 or IPv6 address.\"\n    ]\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"linked_cgw\": [\n  ],\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/26b242e5-a450-45f7-90e5-79c7ff39ce76/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"26b242e5-a450-45f7-90e5-79c7ff39ce76",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:41:35 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain_level\": 1,\n  \"name\": \"172.17.1.1\",\n  \"description\": \"Modified_object\",\n  \"is_enabled\": true,\n  \"ip\": \"172.17.1.1\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/{{UuidIpObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														"{{UuidIpObj}}"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:24:53 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>RuntimeError\n          at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>RuntimeError\n       at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</h1>\n  <pre class=\"exception_value\">You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>PUT</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>RuntimeError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/middleware/common.py in get_full_path_with_slash, line 93</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 07:24:53 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c139686076292784\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre139686076292784\">\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post139686076292784\">\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076292784', 'post139686076292784')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076292784')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076292784\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>RuntimeError(&quot;You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.&quot;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c139686076584176\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686076584176\">\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __init__(self, get_response=None):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        self.get_response = get_response</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        super().__init__()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_request(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686076584176\">\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        response = response or self.get_response(request)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>            response = self.process_response(request, response)</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076584176', 'post139686076584176')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076584176')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076584176\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>None</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_request</code>\n\n          \n            <div class=\"context\" id=\"c139686076586496\">\n              \n                <ol start=\"46\" class=\"pre-context\" id=\"pre139686076586496\">\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check for a redirect based on settings.PREPEND_WWW</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        host = request.get_host()</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        must_prepend = settings.PREPEND_WWW and host and not host.startswith(&#39;www.&#39;)</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        redirect_url = (&#39;%s://www.%s&#39; % (request.scheme, host)) if must_prepend else &#39;&#39;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Check if a slash should be appended</pre></li>\n                \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if self.should_redirect_with_slash(request):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"53\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = self.get_full_path_with_slash(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='54' class=\"post-context\" id=\"post139686076586496\">\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        else:</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            path = request.get_full_path()</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        # Return a redirect if necessary</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>        if redirect_url or path != request.get_full_path():</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686076586496', 'post139686076586496')\"><pre>            redirect_url += path</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686076586496')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686076586496\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>host</td>\n                    <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>must_prepend</td>\n                    <td class=\"code\"><pre>False</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>redirect_url</td>\n                    <td class=\"code\"><pre>&#39;&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>get_full_path_with_slash</code>\n\n          \n            <div class=\"context\" id=\"c139686067515552\">\n              \n                <ol start=\"86\" class=\"pre-context\" id=\"pre139686067515552\">\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            raise RuntimeError(</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;You called this URL via %(method)s, but the URL doesn&#39;t end &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;in a slash and you have APPEND_SLASH set. Django can&#39;t &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;redirect to the slash URL while maintaining %(method)s data. &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;Change your form to point to %(url)s (note the trailing &quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                &quot;slash), or set APPEND_SLASH=False in your Django settings.&quot; % {</pre></li>\n                \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;method&#39;: request.method,</pre></li>\n                \n                </ol>\n              \n              <ol start=\"93\" class=\"context-line\">\n                <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                    &#39;url&#39;: request.get_host() + new_path,</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='94' class=\"post-context\" id=\"post139686067515552\">\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>                }</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        return new_path</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>    def process_response(self, request, response):</pre></li>\n                  \n                  <li onclick=\"toggle('pre139686067515552', 'post139686067515552')\"><pre>        &quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '139686067515552')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v139686067515552\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>new_path</td>\n                    <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/&#39;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: PUT &#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7f0b363aca50&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: PUT\nRequest URL: http://172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  93.             response = self.process_request(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_request\n  53.             path = self.get_full_path_with_slash(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in get_full_path_with_slash\n  93.                     &#39;url&#39;: request.get_host() + new_path,\n\nException Type: RuntimeError at /consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe\nException Value: You called this URL via PUT, but the URL doesn&#39;t end in a slash and you have APPEND_SLASH set. Django can&#39;t redirect to the slash URL while maintaining PUT data. Change your form to point to 172.17.117.21/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[unable to retrieve the current user]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;146&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;248fc995-06f9-439a-9ab5-c69f0f856f38&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/consumer/net-object/81c318a5-0f90-481f-8330-b6e7837dfebe&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;57824&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;PUT&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 57824)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0b3273d0d0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7f0b33008690&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_305516_1539952&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7f0b3b39c850&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								}
							]
						},
						{
							"name": "Destructive",
							"item": [
								{
									"name": "Create a Host without  \"Content-type\" Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 415\", function () {\r",
													"    pm.response.to.have.status(415);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Unsupported data type\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Unsupported data type \\\"\\\" in a query.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true
										}
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"bad Content-type Ip\",\n  \"ip\": \"{{VarIpObj}}\",\n  \"subtype\": \"ip\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 40,\r\n    \"uuid\": \"ea13f6ad-b70e-4206-a8da-aef3943d5d4b\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-09T07:56:41\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Local Net\",\r\n    \"description\": null,\r\n    \"is_enabled\": true,\r\n    \"ip\": \"192.168.0.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 79,\r\n    \"version\": 10148\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/33\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:04:08 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "57"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"ip\":[\"Incorrect netmask for ip.\"]}"
										},
										{
											"name": "415 Unsupported Media Type",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"bad Content-type\",\n  \"ip\": \"{{$randomIP}}\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 11:22:50 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "89"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"Unsupported data type \\\"\\\" in a query.\"\n}"
										}
									]
								},
								{
									"name": "Create a Host with an incorrect structure Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"JSON parse error\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.include(\"JSON parse error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"{{VarIpObj}}\",\n  \"name\": \"bad structure\",\n  \"subtype\": \"ip\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 40,\r\n    \"uuid\": \"ea13f6ad-b70e-4206-a8da-aef3943d5d4b\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-09T07:56:41\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Local Net\",\r\n    \"description\": null,\r\n    \"is_enabled\": true,\r\n    \"ip\": \"192.168.0.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 79,\r\n    \"version\": 10148\r\n}"
										},
										{
											"name": "415 Unsupported Media Type",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"bad Content-type\",\n  \"ip\": \"{{$randomIP}}\",\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 11:22:50 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "89"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"Unsupported data type \\\"\\\" in a query.\"\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"{{VarNetObj}}\",\n  \"name\": \"bad Content-type\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 11:35:48 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"JSON parse error - Expecting ',' delimiter: line 4 column 3 (char 56)\"\n}"
										}
									]
								},
								{
									"name": "Create a Host with an incorrect  \"Content-Length\" Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has code, error, error_description\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"code\");\r",
													"    pm.expect(pm.response.text()).to.include(\"error\");\r",
													"    pm.expect(pm.response.text()).to.include(\"error_description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Bad Request\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.error_description).to.eql(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-length": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Length",
												"value": "GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"{{VarIpObj}}\",\n  \"name\": \"bad header\",\n  \"subtype\": \"ip\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Local Net\",\n  \"ip\": \"192.168.0.0/24\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 07:02:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "264"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 40,\r\n    \"uuid\": \"ea13f6ad-b70e-4206-a8da-aef3943d5d4b\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-09T07:56:41\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Local Net\",\r\n    \"description\": null,\r\n    \"is_enabled\": true,\r\n    \"ip\": \"192.168.0.0/24\",\r\n    \"subtype\": \"network\",\r\n    \"config\": 79,\r\n    \"version\": 10148\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Length",
														"value": "GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"{{VarNetObj}}\",\n  \"name\": \"bad header\",\n  \"subtype\": \"network\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 12:55:49 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Connection",
													"value": "close"
												},
												{
													"key": "ETag",
													"value": "\"6107cac5-52\""
												}
											],
											"cookie": [],
											"body": "{\n    \"code\": 400,\n    \"error\": \"bad_request\",\n    \"error_description\": \"Bad Request\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Config Save/Unlock",
							"item": [
								{
									"name": "Saving Configuration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/{{CurrentIdConf}}/commit/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"{{CurrentIdConf}}",
												"commit",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/24/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"24",
														"commit",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/25/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"25",
														"commit",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 Jun 2022 14:38:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										}
									]
								},
								{
									"name": "Installing the policy on the MCC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check status\r",
													"pm.test(\"Status task is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.status).to.eql(\"ok\");\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Uuid=36\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.tasks[0]).to.length(36);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/install-policy/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"install-policy",
												""
											]
										},
										"description": "Performs policy installation on the node\n\n:post-data:\n    ::\n\n        {\n            'target': ['Serial number of the target node for the installation']\n        }\n:response:\n    ::\n\n        {\n            'task': <task_id>\n        }"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/install-policy/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"install-policy",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 13:18:42 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"ok\",\n    \"tasks\": [\n        \"e86dd596-b724-4b26-9107-ab4ac06c2efe\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Unlock the configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Waiting in \"ms\" for the policy to be installed\r",
													"setTimeout(() => {}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/free/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"free",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/lock/free/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"lock",
														"free",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Network Object Group",
					"item": [
						{
							"name": "Config Block/Create",
							"item": [
								{
									"name": "Locking configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"  pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"  pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/acquire/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"acquire",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "/acquire-config-lock",
													"path": [
														"acquire-config-lock"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates a new config",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201 and 'CurrentUuidConf'\", function () {\r",
													"  pm.response.to.have.status(201); //Checking that the answer is 201\r",
													"  var jsonData = pm.response.json(); //Create a variable and save the whole answer in it\r",
													"  var tempUuid = jsonData.uuid; //Create a variable and place the value in it \"uuid\"\r",
													"  pm.environment.set('CurrentUuidConf', tempUuid); //Passing uuid value to a variable 'CurrentUuidConf'\r",
													"  var tempId = jsonData.id; //Create a variable and place the value in it \"id\"\r",
													"  pm.environment.set('CurrentIdConf', tempId); //Passing the id value into a variable 'CurrentIdConf'\r",
													"    //console.info(\"Successfully created IdConf \" + pm.environment.get(\"CurrentIdConf\") + \" with uuid \" + pm.environment.get(\"CurrentUuidConf\")) //Write a message in the log\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"id\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"is_active\");\r",
													"  pm.expect(pm.response.text()).to.include(\"source\");\r",
													"  pm.expect(pm.response.text()).to.include(\"version\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"{{$randomUUID}}\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/config/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													},
													{
														"key": "Accept",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/config/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"id\": 24,\n    \"name\": \"string\",\n    \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n    \"is_active\": true,\n    \"domain_level\": 1,\n    \"subtype\": \"adminedit\",\n    \"description\": \"string\",\n    \"source\": 1,\n    \"version\": 10042\n}"
										}
									]
								}
							]
						},
						{
							"name": "Positive",
							"item": [
								{
									"name": "Create an empty Group without options Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"  pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"New group is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Network Object\");\r",
													"  pm.expect(jsonData.name).to.eql(\"Empty_group\");\r",
													"  pm.expect(jsonData.description).to.eql(\"Empty_group_desc\");\r",
													"});\r",
													"//Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"  pm.environment.set(\"UuidGroupEmptObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group\",\n  \"description\": \"Empty_group_desc\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group\",\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:27:06 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "304"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 60,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"6cccf2ab-baa8-4c91-9acc-de0c82b854da\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:27:06\",\n    \"domain_level\": 1,\n    \"name\": \"Empty_group\",\n    \"description\": \"Empty_group_desc\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 159,\n    \"version\": 10301\n}"
										}
									]
								},
								{
									"name": "Request an empty Group Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"New group Empty is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Network Object\");\r",
													"  pm.expect(jsonData.name).to.eql(\"Empty_group\");\r",
													"  pm.expect(jsonData.description).to.eql(\"Empty_group_desc\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupEmptObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupEmptObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/group/a6d9b880-4b5c-44c9-8e11-59c6fe815033/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"a6d9b880-4b5c-44c9-8e11-59c6fe815033",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:53:00 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 64,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"a6d9b880-4b5c-44c9-8e11-59c6fe815033\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:51:46\",\n    \"domain_level\": 1,\n    \"name\": \"Empty_group\",\n    \"description\": \"Empty_group_desc\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 165,\n    \"version\": 10312\n}"
										}
									]
								},
								{
									"name": "Create a Group with Objects Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"New group is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Network Object\");\r",
													"  pm.expect(jsonData.name).to.eql(\"Object_group\");\r",
													"});\r",
													"//Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"  pm.environment.set(\"UuidGroupFullObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Object_group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidIpObj}}\",\n    \"{{UuidNetObj}}\",\n    \"{{UuidRangeObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Object_group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidIpObj}}\",\n    \"{{UuidNetObj}}\",\n    \"{{UuidRangeObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:44:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 63,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"f59bb717-c04a-4be3-90c3-f30f73e2752b\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:44:41\",\n    \"domain_level\": 1,\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 162,\n    \"version\": 10307\n}"
										}
									]
								},
								{
									"name": "Request a Group without uuid Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"  pm.expect(pm.response.text()).to.include(\"members\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"In response Create a Group with Objects with id\", () => {\r",
													"let jsonData = pm.response.json()[0]\r",
													"  pm.expect(jsonData.members[0].id).to.be.a('number');\r",
													"  pm.expect(jsonData.members[1].id).to.be.a('number');\r",
													"  pm.expect(jsonData.members[2].id).to.be.a('number'); \r",
													"});\r",
													"pm.test(\"These groups are of 3 types\",() => {\r",
													"  pm.expect(pm.response.text()).to.include(\"network\");\r",
													"  pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"  pm.expect(pm.response.text()).to.include(\"range\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/full-members/?uuids={{UuidGroupFullObj}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"full-members",
												""
											],
											"query": [
												{
													"key": "uuids",
													"value": "{{UuidGroupFullObj}}"
												}
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/group/full-members/?uuids=a6d9b880-4b5c-44c9-8e11-59c6fe815033/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"full-members",
														""
													],
													"query": [
														{
															"key": "uuids",
															"value": "a6d9b880-4b5c-44c9-8e11-59c6fe815033/"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:53:00 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 72,\n        \"subtype\": \"Network Object\",\n        \"uuid\": \"e502dbc0-81a4-4640-8a35-20b269cf55c0\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-07-05T13:46:39\",\n        \"domain_level\": 1,\n        \"name\": \"Object_group\",\n        \"description\": \"Object_group_desc\",\n        \"is_autocreated\": false,\n        \"is_enabled\": true,\n        \"params\": {},\n        \"config\": 167,\n        \"version\": 10316,\n        \"parents\": [],\n        \"members\": [\n            {\n                \"id\": 207,\n                \"domain_level\": 1,\n                \"name\": \"Changed name net again\",\n                \"description\": \"Bernadette Stiedemann\",\n                \"is_enabled\": true,\n                \"ip\": \"192.168.0.0/24\",\n                \"subtype\": \"network\"\n            },\n            {\n                \"id\": 210,\n                \"domain_level\": 1,\n                \"name\": \"Changed name ip again\",\n                \"description\": \"Latoya Schmeler\",\n                \"is_enabled\": true,\n                \"ip\": \"9.9.1.1\",\n                \"subtype\": \"ip\"\n            },\n            {\n                \"id\": 213,\n                \"domain_level\": 1,\n                \"name\": \"Changed name range again\",\n                \"description\": \"Natasha Hane\",\n                \"is_enabled\": true,\n                \"ip\": \"9.9.1.1-9.9.1.15\",\n                \"subtype\": \"range\"\n            }\n        ]\n    }\n]"
										}
									]
								},
								{
									"name": "Request a Group c uuid Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"  pm.expect(pm.response.text()).to.include(\"members\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"The answer has a group with values subtype: ip, network and range\", () => {\r",
													"let jsonData = pm.response.json()[0]\r",
													"  pm.expect(jsonData.members[0].type).to.eql(\"netobject\");\r",
													"  pm.expect(jsonData.members[1].type).to.eql(\"netobject\");\r",
													"  pm.expect(jsonData.members[2].type).to.eql(\"netobject\");\r",
													"});\r",
													"pm.test(\"These groups include 3 types of objects\",() => {\r",
													"  pm.expect(pm.response.text()).to.include(\"network\");\r",
													"  pm.expect(pm.response.text()).to.include(\"ip\");\r",
													"  pm.expect(pm.response.text()).to.include(\"range\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/full-view/?uuids={{UuidGroupFullObj}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"full-view",
												""
											],
											"query": [
												{
													"key": "uuids",
													"value": "{{UuidGroupFullObj}}"
												}
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/group/full-view/?uuids=e502dbc0-81a4-4640-8a35-20b269cf55c0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"full-view",
														""
													],
													"query": [
														{
															"key": "uuids",
															"value": "e502dbc0-81a4-4640-8a35-20b269cf55c0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:53:00 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 72,\n        \"subtype\": \"Network Object\",\n        \"uuid\": \"e502dbc0-81a4-4640-8a35-20b269cf55c0\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-07-05T13:46:39\",\n        \"domain_level\": 1,\n        \"name\": \"Object_group\",\n        \"description\": \"Object_group_desc\",\n        \"is_autocreated\": false,\n        \"is_enabled\": true,\n        \"params\": {},\n        \"config\": 167,\n        \"version\": 10316,\n        \"parents\": [],\n        \"members\": [\n            {\n                \"type\": \"netobject\",\n                \"uuid\": \"a6ce28ef-61d0-47ed-a491-80a37a421646\",\n                \"name\": \"Changed name net again\",\n                \"description\": \"Bernadette Stiedemann\",\n                \"ip\": \"192.168.0.0/24\",\n                \"subtype\": \"network\"\n            },\n            {\n                \"type\": \"netobject\",\n                \"uuid\": \"70c8af2d-e996-44fe-849f-d85038f89599\",\n                \"name\": \"Changed name ip again\",\n                \"description\": \"Latoya Schmeler\",\n                \"ip\": \"9.9.1.1\",\n                \"subtype\": \"ip\"\n            },\n            {\n                \"type\": \"netobject\",\n                \"uuid\": \"6c694df2-1be5-4c19-9d8e-bb203326971a\",\n                \"name\": \"Changed name range again\",\n                \"description\": \"Natasha Hane\",\n                \"ip\": \"9.9.1.1-9.9.1.15\",\n                \"subtype\": \"range\"\n            }\n        ]\n    }\n]"
										}
									]
								},
								{
									"name": "Request a Group with the number of objects Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"members\");\r",
													"});\r",
													"// Checking the number of objects in the group\r",
													"pm.test(\"There are 3 objects in the group\", () => {\r",
													"    let jsonData = pm.response.json()[0]\r",
													"    pm.expect(jsonData.members_count).to.eql(3);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/app-profile-count/?uuids={{UuidGroupFullObj}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"app-profile-count",
												""
											],
											"query": [
												{
													"key": "uuids",
													"value": "{{UuidGroupFullObj}}"
												}
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/group/app-profile-count/?uuids=e502dbc0-81a4-4640-8a35-20b269cf55c0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"app-profile-count",
														""
													],
													"query": [
														{
															"key": "uuids",
															"value": "e502dbc0-81a4-4640-8a35-20b269cf55c0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:53:00 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 72,\n        \"subtype\": \"Network Object\",\n        \"uuid\": \"e502dbc0-81a4-4640-8a35-20b269cf55c0\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-07-05T13:46:39\",\n        \"domain_level\": 1,\n        \"name\": \"Object_group\",\n        \"description\": \"Object_group_desc\",\n        \"is_autocreated\": false,\n        \"is_enabled\": true,\n        \"params\": {},\n        \"config\": 167,\n        \"version\": 10316,\n        \"parents\": [],\n        \"members_count\": 3,\n        \"profiles_count\": 0\n    }\n]"
										}
									]
								},
								{
									"name": "Create a Group with Objects and optional parameters Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"New group is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Network Object\");\r",
													"  pm.expect(jsonData.name).to.eql(\"Object_group2\");\r",
													"  pm.expect(jsonData.description).to.eql(\"Object_group_desc2\");\r",
													"});\r",
													"//Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"  pm.environment.set(\"UuidGroupDelObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Object_group2\",\n  \"description\": \"Object_group_desc2\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidIpObj}}\",\n    \"{{UuidNetObj}}\",\n    \"{{UuidRangeObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Object_group2\",\n  \"description\": \"Object_group_desc2\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidIpObj}}\",\n    \"{{UuidNetObj}}\",\n    \"{{UuidRangeObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:44:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 63,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"f59bb717-c04a-4be3-90c3-f30f73e2752b\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:44:41\",\n    \"domain_level\": 1,\n    \"name\": \"Object_group2\",\n    \"description\": \"Object_group_desc2\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 162,\n    \"version\": 10307\n}"
										}
									]
								},
								{
									"name": "Create a Group with valid characters Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"New group is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Network Object\");\r",
													"  pm.expect(jsonData.name).to.eql(\"azAZa09`!@#$^()-=_+[]’;,\");\r",
													"  pm.expect(jsonData.description).to.eql(\"azAZa09`!@#$^()-=_+[]’;,\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"azAZa09`!@#$^()-=_+[]’;,\",\n  \"description\": \"azAZa09`!@#$^()-=_+[]’;,\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidIpObj}}\",\n    \"{{UuidNetObj}}\",\n    \"{{UuidRangeObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"azAZa09`!@#$^()-=_+[]’;,\",\n  \"description\": \"azAZa09`!@#$^()-=_+[]’;,\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidIpObj}}\",\n    \"{{UuidNetObj}}\",\n    \"{{UuidRangeObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:44:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 63,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"f59bb717-c04a-4be3-90c3-f30f73e2752b\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:44:41\",\n    \"domain_level\": 1,\n    \"name\": \"azAZa09`!@#$^()-=_+[]’;,\",\n    \"description\": \"azAZa09`!@#$^()-=_+[]’;,\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 162,\n    \"version\": 10307\n}"
										}
									]
								},
								{
									"name": "Change Group Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"subtype, name and description is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Network Object\");\r",
													"  pm.expect(jsonData.name).to.eql(\"Changed name group\");\r",
													"  pm.expect(jsonData.description).to.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Changed name group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidIpObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupFullObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupFullObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": 80,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"b1e7d99f-de10-45fd-815c-6e280dec9ae2\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-07T10:29:26\",\n    \"domain_level\": 1,\n    \"name\": \"Changed name group\",\n    \"description\": null,\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 169,\n    \"version\": 10320\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/f59bb717-c04a-4be3-90c3-f30f73e2752b/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"f59bb717-c04a-4be3-90c3-f30f73e2752b",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:44:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 63,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"f59bb717-c04a-4be3-90c3-f30f73e2752b\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:44:41\",\n    \"domain_level\": 1,\n    \"name\": \"azAZa09`!@#$^()-=_+[]’;,\",\n    \"description\": \"azAZa09`!@#$^()-=_+[]’;,\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 162,\n    \"version\": 10307\n}"
										}
									]
								},
								{
									"name": "Change Group partially Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Description is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.description).to.eql(\"Modified_object_PUTCH_Group\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Modified_object_PUTCH_Group\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupFullObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupFullObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Modified_object_PUTCH_Group\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/b1e7d99f-de10-45fd-815c-6e280dec9ae2/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"b1e7d99f-de10-45fd-815c-6e280dec9ae2",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:44:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 80,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"b1e7d99f-de10-45fd-815c-6e280dec9ae2\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-07T10:35:26\",\n    \"domain_level\": 1,\n    \"name\": \"Changed name group\",\n    \"description\": \"Modified_object_PUTCH_Group\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 169,\n    \"version\": 10320\n}"
										}
									]
								},
								{
									"name": "Delete Group Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupDelObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupDelObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "204 No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/e3801dc7-012c-4385-99ee-fd90610ce3e0/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"e3801dc7-012c-4385-99ee-fd90610ce3e0",
														""
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:44:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "Create a Group with the wrong type Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"  pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Class ip not found\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype[0]).to.include(\"Class ip not found\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"ip\",\n  \"name\": \"Negative_group\",\n  \"description\": \"Negative_group_desc\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Object_group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidIpObj}}\",\n    \"{{UuidNetObj}}\",\n    \"{{UuidRangeObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:44:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 63,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"f59bb717-c04a-4be3-90c3-f30f73e2752b\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:44:41\",\n    \"domain_level\": 1,\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 162,\n    \"version\": 10307\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"ip\",\n  \"name\": \"Negative_group\",\n  \"description\": \"Negative_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 07 Jul 2022 11:25:39 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "59"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"subtype\": [\n        \"#Code 247: Class ip not found.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Create a Group with an object that does not exist Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Object not found\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.members[0]).to.include(\"Object 70c8af2d-e996-44fe-849f-777777777777 not found\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Negative group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"70c8af2d-e996-44fe-849f-777777777777\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Object_group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidIpObj}}\",\n    \"{{UuidNetObj}}\",\n    \"{{UuidRangeObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:44:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 63,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"f59bb717-c04a-4be3-90c3-f30f73e2752b\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:44:41\",\n    \"domain_level\": 1,\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 162,\n    \"version\": 10307\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Negative group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"70c8af2d-e996-44fe-849f-777777777777\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 07 Jul 2022 12:00:04 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "137"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"members\": [\n        \"#Code 212: Object 70c8af2d-e996-44fe-849f-777777777777 not found or has the wrong type.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Create a Group with object doubles Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"New group is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Network Object\");\r",
													"  pm.expect(jsonData.name).to.eql(\"Negative group\");\r",
													"});\r",
													"//Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"  pm.environment.set(\"UuidGroupFullObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Negative group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidGroupEmptObj}}\",\n    \"{{UuidGroupEmptObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Object_group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidIpObj}}\",\n    \"{{UuidNetObj}}\",\n    \"{{UuidRangeObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:44:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 63,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"f59bb717-c04a-4be3-90c3-f30f73e2752b\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:44:41\",\n    \"domain_level\": 1,\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 162,\n    \"version\": 10307\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Negative group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"70c8af2d-e996-44fe-849f-777777777777\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 07 Jul 2022 12:00:04 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "137"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"members\": [\n        \"#Code 212: Object 70c8af2d-e996-44fe-849f-777777777777 not found or has the wrong type.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Create a Group with duplicate structures Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"New group is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Network Object\");\r",
													"  pm.expect(jsonData.name).to.eql(\"Negative group\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"netobject\",\n  \"subtype\": \"netobject\",\n  \"name\": \"Negative group\",\n  \"is_autocreated\": false,\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidGroupEmptObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Object_group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidIpObj}}\",\n    \"{{UuidNetObj}}\",\n    \"{{UuidRangeObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:44:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 63,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"f59bb717-c04a-4be3-90c3-f30f73e2752b\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:44:41\",\n    \"domain_level\": 1,\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 162,\n    \"version\": 10307\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Negative group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"70c8af2d-e996-44fe-849f-777777777777\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 07 Jul 2022 12:00:04 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "137"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"members\": [\n        \"#Code 212: Object 70c8af2d-e996-44fe-849f-777777777777 not found or has the wrong type.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Create a Group without authorization Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Checking the response code\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"// Checking for error information in the response\r",
													"pm.test(\"Response has title with error info\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"401 Authorization Required\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group\",\n  \"description\": \"Empty_group_desc\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group\",\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:27:06 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "304"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 60,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"6cccf2ab-baa8-4c91-9acc-de0c82b854da\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:27:06\",\n    \"domain_level\": 1,\n    \"name\": \"Empty_group\",\n    \"description\": \"Empty_group_desc\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 159,\n    \"version\": 10301\n}"
										},
										{
											"name": "401 Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group\",\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "html",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 13:47:25 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "269"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												}
											],
											"cookie": [],
											"body": "<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>401 Authorization Required</title>\n    </head>\n    <body bgcolor=\"white\">\n        <center>\n            <h1>HTTPS proxy. 401 Access is not authorized</h1>\n        </center>\n    </body>\n</html>"
										}
									]
								},
								{
									"name": "Request a Group without authorization Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Checking the response code\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"// Checking for error information in the response\r",
													"pm.test(\"Response has title with error info\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"401 Authorization Required\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group\",\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:27:06 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "304"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 60,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"6cccf2ab-baa8-4c91-9acc-de0c82b854da\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:27:06\",\n    \"domain_level\": 1,\n    \"name\": \"Empty_group\",\n    \"description\": \"Empty_group_desc\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 159,\n    \"version\": 10301\n}"
										},
										{
											"name": "401 Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group\",\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "html",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 13:47:25 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "269"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												}
											],
											"cookie": [],
											"body": "<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>401 Authorization Required</title>\n    </head>\n    <body bgcolor=\"white\">\n        <center>\n            <h1>HTTPS proxy. 401 Access is not authorized</h1>\n        </center>\n    </body>\n</html>"
										}
									]
								},
								{
									"name": "Change Group without authorization Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Checking the response code\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"// Checking for error information in the response\r",
													"pm.test(\"Response has title with error info\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"401 Authorization Required\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Changed name group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidIpObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupFullObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupFullObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group\",\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:27:06 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "304"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 60,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"6cccf2ab-baa8-4c91-9acc-de0c82b854da\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:27:06\",\n    \"domain_level\": 1,\n    \"name\": \"Empty_group\",\n    \"description\": \"Empty_group_desc\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 159,\n    \"version\": 10301\n}"
										},
										{
											"name": "401 Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group\",\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "html",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 13:47:25 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "269"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												}
											],
											"cookie": [],
											"body": "<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>401 Authorization Required</title>\n    </head>\n    <body bgcolor=\"white\">\n        <center>\n            <h1>HTTPS proxy. 401 Access is not authorized</h1>\n        </center>\n    </body>\n</html>"
										}
									]
								},
								{
									"name": "[Check] Request a Group with the number of objects",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"members\");\r",
													"});\r",
													"// Checking the number of objects in the group\r",
													"pm.test(\"There are 3 objects in the group\", () => {\r",
													"    let jsonData = pm.response.json()[0]\r",
													"    pm.expect(jsonData.members_count).to.eql(1);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/app-profile-count/?uuids={{UuidGroupFullObj}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"app-profile-count",
												""
											],
											"query": [
												{
													"key": "uuids",
													"value": "{{UuidGroupFullObj}}"
												}
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/group/app-profile-count/?uuids=e502dbc0-81a4-4640-8a35-20b269cf55c0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"app-profile-count",
														""
													],
													"query": [
														{
															"key": "uuids",
															"value": "e502dbc0-81a4-4640-8a35-20b269cf55c0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:53:00 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 72,\n        \"subtype\": \"Network Object\",\n        \"uuid\": \"e502dbc0-81a4-4640-8a35-20b269cf55c0\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-07-05T13:46:39\",\n        \"domain_level\": 1,\n        \"name\": \"Object_group\",\n        \"description\": \"Object_group_desc\",\n        \"is_autocreated\": false,\n        \"is_enabled\": true,\n        \"params\": {},\n        \"config\": 167,\n        \"version\": 10316,\n        \"parents\": [],\n        \"members_count\": 3,\n        \"profiles_count\": 0\n    }\n]"
										}
									]
								},
								{
									"name": "Change Group with an incorrect data Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Class ip not found\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.subtype[0]).to.include(\"Class ip not found\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"ip\",\n  \"name\": \"Negative group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidIpObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupFullObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupFullObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": 80,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"b1e7d99f-de10-45fd-815c-6e280dec9ae2\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-07T10:29:26\",\n    \"domain_level\": 1,\n    \"name\": \"Changed name group\",\n    \"description\": null,\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 169,\n    \"version\": 10320\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/f59bb717-c04a-4be3-90c3-f30f73e2752b/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"f59bb717-c04a-4be3-90c3-f30f73e2752b",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:44:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 63,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"f59bb717-c04a-4be3-90c3-f30f73e2752b\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:44:41\",\n    \"domain_level\": 1,\n    \"name\": \"azAZa09`!@#$^()-=_+[]’;,\",\n    \"description\": \"azAZa09`!@#$^()-=_+[]’;,\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 162,\n    \"version\": 10307\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"ip\",\n  \"name\": \"Changed name group\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidIpObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/{{UuidGroupFullObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"{{UuidGroupFullObj}}",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 10:28:25 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "59"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"subtype\": [\n        \"#Code 247: Class ip not found.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Change Group partially Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Class ip not found\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.subtype[0]).to.include(\"Class ip not found\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"ip\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupFullObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupFullObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Modified_object_PUTCH_Group\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/b1e7d99f-de10-45fd-815c-6e280dec9ae2/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"b1e7d99f-de10-45fd-815c-6e280dec9ae2",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:44:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 80,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"b1e7d99f-de10-45fd-815c-6e280dec9ae2\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-07T10:35:26\",\n    \"domain_level\": 1,\n    \"name\": \"Changed name group\",\n    \"description\": \"Modified_object_PUTCH_Group\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 169,\n    \"version\": 10320\n}"
										},
										{
											"name": "400Bad Request",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"ip\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/{{UuidGroupFullObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"{{UuidGroupFullObj}}",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 11:10:00 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "59"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"subtype\": [\n        \"#Code 247: Class ip not found.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Change Group partially without authorization Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Checking the response code\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"// Checking for error information in the response\r",
													"pm.test(\"Response has title with error info\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"401 Authorization Required\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "// Checking the response code\npm.test(\"Status code is 401\", function () {\n    pm.response.to.have.status(401);\n});\n// Checking for error information in the response\npm.test(\"Response has title with error info\", function () {\n    pm.expect(pm.response.text()).to.include(\"401 Authorization Required\");\n});",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupFullObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupFullObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Modified_object_PUTCH_Group\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/b1e7d99f-de10-45fd-815c-6e280dec9ae2/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"b1e7d99f-de10-45fd-815c-6e280dec9ae2",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:44:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 80,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"b1e7d99f-de10-45fd-815c-6e280dec9ae2\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-07T10:35:26\",\n    \"domain_level\": 1,\n    \"name\": \"Changed name group\",\n    \"description\": \"Modified_object_PUTCH_Group\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 169,\n    \"version\": 10320\n}"
										},
										{
											"name": "401 Unauthorized",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "// Checking the response code\npm.test(\"Status code is 401\", function () {\n    pm.response.to.have.status(401);\n});\n// Checking for error information in the response\npm.test(\"Response has title with error info\", function () {\n    pm.expect(pm.response.text()).to.include(\"401 Authorization Required\");\n});",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/{{UuidGroupFullObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"{{UuidGroupFullObj}}",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "html",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 15:37:02 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "269"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												}
											],
											"cookie": [],
											"body": "<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>401 Authorization Required</title>\n    </head>\n    <body bgcolor=\"white\">\n        <center>\n            <h1>HTTPS proxy. 401 Access is not authorized</h1>\n        </center>\n    </body>\n</html>"
										}
									]
								},
								{
									"name": "Delete Group without authorization Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Checking the response code\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"// Checking for error information in the response\r",
													"pm.test(\"Response has title with error info\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"401 Authorization Required\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupFullObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupFullObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group\",\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:27:06 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "304"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 60,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"6cccf2ab-baa8-4c91-9acc-de0c82b854da\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:27:06\",\n    \"domain_level\": 1,\n    \"name\": \"Empty_group\",\n    \"description\": \"Empty_group_desc\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 159,\n    \"version\": 10301\n}"
										},
										{
											"name": "401 Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group\",\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "html",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 13:47:25 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "269"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												}
											],
											"cookie": [],
											"body": "<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>401 Authorization Required</title>\n    </head>\n    <body bgcolor=\"white\">\n        <center>\n            <h1>HTTPS proxy. 401 Access is not authorized</h1>\n        </center>\n    </body>\n</html>"
										}
									]
								},
								{
									"name": "Delete a nonexistent Group Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Checking the response code\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Status is 'Not found.'\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Not found.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/f59bb717-c04a-7777-7777-f30f73e2752b/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"f59bb717-c04a-7777-7777-f30f73e2752b",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "204 No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/e3801dc7-012c-4385-99ee-fd90610ce3e0/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"e3801dc7-012c-4385-99ee-fd90610ce3e0",
														""
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:44:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "306"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/f59bb717-c04a-7777-7777-f30f73e2752b/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"f59bb717-c04a-7777-7777-f30f73e2752b",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 15:41:46 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"Not found.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Destructive",
							"item": [
								{
									"name": "Create a Group without \"Content-type\" Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 415\", function () {\r",
													"    pm.response.to.have.status(415);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Unsupported data type\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Unsupported data type \\\"\\\" in a query.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true
										}
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group_Destructive\",\n  \"description\": \"Empty_group_desc\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group\",\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:27:06 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "304"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 60,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"6cccf2ab-baa8-4c91-9acc-de0c82b854da\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:27:06\",\n    \"domain_level\": 1,\n    \"name\": \"Empty_group\",\n    \"description\": \"Empty_group_desc\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 159,\n    \"version\": 10301\n}"
										},
										{
											"name": "415 Unsupported Media Type",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group_Destructive\",\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 11:44:21 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "89"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"Unsupported data type \\\"\\\" in a query.\"\n}"
										}
									]
								},
								{
									"name": "Create a Group with an invalid structure Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"JSON parse error\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.include(\"JSON parse error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {}
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group_Destructive\"\n  \"description\": \"Empty_group_desc\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group\",\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:27:06 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "304"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 60,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"6cccf2ab-baa8-4c91-9acc-de0c82b854da\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:27:06\",\n    \"domain_level\": 1,\n    \"name\": \"Empty_group\",\n    \"description\": \"Empty_group_desc\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 159,\n    \"version\": 10301\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group_Destructive\"\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 11:48:01 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"JSON parse error - Expecting ',' delimiter: line 4 column 3 (char 66)\"\n}"
										}
									]
								},
								{
									"name": "Create a Group with an incorrect \"Content-Length\" Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"  pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has code, error, error_description\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"code\");\r",
													"  pm.expect(pm.response.text()).to.include(\"error\");\r",
													"  pm.expect(pm.response.text()).to.include(\"error_description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Bad Request\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error_description).to.eql(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-length": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Length",
												"value": "GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group_Destructive\",\n  \"description\": \"Empty_group_desc\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group\",\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:27:06 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "304"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 60,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"6cccf2ab-baa8-4c91-9acc-de0c82b854da\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:27:06\",\n    \"domain_level\": 1,\n    \"name\": \"Empty_group\",\n    \"description\": \"Empty_group_desc\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 159,\n    \"version\": 10301\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"netobject\",\n  \"name\": \"Empty_group_Destructive\"\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 11:48:01 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"JSON parse error - Expecting ',' delimiter: line 4 column 3 (char 66)\"\n}"
										}
									]
								},
								{
									"name": "Request a Group uuid 1025 characters Destructive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Status is 'Not found.'\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Not found.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/group/a6d9b880-4b5c-44c9-8e11-59c6fe815033/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"a6d9b880-4b5c-44c9-8e11-59c6fe815033",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 21 Jun 2022 11:53:00 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 64,\n    \"subtype\": \"Network Object\",\n    \"uuid\": \"a6d9b880-4b5c-44c9-8e11-59c6fe815033\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-06-21T11:51:46\",\n    \"domain_level\": 1,\n    \"name\": \"Empty_group\",\n    \"description\": \"Empty_group_desc\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 165,\n    \"version\": 10312\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/group/GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Jul 2022 12:22:06 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"Not found.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Config Save/Unlock",
							"item": [
								{
									"name": "Saving Configuration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/{{CurrentIdConf}}/commit/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"{{CurrentIdConf}}",
												"commit",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/24/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"24",
														"commit",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/25/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"25",
														"commit",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 Jun 2022 14:38:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										}
									]
								},
								{
									"name": "Installing the policy on the MCC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check status\r",
													"pm.test(\"Status task is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.status).to.eql(\"ok\");\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Uuid=36\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.tasks[0]).to.length(36);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/install-policy/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"install-policy",
												""
											]
										},
										"description": "Performs policy installation on the node\n\n:post-data:\n    ::\n\n        {\n            'target': ['Serial number of the target node for the installation']\n        }\n:response:\n    ::\n\n        {\n            'task': <task_id>\n        }"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/install-policy/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"install-policy",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 13:18:42 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"ok\",\n    \"tasks\": [\n        \"e86dd596-b724-4b26-9107-ab4ac06c2efe\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Unlock the configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Waiting in \"ms\" for the policy to be installed\r",
													"setTimeout(() => {}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/free/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"free",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/lock/free/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"lock",
														"free",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Services",
			"item": [
				{
					"name": "Service",
					"item": [
						{
							"name": "Config Block/Create",
							"item": [
								{
									"name": "Locking configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"  pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"  pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/acquire/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"acquire",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "/acquire-config-lock",
													"path": [
														"acquire-config-lock"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates a new config",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201 and 'CurrentUuidConf'\", function () {\r",
													"  pm.response.to.have.status(201); //Checking that the answer is 201\r",
													"  var jsonData = pm.response.json(); //Create a variable and save the whole answer in it\r",
													"  var tempUuid = jsonData.uuid; //Create a variable and place the value in it \"uuid\"\r",
													"  pm.environment.set('CurrentUuidConf', tempUuid); //Passing uuid value to a variable 'CurrentUuidConf'\r",
													"  var tempId = jsonData.id; //Create a variable and place the value in it \"id\"\r",
													"  pm.environment.set('CurrentIdConf', tempId); //Passing the id value into a variable 'CurrentIdConf'\r",
													"    //console.info(\"Successfully created IdConf \" + pm.environment.get(\"CurrentIdConf\") + \" with uuid \" + pm.environment.get(\"CurrentUuidConf\")) //Write a message in the log\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"id\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"is_active\");\r",
													"  pm.expect(pm.response.text()).to.include(\"source\");\r",
													"  pm.expect(pm.response.text()).to.include(\"version\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"{{$randomUUID}}\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/config/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													},
													{
														"key": "Accept",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/config/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"id\": 24,\n    \"name\": \"string\",\n    \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n    \"is_active\": true,\n    \"domain_level\": 1,\n    \"subtype\": \"adminedit\",\n    \"description\": \"string\",\n    \"source\": 1,\n    \"version\": 10042\n}"
										}
									]
								}
							]
						},
						{
							"name": "Positive",
							"item": [
								{
									"name": "Returns list Service",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/param/service/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"param",
												"service",
												""
											],
											"query": [
												{
													"key": "uuids",
													"value": null,
													"disabled": true
												},
												{
													"key": "inspection_subtype",
													"value": null,
													"disabled": true
												}
											]
										},
										"description": "\n    Service (Protocol and port numbers src,dsc, either code and type icmp)\n    \n\n#### Predefined items\n\n```json\n\n[\n    {\n        \"is_autocreated\":false,\n        \"name\":\"TCP\",\n        \"proto\":\"6\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"026e8cae-ed03-11e4-beba-000c29e649e1\"\n    },\n    {\n        \"is_autocreated\":false,\n        \"name\":\"UDP\",\n        \"proto\":\"17\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"059b2590-ed03-11e4-8b94-000c29e649e1\"\n    },\n    {\n        \"is_autocreated\":false,\n        \"name\":\"ICMP\",\n        \"proto\":\"1\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"07da5470-ed03-11e4-810a-000c29e649e1\"\n    },\n    {\n        \"dst\":\"80\",\n        \"is_autocreated\":false,\n        \"name\":\"HTTP\",\n        \"proto\":\"6\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"ac52e04e-c723-4f15-ad1f-4cedce171ecd\"\n    },\n    {\n        \"dst\":\"443\",\n        \"is_autocreated\":false,\n        \"name\":\"TLS\",\n        \"proto\":\"6\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"717a00a9-8b91-46d6-aecd-61652474ffd9\"\n    },\n    {\n        \"dst\":\"21\",\n        \"is_autocreated\":false,\n        \"name\":\"FTP\",\n        \"proto\":\"6\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"b55ca47f-615f-4027-9542-85d4bcc0d9b1\"\n    },\n    {\n        \"dst\":\"53\",\n        \"is_autocreated\":false,\n        \"name\":\"DNS\",\n        \"proto\":\"17\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"7318018b-9630-40ce-91b4-6e7ca3c7d609\"\n    },\n    {\n        \"dst\":\"53\",\n        \"is_autocreated\":false,\n        \"name\":\"DNS\",\n        \"proto\":\"6\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"5318018b-9630-40ce-91b4-6e7ca3c7d609\"\n    },\n    {\n        \"dst\":\"22\",\n        \"is_autocreated\":false,\n        \"name\":\"SSH\",\n        \"proto\":\"6\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"83fc393f-69d0-418d-858e-b649174a90bb\"\n    },\n    {\n        \"dst\":\"3389\",\n        \"is_autocreated\":false,\n        \"name\":\"RDP\",\n        \"proto\":\"6\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"bce38e61-27e4-4446-a727-19d2e74a2d0b\"\n    }\n]```\n\n"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/param/service/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														""
													],
													"query": [
														{
															"key": "uuids",
															"value": null,
															"disabled": true
														},
														{
															"key": "inspection_subtype",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 10:23:07 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "[\r\n    {\r\n        \"id\": 1,\r\n        \"is_autocreated\": false,\r\n        \"uuid\": \"026e8cae-ed03-11e4-beba-000c29e649e1\",\r\n        \"is_deleted\": false,\r\n        \"lastmodified\": \"2022-06-01T14:27:29\",\r\n        \"domain_level\": 1,\r\n        \"name\": \"TCP\",\r\n        \"description\": null,\r\n        \"proto\": 6,\r\n        \"src\": \"\",\r\n        \"dst\": \"\",\r\n        \"icmp_type\": null,\r\n        \"icmp_code\": null,\r\n        \"requires_keep_connections\": false,\r\n        \"config\": 1,\r\n        \"version\": 10000\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"is_autocreated\": false,\r\n        \"uuid\": \"059b2590-ed03-11e4-8b94-000c29e649e1\",\r\n        \"is_deleted\": false,\r\n        \"lastmodified\": \"2022-06-01T14:27:29\",\r\n        \"domain_level\": 1,\r\n        \"name\": \"UDP\",\r\n        \"description\": null,\r\n        \"proto\": 17,\r\n        \"src\": \"\",\r\n        \"dst\": \"\",\r\n        \"icmp_type\": null,\r\n        \"icmp_code\": null,\r\n        \"requires_keep_connections\": false,\r\n        \"config\": 1,\r\n        \"version\": 10000\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"is_autocreated\": false,\r\n        \"uuid\": \"07da5470-ed03-11e4-810a-000c29e649e1\",\r\n        \"is_deleted\": false,\r\n        \"lastmodified\": \"2022-06-01T14:27:29\",\r\n        \"domain_level\": 1,\r\n        \"name\": \"ICMP\",\r\n        \"description\": null,\r\n        \"proto\": 1,\r\n        \"src\": \"\",\r\n        \"dst\": \"\",\r\n        \"icmp_type\": null,\r\n        \"icmp_code\": null,\r\n        \"requires_keep_connections\": false,\r\n        \"config\": 1,\r\n        \"version\": 10000\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"is_autocreated\": false,\r\n        \"uuid\": \"ac52e04e-c723-4f15-ad1f-4cedce171ecd\",\r\n        \"is_deleted\": false,\r\n        \"lastmodified\": \"2022-06-01T14:27:29\",\r\n        \"domain_level\": 1,\r\n        \"name\": \"HTTP\",\r\n        \"description\": null,\r\n        \"proto\": 6,\r\n        \"src\": \"\",\r\n        \"dst\": \"80\",\r\n        \"icmp_type\": null,\r\n        \"icmp_code\": null,\r\n        \"requires_keep_connections\": false,\r\n        \"config\": 1,\r\n        \"version\": 10000\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"is_autocreated\": false,\r\n        \"uuid\": \"717a00a9-8b91-46d6-aecd-61652474ffd9\",\r\n        \"is_deleted\": false,\r\n        \"lastmodified\": \"2022-06-01T14:27:29\",\r\n        \"domain_level\": 1,\r\n        \"name\": \"TLS\",\r\n        \"description\": null,\r\n        \"proto\": 6,\r\n        \"src\": \"\",\r\n        \"dst\": \"443\",\r\n        \"icmp_type\": null,\r\n        \"icmp_code\": null,\r\n        \"requires_keep_connections\": false,\r\n        \"config\": 1,\r\n        \"version\": 10000\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"is_autocreated\": false,\r\n        \"uuid\": \"b55ca47f-615f-4027-9542-85d4bcc0d9b1\",\r\n        \"is_deleted\": false,\r\n        \"lastmodified\": \"2022-06-01T14:27:29\",\r\n        \"domain_level\": 1,\r\n        \"name\": \"FTP\",\r\n        \"description\": null,\r\n        \"proto\": 6,\r\n        \"src\": \"\",\r\n        \"dst\": \"21\",\r\n        \"icmp_type\": null,\r\n        \"icmp_code\": null,\r\n        \"requires_keep_connections\": false,\r\n        \"config\": 1,\r\n        \"version\": 10000\r\n    },\r\n    {\r\n        \"id\": 7,\r\n        \"is_autocreated\": false,\r\n        \"uuid\": \"7318018b-9630-40ce-91b4-6e7ca3c7d609\",\r\n        \"is_deleted\": false,\r\n        \"lastmodified\": \"2022-06-01T14:27:29\",\r\n        \"domain_level\": 1,\r\n        \"name\": \"DNS\",\r\n        \"description\": null,\r\n        \"proto\": 17,\r\n        \"src\": \"\",\r\n        \"dst\": \"53\",\r\n        \"icmp_type\": null,\r\n        \"icmp_code\": null,\r\n        \"requires_keep_connections\": false,\r\n        \"config\": 1,\r\n        \"version\": 10000\r\n    },\r\n    {\r\n        \"id\": 8,\r\n        \"is_autocreated\": false,\r\n        \"uuid\": \"5318018b-9630-40ce-91b4-6e7ca3c7d609\",\r\n        \"is_deleted\": false,\r\n        \"lastmodified\": \"2022-06-01T14:27:29\",\r\n        \"domain_level\": 1,\r\n        \"name\": \"DNS\",\r\n        \"description\": null,\r\n        \"proto\": 6,\r\n        \"src\": \"\",\r\n        \"dst\": \"53\",\r\n        \"icmp_type\": null,\r\n        \"icmp_code\": null,\r\n        \"requires_keep_connections\": false,\r\n        \"config\": 1,\r\n        \"version\": 10000\r\n    },\r\n    {\r\n        \"id\": 9,\r\n        \"is_autocreated\": false,\r\n        \"uuid\": \"83fc393f-69d0-418d-858e-b649174a90bb\",\r\n        \"is_deleted\": false,\r\n        \"lastmodified\": \"2022-06-01T14:27:29\",\r\n        \"domain_level\": 1,\r\n        \"name\": \"SSH\",\r\n        \"description\": null,\r\n        \"proto\": 6,\r\n        \"src\": \"\",\r\n        \"dst\": \"22\",\r\n        \"icmp_type\": null,\r\n        \"icmp_code\": null,\r\n        \"requires_keep_connections\": false,\r\n        \"config\": 1,\r\n        \"version\": 10000\r\n    },\r\n    {\r\n        \"id\": 10,\r\n        \"is_autocreated\": false,\r\n        \"uuid\": \"bce38e61-27e4-4446-a727-19d2e74a2d0b\",\r\n        \"is_deleted\": false,\r\n        \"lastmodified\": \"2022-06-01T14:27:29\",\r\n        \"domain_level\": 1,\r\n        \"name\": \"RDP\",\r\n        \"description\": null,\r\n        \"proto\": 6,\r\n        \"src\": \"\",\r\n        \"dst\": \"3389\",\r\n        \"icmp_type\": null,\r\n        \"icmp_code\": null,\r\n        \"requires_keep_connections\": false,\r\n        \"config\": 1,\r\n        \"version\": 10000\r\n    }\r\n]"
										}
									]
								},
								{
									"name": "Creates Service TCP Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"pm.environment.set(\"UuidServiceTcpObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var VarServiceName = pm.variables.replaceIn('{{$randomDomainWord}}'); //Assign a random value to the new variable\r",
													"pm.environment.set('VarServiceName', VarServiceName); //Passing the new value into a variable\r",
													"// console.log(VarServiceName);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"TCP-{{VarServiceName}}\",\n  \"description\": \"Desc\",\n  \"proto\": 6,\n  \"src\": \"\",\n  \"dst\": \"0-{{$randomInt}}\",\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/param/service/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"param",
												"service",
												""
											]
										},
										"description": "\n    Service (Protocol and port numbers src,dsc, either code and type icmp)\n    \n\n"
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"TCP-nathanial\",\n  \"description\": \"Desc\",\n  \"domain_level\": 1,\n  \"proto\": 6,\n  \"src\": \"\",\n  \"dst\": \"0-462\",\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/param/service/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 10:28:45 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "324"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 13,\r\n    \"is_autocreated\": false,\r\n    \"uuid\": \"4517841d-1908-4e04-bf52-14975a93615b\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T10:28:45\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"TCP-nathanial\",\r\n    \"description\": \"Desc\",\r\n    \"proto\": 6,\r\n    \"src\": \"\",\r\n    \"dst\": \"0-462\",\r\n    \"icmp_type\": null,\r\n    \"icmp_code\": null,\r\n    \"requires_keep_connections\": false,\r\n    \"config\": 35,\r\n    \"version\": 10063\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"TCP-nathanial\",\n  \"description\": \"Desc\",\n  \"domain_level\": 1,\n  \"proto\": 260,\n  \"src\": \"\",\n  \"dst\": \"0-462\",\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/param/service/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 10:29:44 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "93"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"proto\": [\r\n        \"Make sure that the value is less than or equal to 255.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Creates Service UDP Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"pm.environment.set(\"UuidServiceUdpObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"UDP-{{VarServiceName}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"proto\": 17,\n  \"src\": \"\",\n  \"dst\": \"0-{{$randomInt}}\",\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/param/service/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"param",
												"service",
												""
											]
										},
										"description": "\n    Service (Protocol and port numbers src,dsc, either code and type icmp)\n    \n\n"
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"UDP-tyree\",\n  \"description\": \"Desc\",\n  \"proto\": 6,\n  \"src\": \"\",\n  \"dst\": \"0-216\",\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/param/service/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 10:28:45 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "324"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 15,\r\n    \"is_autocreated\": false,\r\n    \"uuid\": \"aacf4f41-50a6-4237-81b6-165ff93fe630\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T10:32:43\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"UDP-tyree\",\r\n    \"description\": \"Desc\",\r\n    \"proto\": 17,\r\n    \"src\": \"\",\r\n    \"dst\": \"0-216\",\r\n    \"icmp_type\": null,\r\n    \"icmp_code\": null,\r\n    \"requires_keep_connections\": false,\r\n    \"config\": 35,\r\n    \"version\": 10063\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"UDP-tyree\",\n  \"description\": \"Desc\",\n  \"proto\": 256,\n  \"src\": \"\",\n  \"dst\": \"0-44\",\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/param/service/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 10:29:44 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "93"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"proto\": [\r\n        \"Make sure that the value is less than or equal to 255.\"\r\n    ]\r\n}"
										}
									]
								},
								{
									"name": "Creates Service ICMP Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"pm.environment.set(\"UuidServiceIcmpObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"ICMP-{{VarServiceName}}\",\n  \"description\": \"{{$randomFullName}}\",\n  \"proto\": 1,\n  \"src\": \"\",\n  \"dst\": \"\",\n  \"icmp_type\": 3,\n  \"icmp_code\": 4,\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/param/service/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"param",
												"service",
												""
											]
										},
										"description": "\n    Service (Protocol and port numbers src,dsc, either code and type icmp)\n    \n\n"
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"ICMP-rosamond\",\n  \"description\": \"Desc\",\n  \"proto\": 1,\n  \"src\": \"\",\n  \"dst\": \"\",\n  \"icmp_type\": 3,\n  \"icmp_code\": 4,\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/param/service/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 10:28:45 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "324"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 14,\r\n    \"is_autocreated\": false,\r\n    \"uuid\": \"2db893f4-3c3f-420f-9380-34657b725500\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T11:56:54\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"ICMP-rosamond\",\r\n    \"description\": \"Desc\",\r\n    \"proto\": 1,\r\n    \"src\": \"\",\r\n    \"dst\": \"\",\r\n    \"icmp_type\": 3,\r\n    \"icmp_code\": 4,\r\n    \"requires_keep_connections\": false,\r\n    \"config\": 21,\r\n    \"version\": 10037\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"TCP-{{VarServiceName}}\",\n  \"description\": \"Desc\",\n  \"proto\": 256,\n  \"src\": \"\",\n  \"dst\": \"0-{{$randomInt}}\",\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/param/service/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 10:29:44 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "93"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"proto\": [\r\n        \"Make sure that the value is less than or equal to 255.\"\r\n    ]\r\n}"
										},
										{
											"name": "500 Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"ICMP-{{VarServiceName}}\",\n  \"description\": \"Desc\",\n  \"proto\": 1,\n  \"src\": \"\",\n  \"dst\": \"\",\n  \"icmp_type\": 20,\n  \"icmp_code\": 4,\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/param/service/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														""
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 11:59:20 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												}
											],
											"cookie": [],
											"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <title>ContentNotRenderedError\n          at /param/service/</title>\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background-color:#fff; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; }\n    h2 { margin-bottom:.8em; }\n    h3 { margin:1em 0 .5em 0; }\n    h4 { margin:0 0 .5em 0; font-weight: normal; }\n    code, pre { font-size: 100%; white-space: pre-wrap; }\n    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }\n    tbody td, tbody th { vertical-align:top; padding:2px 3px; }\n    thead th {\n      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;\n      font-weight:normal; font-size:11px; border:1px solid #ddd;\n    }\n    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    table.vars { margin:5px 0 2px 40px; }\n    table.vars td, table.req td { font-family:monospace; }\n    table td.code { width:100%; }\n    table td.code pre { overflow:hidden; }\n    table.source th { color:#666; }\n    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }\n    ul.traceback { list-style-type:none; color: #222; }\n    ul.traceback li.frame { padding-bottom:1em; color:#4f4f4f; }\n    ul.traceback li.user { background-color:#e0e0e0; color:#000 }\n    div.context { padding:10px 0; overflow:hidden; }\n    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }\n    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }\n    div.context ol li pre { display:inline; }\n    div.context ol.context-line li { color:#464646; background-color:#dfdfdf; padding: 3px 2px; }\n    div.context ol.context-line li span { position:absolute; right:32px; }\n    .user div.context ol.context-line li { background-color:#bbb; color:#000; }\n    .user div.context ol li { color:#666; }\n    div.commands { margin-left: 40px; }\n    div.commands a { color:#555; text-decoration:none; }\n    .user div.commands a { color: black; }\n    #summary { background: #ffc; }\n    #summary h2 { font-weight: normal; color: #666; }\n    #explanation { background:#eee; }\n    #template, #template-not-exist { background:#f6f6f6; }\n    #template-not-exist ul { margin: 0 0 10px 20px; }\n    #template-not-exist .postmortem-section { margin-bottom: 3px; }\n    #unicode-hint { background:#eee; }\n    #traceback { background:#eee; }\n    #requestinfo { background:#f6f6f6; padding-left:120px; }\n    #summary table { border:none; background:transparent; }\n    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }\n    #requestinfo h3 { margin-bottom:-1em; }\n    .error { background: #ffc; }\n    .specific { color:#cc3300; font-weight:bold; }\n    h2 span.commands { font-size:.7em; font-weight:normal; }\n    span.commands a:link {color:#5E5694;}\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n    .append-bottom { margin-bottom: 10px; }\n  </style>\n  \n  <script type=\"text/javascript\">\n    function hideAll(elems) {\n      for (var e = 0; e < elems.length; e++) {\n        elems[e].style.display = 'none';\n      }\n    }\n    window.onload = function() {\n      hideAll(document.querySelectorAll('table.vars'));\n      hideAll(document.querySelectorAll('ol.pre-context'));\n      hideAll(document.querySelectorAll('ol.post-context'));\n      hideAll(document.querySelectorAll('div.pastebin'));\n    }\n    function toggle() {\n      for (var i = 0; i < arguments.length; i++) {\n        var e = document.getElementById(arguments[i]);\n        if (e) {\n          e.style.display = e.style.display == 'none' ? 'block': 'none';\n        }\n      }\n      return false;\n    }\n    function varToggle(link, id) {\n      toggle('v' + id);\n      var s = link.getElementsByTagName('span')[0];\n      var uarr = String.fromCharCode(0x25b6);\n      var darr = String.fromCharCode(0x25bc);\n      s.textContent = s.textContent == uarr ? darr : uarr;\n      return false;\n    }\n    function switchPastebinFriendly(link) {\n      s1 = \"Switch to copy-and-paste view\";\n      s2 = \"Switch back to interactive view\";\n      link.textContent = link.textContent.trim() == s1 ? s2: s1;\n      toggle('browserTraceback', 'pastebinTraceback');\n      return false;\n    }\n  </script>\n  \n</head>\n<body>\n<div id=\"summary\">\n  <h1>ContentNotRenderedError\n       at /param/service/</h1>\n  <pre class=\"exception_value\">The response content must be rendered before it can be accessed.</pre>\n  <table class=\"meta\">\n\n    <tr>\n      <th>Request Method:</th>\n      <td>POST</td>\n    </tr>\n    <tr>\n      <th>Request URL:</th>\n      <td>http://172.17.117.21/param/service/</td>\n    </tr>\n\n    <tr>\n      <th>Django Version:</th>\n      <td>2.2.12</td>\n    </tr>\n\n    <tr>\n      <th>Exception Type:</th>\n      <td>ContentNotRenderedError</td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Value:</th>\n      <td><pre>The response content must be rendered before it can be accessed.</pre></td>\n    </tr>\n\n\n    <tr>\n      <th>Exception Location:</th>\n      <td>/usr/lib/python3.7/site-packages/django/template/response.py in content, line 128</td>\n    </tr>\n\n    <tr>\n      <th>Python Executable:</th>\n      <td>/usr/bin/python3</td>\n    </tr>\n    <tr>\n      <th>Python Version:</th>\n      <td>3.7.11</td>\n    </tr>\n    <tr>\n      <th>Python Path:</th>\n      <td><pre>[&#39;/usr/share/djdb&#39;,\n &#39;/&#39;,\n &#39;/usr/bin&#39;,\n &#39;/usr/lib64/python37.zip&#39;,\n &#39;/usr/lib64/python3.7&#39;,\n &#39;/usr/lib64/python3.7/lib-dynload&#39;,\n &#39;/usr/lib64/python3.7/site-packages&#39;,\n &#39;/usr/lib/python3.7/site-packages&#39;]</pre></td>\n    </tr>\n    <tr>\n      <th>Server time:</th>\n      <td>Fri, 3 June 2022 11:59:20 +0000</td>\n    </tr>\n  </table>\n</div>\n\n\n\n\n<div id=\"traceback\">\n  <h2>Traceback <span class=\"commands\"><a href=\"#\" onclick=\"return switchPastebinFriendly(this);\">\n    Switch to copy-and-paste view</a></span>\n  </h2>\n  <div id=\"browserTraceback\">\n    <ul class=\"traceback\">\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/core/handlers/exception.py</code> in <code>inner</code>\n\n          \n            <div class=\"context\" id=\"c140657452461824\">\n              \n                <ol start=\"27\" class=\"pre-context\" id=\"pre140657452461824\">\n                \n                  <li onclick=\"toggle('pre140657452461824', 'post140657452461824')\"><pre>    This decorator is automatically applied to all middleware to ensure that</pre></li>\n                \n                  <li onclick=\"toggle('pre140657452461824', 'post140657452461824')\"><pre>    no middleware leaks an exception and that the next middleware in the stack</pre></li>\n                \n                  <li onclick=\"toggle('pre140657452461824', 'post140657452461824')\"><pre>    can rely on getting a response instead of an exception.</pre></li>\n                \n                  <li onclick=\"toggle('pre140657452461824', 'post140657452461824')\"><pre>    &quot;&quot;&quot;</pre></li>\n                \n                  <li onclick=\"toggle('pre140657452461824', 'post140657452461824')\"><pre>    @wraps(get_response)</pre></li>\n                \n                  <li onclick=\"toggle('pre140657452461824', 'post140657452461824')\"><pre>    def inner(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre140657452461824', 'post140657452461824')\"><pre>        try:</pre></li>\n                \n                </ol>\n              \n              <ol start=\"34\" class=\"context-line\">\n                <li onclick=\"toggle('pre140657452461824', 'post140657452461824')\"><pre>            response = get_response(request)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='35' class=\"post-context\" id=\"post140657452461824\">\n                  \n                  <li onclick=\"toggle('pre140657452461824', 'post140657452461824')\"><pre>        except Exception as exc:</pre></li>\n                  \n                  <li onclick=\"toggle('pre140657452461824', 'post140657452461824')\"><pre>            response = response_for_exception(request, exc)</pre></li>\n                  \n                  <li onclick=\"toggle('pre140657452461824', 'post140657452461824')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre140657452461824', 'post140657452461824')\"><pre>    return inner</pre></li>\n                  \n                  <li onclick=\"toggle('pre140657452461824', 'post140657452461824')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre140657452461824', 'post140657452461824')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '140657452461824')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v140657452461824\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>exc</td>\n                    <td class=\"code\"><pre>ContentNotRenderedError(&#39;The response content must be rendered before it can be accessed.&#39;)</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>get_response</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7fed60a9a4d0&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: POST &#39;/param/service/&#39;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/utils/deprecation.py</code> in <code>__call__</code>\n\n          \n            <div class=\"context\" id=\"c140657451089824\">\n              \n                <ol start=\"89\" class=\"pre-context\" id=\"pre140657451089824\">\n                \n                  <li onclick=\"toggle('pre140657451089824', 'post140657451089824')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre140657451089824', 'post140657451089824')\"><pre>    def __call__(self, request):</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451089824', 'post140657451089824')\"><pre>        response = None</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451089824', 'post140657451089824')\"><pre>        if hasattr(self, &#39;process_request&#39;):</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451089824', 'post140657451089824')\"><pre>            response = self.process_request(request)</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451089824', 'post140657451089824')\"><pre>        response = response or self.get_response(request)</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451089824', 'post140657451089824')\"><pre>        if hasattr(self, &#39;process_response&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"96\" class=\"context-line\">\n                <li onclick=\"toggle('pre140657451089824', 'post140657451089824')\"><pre>            response = self.process_response(request, response)</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='97' class=\"post-context\" id=\"post140657451089824\">\n                  \n                  <li onclick=\"toggle('pre140657451089824', 'post140657451089824')\"><pre>        return response</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '140657451089824')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v140657451089824\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: POST &#39;/param/service/&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7fed60a9a4d0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/middleware/common.py</code> in <code>process_response</code>\n\n          \n            <div class=\"context\" id=\"c140657451089264\">\n              \n                <ol start=\"105\" class=\"pre-context\" id=\"pre140657451089264\">\n                \n                  <li onclick=\"toggle('pre140657451089264', 'post140657451089264')\"><pre>        if response.status_code == 404:</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451089264', 'post140657451089264')\"><pre>            if self.should_redirect_with_slash(request):</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451089264', 'post140657451089264')\"><pre>                return self.response_redirect_class(self.get_full_path_with_slash(request))</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451089264', 'post140657451089264')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre140657451089264', 'post140657451089264')\"><pre>        # Add the Content-Length header to non-streaming responses if not</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451089264', 'post140657451089264')\"><pre>        # already set.</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451089264', 'post140657451089264')\"><pre>        if not response.streaming and not response.has_header(&#39;Content-Length&#39;):</pre></li>\n                \n                </ol>\n              \n              <ol start=\"112\" class=\"context-line\">\n                <li onclick=\"toggle('pre140657451089264', 'post140657451089264')\"><pre>            response[&#39;Content-Length&#39;] = str(len(response.content))</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='113' class=\"post-context\" id=\"post140657451089264\">\n                  \n                  <li onclick=\"toggle('pre140657451089264', 'post140657451089264')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre140657451089264', 'post140657451089264')\"><pre>        return response</pre></li>\n                  \n                  <li onclick=\"toggle('pre140657451089264', 'post140657451089264')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre140657451089264', 'post140657451089264')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre140657451089264', 'post140657451089264')\"><pre>class BrokenLinkEmailsMiddleware(MiddlewareMixin):</pre></li>\n                  \n                  <li onclick=\"toggle('pre140657451089264', 'post140657451089264')\"><pre></pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '140657451089264')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v140657451089264\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>request</td>\n                    <td class=\"code\"><pre>&lt;WSGIRequest: POST &#39;/param/service/&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>response</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;django.middleware.common.CommonMiddleware object at 0x7fed60a9a4d0&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n        \n        <li class=\"frame django\">\n          <code>/usr/lib/python3.7/site-packages/django/template/response.py</code> in <code>content</code>\n\n          \n            <div class=\"context\" id=\"c140657451087824\">\n              \n                <ol start=\"121\" class=\"pre-context\" id=\"pre140657451087824\">\n                \n                  <li onclick=\"toggle('pre140657451087824', 'post140657451087824')\"><pre>            )</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451087824', 'post140657451087824')\"><pre>        return super().__iter__()</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451087824', 'post140657451087824')\"><pre></pre></li>\n                \n                  <li onclick=\"toggle('pre140657451087824', 'post140657451087824')\"><pre>    @property</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451087824', 'post140657451087824')\"><pre>    def content(self):</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451087824', 'post140657451087824')\"><pre>        if not self._is_rendered:</pre></li>\n                \n                  <li onclick=\"toggle('pre140657451087824', 'post140657451087824')\"><pre>            raise ContentNotRenderedError(</pre></li>\n                \n                </ol>\n              \n              <ol start=\"128\" class=\"context-line\">\n                <li onclick=\"toggle('pre140657451087824', 'post140657451087824')\"><pre>                &#39;The response content must be rendered before it can be accessed.&#39;</pre> <span>…</span></li>\n              </ol>\n              \n                <ol start='129' class=\"post-context\" id=\"post140657451087824\">\n                  \n                  <li onclick=\"toggle('pre140657451087824', 'post140657451087824')\"><pre>            )</pre></li>\n                  \n                  <li onclick=\"toggle('pre140657451087824', 'post140657451087824')\"><pre>        return super().content</pre></li>\n                  \n                  <li onclick=\"toggle('pre140657451087824', 'post140657451087824')\"><pre></pre></li>\n                  \n                  <li onclick=\"toggle('pre140657451087824', 'post140657451087824')\"><pre>    @content.setter</pre></li>\n                  \n                  <li onclick=\"toggle('pre140657451087824', 'post140657451087824')\"><pre>    def content(self, value):</pre></li>\n                  \n                  <li onclick=\"toggle('pre140657451087824', 'post140657451087824')\"><pre>        &quot;&quot;&quot;Set the content for the response.&quot;&quot;&quot;</pre></li>\n                  \n              </ol>\n              \n            </div>\n          \n\n          \n            <div class=\"commands\">\n                \n                    <a href=\"#\" onclick=\"return varToggle(this, '140657451087824')\"><span>&#x25b6;</span> Local vars</a>\n                \n            </div>\n            <table class=\"vars\" id=\"v140657451087824\">\n              <thead>\n                <tr>\n                  <th>Variable</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                \n                  <tr>\n                    <td>__class__</td>\n                    <td class=\"code\"><pre>&lt;class &#39;django.template.response.SimpleTemplateResponse&#39;&gt;</pre></td>\n                  </tr>\n                \n                  <tr>\n                    <td>self</td>\n                    <td class=\"code\"><pre>&lt;Response status_code=403, &quot;text/html; charset=utf-8&quot;&gt;</pre></td>\n                  </tr>\n                \n              </tbody>\n            </table>\n          \n        </li>\n      \n    </ul>\n  </div>\n  <form action=\"http://dpaste.com/\" name=\"pasteform\" id=\"pasteform\" method=\"post\">\n\n  <div id=\"pastebinTraceback\" class=\"pastebin\">\n    <input type=\"hidden\" name=\"language\" value=\"PythonConsole\">\n    <input type=\"hidden\" name=\"title\"\n      value=\"ContentNotRenderedError at /param/service/\">\n    <input type=\"hidden\" name=\"source\" value=\"Django Dpaste Agent\">\n    <input type=\"hidden\" name=\"poster\" value=\"Django\">\n    <textarea name=\"content\" id=\"traceback_area\" cols=\"140\" rows=\"25\">\nEnvironment:\n\n\nRequest Method: POST\nRequest URL: http://172.17.117.21/param/service/\n\nDjango Version: 2.2.12\nPython Version: 3.7.11\nInstalled Applications:\n(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)\nInstalled Middleware:\n[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]\n\n\n\nTraceback:\n\nFile \"/usr/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\n  34.             response = get_response(request)\n\nFile \"/usr/lib/python3.7/site-packages/django/utils/deprecation.py\" in __call__\n  96.             response = self.process_response(request, response)\n\nFile \"/usr/lib/python3.7/site-packages/django/middleware/common.py\" in process_response\n  112.             response[&#39;Content-Length&#39;] = str(len(response.content))\n\nFile \"/usr/lib/python3.7/site-packages/django/template/response.py\" in content\n  128.                 &#39;The response content must be rendered before it can be accessed.&#39;\n\nException Type: ContentNotRenderedError at /param/service/\nException Value: The response content must be rendered before it can be accessed.\n</textarea>\n  <br><br>\n  <input type=\"submit\" value=\"Share this traceback on a public website\">\n  </div>\n</form>\n</div>\n\n\n\n<div id=\"requestinfo\">\n  <h2>Request information</h2>\n\n\n  \n    <h3 id=\"user-info\">USER</h3>\n    <p>[Built-in administrator():4fa8223e-19df-4596-9c15-f3cd93f1330a:v10013]</p>\n  \n\n  <h3 id=\"get-info\">GET</h3>\n  \n    <p>No GET data</p>\n  \n\n  <h3 id=\"post-info\">POST</h3>\n  \n    <p>No POST data</p>\n  \n  <h3 id=\"files-info\">FILES</h3>\n  \n    <p>No FILES data</p>\n  \n\n\n  <h3 id=\"cookie-info\">COOKIES</h3>\n  \n    <table class=\"req\">\n      <thead>\n        <tr>\n          <th>Variable</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        \n          <tr>\n            <td>sessionid</td>\n            <td class=\"code\"><pre>&#39;88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n          </tr>\n        \n      </tbody>\n    </table>\n  \n\n  <h3 id=\"meta-info\">META</h3>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Variable</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>CONTENT_LENGTH</td>\n          <td class=\"code\"><pre>&#39;197&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;application/json&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT</td>\n          <td class=\"code\"><pre>&#39;*/*&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_ACCEPT_ENCODING</td>\n          <td class=\"code\"><pre>&#39;gzip, deflate, br&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_AUTHORIZATION</td>\n          <td class=\"code\"><pre>&#39;Basic YWRtaW46Q29udC00Llg=&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CACHE_CONTROL</td>\n          <td class=\"code\"><pre>&#39;no-cache&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_CONNECTION</td>\n          <td class=\"code\"><pre>&#39;close&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_COOKIE</td>\n          <td class=\"code\"><pre>&#39;sessionid=88padymt6y6z0fb5tj3qvli9xtneatnx&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_HOST</td>\n          <td class=\"code\"><pre>&#39;172.17.117.21&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_POSTMAN_TOKEN</td>\n          <td class=\"code\"><pre>&#39;ee93165c-a2ac-438c-abe3-c393c071ddee&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_USER_AGENT</td>\n          <td class=\"code\"><pre>&#39;PostmanRuntime/7.29.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_FOR</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_FORWARDED_PROTO</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_REAL_IP</td>\n          <td class=\"code\"><pre>&#39;172.17.112.130&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_USERNAME</td>\n          <td class=\"code\"><pre>&#39;admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>HTTP_X_SSL_CLIENT_VERIFY</td>\n          <td class=\"code\"><pre>&#39;success&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PATH_INFO</td>\n          <td class=\"code\"><pre>&#39;/param/service/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>QUERY_STRING</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>RAW_URI</td>\n          <td class=\"code\"><pre>&#39;/param/service/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_ADDR</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REMOTE_PORT</td>\n          <td class=\"code\"><pre>&#39;14464&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REQUEST_METHOD</td>\n          <td class=\"code\"><pre>&#39;POST&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SCRIPT_NAME</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_NAME</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PORT</td>\n          <td class=\"code\"><pre>&#39;8081&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_PROTOCOL</td>\n          <td class=\"code\"><pre>&#39;HTTP/1.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_SOFTWARE</td>\n          <td class=\"code\"><pre>&#39;gunicorn/19.9.0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>gunicorn.socket</td>\n          <td class=\"code\"><pre>&lt;socket.socket fd=12, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;127.0.0.1&#39;, 8081), raddr=(&#39;127.0.0.1&#39;, 14464)&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.errors</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7fed5d68d610&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.file_wrapper</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.input</td>\n          <td class=\"code\"><pre>&lt;gunicorn.http.body.Body object at 0x7fed5d77fad0&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multiprocess</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.multithread</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.run_once</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.url_scheme</td>\n          <td class=\"code\"><pre>&#39;http&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>wsgi.version</td>\n          <td class=\"code\"><pre>(1, 0)</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n\n  <h3 id=\"settings-info\">Settings</h3>\n  <h4>Using settings module <code>djdb.settings</code></h4>\n  <table class=\"req\">\n    <thead>\n      <tr>\n        <th>Setting</th>\n        <th>Value</th>\n      </tr>\n    </thead>\n    <tbody>\n      \n        <tr>\n          <td>ABSOLUTE_URL_OVERRIDES</td>\n          <td class=\"code\"><pre>{}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ADMINS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ALLOWED_HOSTS</td>\n          <td class=\"code\"><pre>[&#39;*&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>APPEND_SLASH</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ATOMIC_REQUESTS</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_BACKENDS</td>\n          <td class=\"code\"><pre>[&#39;scauth.backend.BasicAdminBackend&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTHENTICATION_DOMAIN_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;@&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_PASSWORD_VALIDATORS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>AUTH_USER_MODEL</td>\n          <td class=\"code\"><pre>&#39;administration.Admin&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>BACKUP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/backup/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CACHE_MIDDLEWARE_SECONDS</td>\n          <td class=\"code\"><pre>600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CONN_MAX_AGE</td>\n          <td class=\"code\"><pre>30</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_AGE</td>\n          <td class=\"code\"><pre>31449600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;csrftoken&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>&#39;Lax&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_FAILURE_VIEW</td>\n          <td class=\"code\"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_HEADER_NAME</td>\n          <td class=\"code\"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_TRUSTED_ORIGINS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>CSRF_USE_SESSIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASES</td>\n          <td class=\"code\"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,\n             &#39;AUTOCOMMIT&#39;: True,\n             &#39;CONN_MAX_AGE&#39;: 0,\n             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql_psycopg2&#39;,\n             &#39;HOST&#39;: &#39;127.0.0.1&#39;,\n             &#39;NAME&#39;: &#39;djdb&#39;,\n             &#39;OPTIONS&#39;: {},\n             &#39;PASSWORD&#39;: &#39;********************&#39;,\n             &#39;PORT&#39;: &#39;6432&#39;,\n             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,\n                      &#39;COLLATION&#39;: None,\n                      &#39;MIRROR&#39;: None,\n                      &#39;NAME&#39;: &#39;testdb_485815_3889065&#39;},\n             &#39;TIME_ZONE&#39;: None,\n             &#39;USER&#39;: &#39;djdb&#39;},\n &#39;keys&#39;: &#39;********************&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATABASE_ROUTERS</td>\n          <td class=\"code\"><pre>[&#39;keys.dbrouter.DBRouter&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>10737418240</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATA_UPLOAD_MAX_NUMBER_FIELDS</td>\n          <td class=\"code\"><pre>1000</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATETIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d %H:%M:%S&#39;,\n &#39;%Y-%m-%d %H:%M:%S.%f&#39;,\n &#39;%Y-%m-%d %H:%M&#39;,\n &#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y %H:%M:%S&#39;,\n &#39;%m/%d/%Y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%Y %H:%M&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y %H:%M:%S&#39;,\n &#39;%m/%d/%y %H:%M:%S.%f&#39;,\n &#39;%m/%d/%y %H:%M&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;%Y-%m-%dT%H:%M:%S.%f&#39;,\n &#39;%d.%m.%Y %H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;Y-m-d&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DATE_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%Y-%m-%d&#39;,\n &#39;%m/%d/%Y&#39;,\n &#39;%m/%d/%y&#39;,\n &#39;%b %d %Y&#39;,\n &#39;%b %d, %Y&#39;,\n &#39;%d %b %Y&#39;,\n &#39;%d %b, %Y&#39;,\n &#39;%B %d %Y&#39;,\n &#39;%B %d, %Y&#39;,\n &#39;%d %B %Y&#39;,\n &#39;%d %B, %Y&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_LOG_FORMAT</td>\n          <td class=\"code\"><pre>&#39;str&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DECIMAL_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;.&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_CONTENT_TYPE</td>\n          <td class=\"code\"><pre>&#39;text/html&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>\n          <td class=\"code\"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FILE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_FROM_EMAIL</td>\n          <td class=\"code\"><pre>&#39;webmaster@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_INDEX_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;en-US&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DEFAULT_TABLESPACE</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_SYNCDB</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISABLE_MIGRATIONS_FOR_TESTS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DISALLOWED_USER_AGENTS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>DRAMATIQ_BROKER</td>\n          <td class=\"code\"><pre>{&#39;BROKER&#39;: &#39;dramatiq.brokers.redis.RedisBroker&#39;,\n &#39;MIDDLEWARE&#39;: [&#39;dramatiq.middleware.TimeLimit&#39;,\n                &#39;dramatiq.middleware.Callbacks&#39;,\n                &#39;django_dramatiq.middleware.DbConnectionsMiddleware&#39;,\n                &#39;task.middleware.TaskStoringMiddleware&#39;],\n &#39;OPTIONS&#39;: {&#39;url&#39;: &#39;redis://127.0.0.1:6379/0&#39;}}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST</td>\n          <td class=\"code\"><pre>&#39;localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_PASSWORD</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_HOST_USER</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_PORT</td>\n          <td class=\"code\"><pre>25</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_CERTFILE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SSL_KEYFILE</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_SUBJECT_PREFIX</td>\n          <td class=\"code\"><pre>&#39;[Django] &#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_TIMEOUT</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_LOCALTIME</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_SSL</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>EMAIL_USE_TLS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_CHARSET</td>\n          <td class=\"code\"><pre>&#39;utf-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_HANDLERS</td>\n          <td class=\"code\"><pre>(&#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>\n          <td class=\"code\"><pre>2621440</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_PERMISSIONS</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FILE_UPLOAD_TEMP_DIR</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIRST_DAY_OF_WEEK</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FIXTURE_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORCE_SCRIPT_NAME</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORMAT_MODULE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FORM_RENDERER</td>\n          <td class=\"code\"><pre>&#39;django.forms.renderers.DjangoTemplates&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>FUSE_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/cont&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GEOIP_PATH</td>\n          <td class=\"code\"><pre>&#39;/usr/share/GeoIP&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>GLOBAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>IGNORABLE_404_URLS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INSTALLED_APPS</td>\n          <td class=\"code\"><pre>(&#39;django.contrib.contenttypes&#39;,\n &#39;django.contrib.sessions&#39;,\n &#39;rest_framework&#39;,\n &#39;django_filters&#39;,\n &#39;django_dramatiq&#39;,\n &#39;baseobj&#39;,\n &#39;param&#39;,\n &#39;firewall&#39;,\n &#39;rule&#39;,\n &#39;consumer&#39;,\n &#39;structure&#39;,\n &#39;administration&#39;,\n &#39;backup&#39;,\n &#39;config&#39;,\n &#39;for_sql_migrations&#39;,\n &#39;group&#39;,\n &#39;install_policy&#39;,\n &#39;ips&#39;,\n &#39;keys&#39;,\n &#39;license&#39;,\n &#39;links&#39;,\n &#39;scauth&#39;,\n &#39;screplication&#39;,\n &#39;serverapiv1&#39;,\n &#39;task&#39;,\n &#39;update&#39;,\n &#39;userauth&#39;,\n &#39;qos&#39;,\n &#39;networking&#39;,\n &#39;interfaces&#39;,\n &#39;cluster&#39;,\n &#39;cgw&#39;,\n &#39;aserv&#39;,\n &#39;dosprotect&#39;,\n &#39;logs&#39;,\n &#39;channels&#39;,\n &#39;netflow&#39;,\n &#39;multiwan&#39;,\n &#39;ssh&#39;,\n &#39;lldp&#39;,\n &#39;dns&#39;,\n &#39;mailer&#39;,\n &#39;django.contrib.staticfiles&#39;,\n &#39;drf_yasg&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>INTERNAL_IPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES</td>\n          <td class=\"code\"><pre>((&#39;en&#39;, &#39;English&#39;), (&#39;ru&#39;, &#39;Russian&#39;))</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGES_BIDI</td>\n          <td class=\"code\"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_CODE</td>\n          <td class=\"code\"><pre>&#39;ru-RU&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_AGE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;django_language&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LANGUAGE_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LICENSE_SECTION_NAME</td>\n          <td class=\"code\"><pre>&#39;Continent 4&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,\n &#39;/usr/share/djdb/djdb/../locales/common&#39;,\n &#39;/usr/share/djdb/djdb/../locales/countries&#39;)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COMMON</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/common&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_COUNTRIES</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/countries&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCALE_PATHS_ERRORS</td>\n          <td class=\"code\"><pre>(&#39;/usr/share/djdb/djdb/../locales/errors&#39;,)</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOCAL_CONFIG_LEVEL</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING</td>\n          <td class=\"code\"><pre>{&#39;disable_existing_loggers&#39;: True,\n &#39;formatters&#39;: {&#39;admin_action_formatter&#39;: {&#39;()&#39;: &#39;djdb.log.AdminActionFormatter&#39;,\n                                           &#39;format&#39;: &#39;%(asctime)s django: &#39;\n                                                     &#39;%(message)s&#39;},\n                &#39;simple&#39;: {&#39;datefmt&#39;: &#39;%b %d %H:%M:%S&#39;,\n                           &#39;format&#39;: &#39;%(asctime)s django: %(message)s&#39;}},\n &#39;handlers&#39;: {&#39;admin_action_handler&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                       &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                       &#39;facility&#39;: &#39;local6&#39;,\n                                       &#39;formatter&#39;: &#39;admin_action_formatter&#39;},\n              &#39;cert_auth_handler&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                                    &#39;delay&#39;: True,\n                                    &#39;filename&#39;: &#39;/var/log/nginx/cert_error.log&#39;,\n                                    &#39;formatter&#39;: &#39;simple&#39;},\n              &#39;console&#39;: {&#39;class&#39;: &#39;logging.StreamHandler&#39;, &#39;level&#39;: &#39;DEBUG&#39;},\n              &#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,\n                       &#39;filename&#39;: &#39;/var/log/djdb.log&#39;},\n              &#39;syslog_local2&#39;: {&#39;address&#39;: &#39;/dev/log&#39;,\n                                &#39;class&#39;: &#39;djdb.log.WaitSysLogHandler&#39;,\n                                &#39;facility&#39;: &#39;local2&#39;,\n                                &#39;formatter&#39;: &#39;simple&#39;}},\n &#39;loggers&#39;: {&#39;admin_actions&#39;: {&#39;handlers&#39;: [&#39;admin_action_handler&#39;],\n                               &#39;level&#39;: &#39;INFO&#39;,\n                               &#39;propogate&#39;: True},\n             &#39;audit&#39;: {&#39;handlers&#39;: [&#39;syslog_local2&#39;, &#39;console&#39;],\n                       &#39;level&#39;: &#39;INFO&#39;,\n                       &#39;propogate&#39;: True},\n             &#39;cert_auth&#39;: {&#39;handlers&#39;: [&#39;cert_auth_handler&#39;],\n                           &#39;level&#39;: &#39;ERROR&#39;,\n                           &#39;propogate&#39;: True},\n             &#39;django&#39;: {&#39;handlers&#39;: [&#39;console&#39;],\n                        &#39;level&#39;: &#39;ERROR&#39;,\n                        &#39;propagate&#39;: True},\n             &#39;django.request_data&#39;: {&#39;handlers&#39;: [&#39;file&#39;],\n                                     &#39;level&#39;: &#39;DEBUG&#39;,\n                                     &#39;propagate&#39;: True}},\n &#39;version&#39;: 1}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGGING_CONFIG</td>\n          <td class=\"code\"><pre>&#39;logging.config.dictConfig&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_REDIRECT_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/profile/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGIN_URL</td>\n          <td class=\"code\"><pre>&#39;/accounts/login/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOGOUT_REDIRECT_URL</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_MC_SPAM</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>LOG_STREAMING_CONTENT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MANAGERS</td>\n          <td class=\"code\"><pre>()</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_ROOT</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MEDIA_URL</td>\n          <td class=\"code\"><pre>&#39;&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MESSAGE_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIDDLEWARE</td>\n          <td class=\"code\"><pre>[&#39;django.middleware.security.SecurityMiddleware&#39;,\n &#39;django.middleware.common.CommonMiddleware&#39;,\n &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,\n &#39;djdb.config_middleware.ConfigDefaultsMiddleware&#39;,\n &#39;scauth.middleware.AuthMiddleware&#39;,\n &#39;config.drf_middleware.ConfigLockMiddleware&#39;,\n &#39;djdb.log_middleware.LoggingMiddleware&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MIGRATION_MODULES</td>\n          <td class=\"code\"><pre>&lt;djdb.managers.MigrationManager object at 0x7fed65a98890&gt;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>MONTH_DAY_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F j&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NODE_TYPE</td>\n          <td class=\"code\"><pre>&#39;NCC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_CLIENT_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NULL_LICENSE_ID</td>\n          <td class=\"code\"><pre>&#39;0&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>NUMBER_GROUPING</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_HASHERS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PREPEND_WWW</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PROJECT_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/djdb&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>PUB_KEYS_PATH</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_DB</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_HOST</td>\n          <td class=\"code\"><pre>&#39;127.0.0.1&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_MAILER_DB</td>\n          <td class=\"code\"><pre>2</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REDIS_PORT</td>\n          <td class=\"code\"><pre>6379</pre></td>\n        </tr>\n      \n        <tr>\n          <td>REST_FRAMEWORK</td>\n          <td class=\"code\"><pre>{&#39;DATETIME_FORMAT&#39;: &#39;%Y-%m-%dT%H:%M:%S&#39;,\n &#39;DATETIME_INPUT_FORMATS&#39;: (&#39;%Y-%m-%d&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S&#39;,\n                            &#39;%Y-%m-%dT%H:%M:%S.%f&#39;),\n &#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: [&#39;scauth.drf_authentication.BasicAdminAuthentication&#39;],\n &#39;DEFAULT_FILTER_BACKENDS&#39;: (&#39;django_filters.rest_framework.DjangoFilterBackend&#39;,),\n &#39;DEFAULT_PERMISSION_CLASSES&#39;: [&#39;djdb.permissions.PrimaryAdminPermission&#39;],\n &#39;TEST_REQUEST_DEFAULT_FORMAT&#39;: &#39;json&#39;}</pre></td>\n        </tr>\n      \n        <tr>\n          <td>ROOT_URLCONF</td>\n          <td class=\"code\"><pre>&#39;djdb.urls&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECRET_KEY</td>\n          <td class=\"code\"><pre>&#39;********************&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_BROWSER_XSS_FILTER</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_PRELOAD</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_HSTS_SECONDS</td>\n          <td class=\"code\"><pre>0</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_PROXY_SSL_HEADER</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_REDIRECT_EXEMPT</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_HOST</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SECURE_SSL_REDIRECT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SERVER_EMAIL</td>\n          <td class=\"code\"><pre>&#39;root@localhost&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_CACHE_ALIAS</td>\n          <td class=\"code\"><pre>&#39;default&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_AGE</td>\n          <td class=\"code\"><pre>1209600</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_DOMAIN</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_HTTPONLY</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_NAME</td>\n          <td class=\"code\"><pre>&#39;sessionid&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_PATH</td>\n          <td class=\"code\"><pre>&#39;/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SAMESITE</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_COOKIE_SECURE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_ENGINE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_FILE_PATH</td>\n          <td class=\"code\"><pre>None</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SAVE_EVERY_REQUEST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SESSION_SERIALIZER</td>\n          <td class=\"code\"><pre>&#39;baseobj.jsonserialize.CustomSerializer&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SETTINGS_MODULE</td>\n          <td class=\"code\"><pre>&#39;djdb.settings&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATETIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y P&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SHORT_DATE_FORMAT</td>\n          <td class=\"code\"><pre>&#39;m/d/Y&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SIGNING_BACKEND</td>\n          <td class=\"code\"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SILENCED_SYSTEM_CHECKS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SITE_ID</td>\n          <td class=\"code\"><pre>1</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_DIRS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_FINDERS</td>\n          <td class=\"code\"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,\n &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATICFILES_STORAGE</td>\n          <td class=\"code\"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_ROOT</td>\n          <td class=\"code\"><pre>&#39;/usr/share/djdb/static&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>STATIC_URL</td>\n          <td class=\"code\"><pre>&#39;/static/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>SYSTEM_LANGUAGE</td>\n          <td class=\"code\"><pre>&#39;ru_RU.UTF-8&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEMPLATES</td>\n          <td class=\"code\"><pre>[{&#39;APP_DIRS&#39;: True,\n  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,\n  &#39;DIRS&#39;: [&#39;/usr/share/djdb/djdb/../templates&#39;,\n           &#39;/usr/share/djdb/djdb/../userauth/templates&#39;],\n  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.contrib.auth.context_processors.auth&#39;,\n                                     &#39;django.template.context_processors.debug&#39;,\n                                     &#39;django.template.context_processors.i18n&#39;,\n                                     &#39;django.template.context_processors.media&#39;,\n                                     &#39;django.template.context_processors.static&#39;,\n                                     &#39;django.template.context_processors.tz&#39;,\n                                     &#39;django.contrib.messages.context_processors.messages&#39;,\n                                     &#39;django.template.context_processors.request&#39;]}}]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_NON_SERIALIZED_APPS</td>\n          <td class=\"code\"><pre>[]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUN</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TEST_RUNNER</td>\n          <td class=\"code\"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>&#39;,&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_FORMAT</td>\n          <td class=\"code\"><pre>&#39;H:i:s&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_INPUT_FORMATS</td>\n          <td class=\"code\"><pre>[&#39;%H:%M:%S&#39;, &#39;%H:%M:%S.%f&#39;, &#39;%H:%M&#39;]</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TIME_ZONE</td>\n          <td class=\"code\"><pre>&#39;UTC&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>TMP_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/tmp/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>UPDATES_PATH</td>\n          <td class=\"code\"><pre>&#39;/var/repo/&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_I18N</td>\n          <td class=\"code\"><pre>True</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_L10N</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_THOUSAND_SEPARATOR</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_TZ</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_HOST</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>USE_X_FORWARDED_PORT</td>\n          <td class=\"code\"><pre>False</pre></td>\n        </tr>\n      \n        <tr>\n          <td>WSGI_APPLICATION</td>\n          <td class=\"code\"><pre>&#39;djdb.wsgi.application&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>X_FRAME_OPTIONS</td>\n          <td class=\"code\"><pre>&#39;SAMEORIGIN&#39;</pre></td>\n        </tr>\n      \n        <tr>\n          <td>YEAR_MONTH_FORMAT</td>\n          <td class=\"code\"><pre>&#39;F Y&#39;</pre></td>\n        </tr>\n      \n    </tbody>\n  </table>\n\n</div>\n\n  <div id=\"explanation\">\n    <p>\n      You're seeing this error because you have <code>DEBUG = True</code> in your\n      Django settings file. Change that to <code>False</code>, and Django will\n      display a standard page generated by the handler for this status code.\n    </p>\n  </div>\n\n</body>\n</html>\n"
										}
									]
								},
								{
									"name": "Request a specific Service Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/param/service/{{UuidServiceTcpObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"param",
												"service",
												"{{UuidServiceTcpObj}}",
												""
											]
										},
										"description": "\n    Service (Protocol and port numbers src,dsc, either code and type icmp)\n    \n\n#### Predefined items\n\n```json\n\n[\n    {\n        \"is_autocreated\":false,\n        \"name\":\"TCP\",\n        \"proto\":\"6\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"026e8cae-ed03-11e4-beba-000c29e649e1\"\n    },\n    {\n        \"is_autocreated\":false,\n        \"name\":\"UDP\",\n        \"proto\":\"17\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"059b2590-ed03-11e4-8b94-000c29e649e1\"\n    },\n    {\n        \"is_autocreated\":false,\n        \"name\":\"ICMP\",\n        \"proto\":\"1\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"07da5470-ed03-11e4-810a-000c29e649e1\"\n    },\n    {\n        \"dst\":\"80\",\n        \"is_autocreated\":false,\n        \"name\":\"HTTP\",\n        \"proto\":\"6\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"ac52e04e-c723-4f15-ad1f-4cedce171ecd\"\n    },\n    {\n        \"dst\":\"443\",\n        \"is_autocreated\":false,\n        \"name\":\"TLS\",\n        \"proto\":\"6\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"717a00a9-8b91-46d6-aecd-61652474ffd9\"\n    },\n    {\n        \"dst\":\"21\",\n        \"is_autocreated\":false,\n        \"name\":\"FTP\",\n        \"proto\":\"6\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"b55ca47f-615f-4027-9542-85d4bcc0d9b1\"\n    },\n    {\n        \"dst\":\"53\",\n        \"is_autocreated\":false,\n        \"name\":\"DNS\",\n        \"proto\":\"17\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"7318018b-9630-40ce-91b4-6e7ca3c7d609\"\n    },\n    {\n        \"dst\":\"53\",\n        \"is_autocreated\":false,\n        \"name\":\"DNS\",\n        \"proto\":\"6\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"5318018b-9630-40ce-91b4-6e7ca3c7d609\"\n    },\n    {\n        \"dst\":\"22\",\n        \"is_autocreated\":false,\n        \"name\":\"SSH\",\n        \"proto\":\"6\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"83fc393f-69d0-418d-858e-b649174a90bb\"\n    },\n    {\n        \"dst\":\"3389\",\n        \"is_autocreated\":false,\n        \"name\":\"RDP\",\n        \"proto\":\"6\",\n        \"revision\":\"754e6b23-d017-4bf6-ad00-2a91df46292d\",\n        \"type\":\"service\",\n        \"uuid\":\"bce38e61-27e4-4446-a727-19d2e74a2d0b\"\n    }\n]```\n\n"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/param/service/365541ba-5ef7-4690-98c9-d5269815bcdc/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														"365541ba-5ef7-4690-98c9-d5269815bcdc",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 12:23:24 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 23,\r\n    \"is_autocreated\": false,\r\n    \"uuid\": \"365541ba-5ef7-4690-98c9-d5269815bcdc\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T12:12:30\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"ICMP-rosamond\",\r\n    \"description\": \"Desc\",\r\n    \"proto\": 1,\r\n    \"src\": \"50\",\r\n    \"dst\": \"\",\r\n    \"icmp_type\": 20,\r\n    \"icmp_code\": 44,\r\n    \"requires_keep_connections\": false,\r\n    \"config\": 28,\r\n    \"version\": 10049\r\n}"
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/param/service/999999ba-5ef7-4690-98c9-d5269815bcdc/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														"999999ba-5ef7-4690-98c9-d5269815bcdc",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 12:25:42 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										}
									]
								},
								{
									"name": "Change the specific Service Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Modified_TCP_Service\",\n  \"description\": \"Modified_Service_PUT\",\n  \"proto\": 6,\n  \"src\": \"\",\n  \"dst\": \"0-1000\",\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/param/service/{{UuidServiceTcpObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"param",
												"service",
												"{{UuidServiceTcpObj}}",
												""
											]
										},
										"description": "\n    Service (Protocol and port numbers src,dsc, either code and type icmp)\n    \n\n"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Modified_TCP_Service\",\n  \"description\": \"Modified_Service\",\n  \"proto\": 6,\n  \"src\": \"\",\n  \"dst\": \"0-1000\",\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/param/service/{{UuidServiceTcpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														"{{UuidServiceTcpObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 12:30:49 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 24,\r\n    \"is_autocreated\": false,\r\n    \"uuid\": \"e300becc-961a-4d18-bf61-051c9f9924d7\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T12:30:49\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Modified_TCP_Service\",\r\n    \"description\": \"Modified_Service\",\r\n    \"proto\": 6,\r\n    \"src\": \"\",\r\n    \"dst\": \"0-1000\",\r\n    \"icmp_type\": null,\r\n    \"icmp_code\": null,\r\n    \"requires_keep_connections\": false,\r\n    \"config\": 28,\r\n    \"version\": 10049\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Modified_TCP_Service\",\n  \"description\": \"Modified_Service\",\n  \"proto\": 6,\n  \"src\": \"\",\n  \"dst\": \"0-100000\",\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/param/service/{{UuidServiceTcpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														"{{UuidServiceTcpObj}}",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 12:34:02 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "84"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"dst\":[\"Ports and port ranges '0-100000' are incorrect.\"]}"
										}
									]
								},
								{
									"name": "Change partially specific Service Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Modified_Service_PUTCH\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/param/service/{{UuidServiceTcpObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"param",
												"service",
												"{{UuidServiceTcpObj}}",
												""
											]
										},
										"description": "\n    Service (Protocol and port numbers src,dsc, either code and type icmp)\n    \n\n"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Modified_TCP_Service\",\n  \"description\": \"Modified_Service\",\n  \"proto\": 6,\n  \"src\": \"\",\n  \"dst\": \"0-1000\",\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/param/service/{{UuidServiceTcpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														"{{UuidServiceTcpObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 12:30:49 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\r\n    \"id\": 24,\r\n    \"is_autocreated\": false,\r\n    \"uuid\": \"e300becc-961a-4d18-bf61-051c9f9924d7\",\r\n    \"is_deleted\": false,\r\n    \"lastmodified\": \"2022-06-03T12:30:49\",\r\n    \"domain_level\": 1,\r\n    \"name\": \"Modified_TCP_Service\",\r\n    \"description\": \"Modified_Service\",\r\n    \"proto\": 6,\r\n    \"src\": \"\",\r\n    \"dst\": \"0-1000\",\r\n    \"icmp_type\": null,\r\n    \"icmp_code\": null,\r\n    \"requires_keep_connections\": false,\r\n    \"config\": 28,\r\n    \"version\": 10049\r\n}"
										},
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Modified_TCP_Service\",\n  \"description\": \"Modified_Service\",\n  \"proto\": 6,\n  \"src\": \"\",\n  \"dst\": \"0-100000\",\n  \"requires_keep_connections\": false,\n  \"inspection_proto\": null\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/param/service/{{UuidServiceTcpObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														"{{UuidServiceTcpObj}}",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 12:34:02 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "84"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\"dst\":[\"Ports and port ranges '0-100000' are incorrect.\"]}"
										}
									]
								},
								{
									"name": "Delete specific Service Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/param/service/{{UuidServiceTcpObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"param",
												"service",
												"{{UuidServiceTcpObj}}",
												""
											]
										},
										"description": "\n    Service (Protocol and port numbers src,dsc, either code and type icmp)\n    \n\n"
									},
									"response": [
										{
											"name": "204 No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/param/service/73a1aabe-a51a-4ce0-bdcb-b08e93d08a69/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														"73a1aabe-a51a-4ce0-bdcb-b08e93d08a69",
														""
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 14:57:45 GMT"
												},
												{
													"key": "Content-Length",
													"value": "0"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/param/service/77778cae-ed03-11e4-beba-000c29e649e1/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"param",
														"service",
														"77778cae-ed03-11e4-beba-000c29e649e1",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Fri, 03 Jun 2022 12:39:55 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										}
									]
								}
							]
						},
						{
							"name": "Config Save/Unlock",
							"item": [
								{
									"name": "Saving Configuration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/{{CurrentIdConf}}/commit/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"{{CurrentIdConf}}",
												"commit",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/24/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"24",
														"commit",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/25/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"25",
														"commit",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 Jun 2022 14:38:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										}
									]
								},
								{
									"name": "Installing the policy on the MCC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check status\r",
													"pm.test(\"Status task is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.status).to.eql(\"ok\");\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Uuid=36\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.tasks[0]).to.length(36);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/install-policy/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"install-policy",
												""
											]
										},
										"description": "Performs policy installation on the node\n\n:post-data:\n    ::\n\n        {\n            'target': ['Serial number of the target node for the installation']\n        }\n:response:\n    ::\n\n        {\n            'task': <task_id>\n        }"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/install-policy/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"install-policy",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 13:18:42 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"ok\",\n    \"tasks\": [\n        \"e86dd596-b724-4b26-9107-ab4ac06c2efe\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Unlock the configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Waiting in \"ms\" for the policy to be installed\r",
													"setTimeout(() => {}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/free/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"free",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/lock/free/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"lock",
														"free",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Group Services",
					"item": [
						{
							"name": "Config Block/Create",
							"item": [
								{
									"name": "Locking configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"  pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"  pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/acquire/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"acquire",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "/acquire-config-lock",
													"path": [
														"acquire-config-lock"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates a new config",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201 and 'CurrentUuidConf'\", function () {\r",
													"  pm.response.to.have.status(201); //Checking that the answer is 201\r",
													"  var jsonData = pm.response.json(); //Create a variable and save the whole answer in it\r",
													"  var tempUuid = jsonData.uuid; //Create a variable and place the value in it \"uuid\"\r",
													"  pm.environment.set('CurrentUuidConf', tempUuid); //Passing uuid value to a variable 'CurrentUuidConf'\r",
													"  var tempId = jsonData.id; //Create a variable and place the value in it \"id\"\r",
													"  pm.environment.set('CurrentIdConf', tempId); //Passing the id value into a variable 'CurrentIdConf'\r",
													"    //console.info(\"Successfully created IdConf \" + pm.environment.get(\"CurrentIdConf\") + \" with uuid \" + pm.environment.get(\"CurrentUuidConf\")) //Write a message in the log\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"id\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"is_active\");\r",
													"  pm.expect(pm.response.text()).to.include(\"source\");\r",
													"  pm.expect(pm.response.text()).to.include(\"version\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"{{$randomUUID}}\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/config/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													},
													{
														"key": "Accept",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/config/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"id\": 24,\n    \"name\": \"string\",\n    \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n    \"is_active\": true,\n    \"domain_level\": 1,\n    \"subtype\": \"adminedit\",\n    \"description\": \"string\",\n    \"source\": 1,\n    \"version\": 10042\n}"
										}
									]
								}
							]
						},
						{
							"name": "Positive",
							"item": [
								{
									"name": "Create a Service Group with objects Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"New group is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Service\");\r",
													"  pm.expect(jsonData.name).to.eql(\"Object_group_service\");\r",
													"});\r",
													"//Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"  pm.environment.set(\"UuidGroupServObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"Object_group_service\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidServiceUdpObj}}\",\n    \"{{UuidServiceIcmpObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"Object_group_service\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidServiceUdpObj}}\",\n    \"{{UuidServiceIcmpObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 11:06:00 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "285"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 112,\n    \"subtype\": \"Service\",\n    \"uuid\": \"10aceeee-53da-45fe-af29-ef5495e2a070\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-12T11:05:59\",\n    \"domain_level\": 1,\n    \"name\": \"Object_group_service\",\n    \"description\": null,\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 188,\n    \"version\": 10356\n}"
										}
									]
								},
								{
									"name": "Request a Group of Services without uuid Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"  pm.expect(pm.response.text()).to.include(\"members\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"The answer has a group with 2 objects with id\", () => {\r",
													"let jsonData = pm.response.json()[0]\r",
													"  pm.expect(jsonData.members[0].id).to.be.a('number');\r",
													"  pm.expect(jsonData.members[1].id).to.be.a('number');\r",
													"});\r",
													"pm.test(\"These groups are of 2 types\",() => {\r",
													"  pm.expect(pm.response.text()).to.include(\"UDP\");\r",
													"  pm.expect(pm.response.text()).to.include(\"ICMP\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/full-members/?uuids={{UuidGroupServObj}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"full-members",
												""
											],
											"query": [
												{
													"key": "uuids",
													"value": "{{UuidGroupServObj}}"
												}
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/group/full-members/?uuids={{UuidGroupServObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"full-members",
														""
													],
													"query": [
														{
															"key": "uuids",
															"value": "{{UuidGroupServObj}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 11:13:40 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 112,\n        \"subtype\": \"Service\",\n        \"uuid\": \"10aceeee-53da-45fe-af29-ef5495e2a070\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-07-12T11:05:59\",\n        \"domain_level\": 1,\n        \"name\": \"Object_group_service\",\n        \"description\": null,\n        \"is_autocreated\": false,\n        \"is_enabled\": true,\n        \"params\": {},\n        \"config\": 188,\n        \"version\": 10356,\n        \"parents\": [],\n        \"members\": [\n            {\n                \"id\": 60,\n                \"domain_level\": 1,\n                \"name\": \"UDP-jocelyn\",\n                \"description\": \"Jacob Jerde DDS\",\n                \"is_autocreated\": false,\n                \"proto\": 17,\n                \"src\": \"\",\n                \"dst\": \"0-224\",\n                \"icmp_type\": null,\n                \"icmp_code\": null,\n                \"requires_keep_connections\": false\n            },\n            {\n                \"id\": 61,\n                \"domain_level\": 1,\n                \"name\": \"ICMP-jocelyn\",\n                \"description\": \"Arlene Turner\",\n                \"is_autocreated\": false,\n                \"proto\": 1,\n                \"src\": \"\",\n                \"dst\": \"\",\n                \"icmp_type\": 3,\n                \"icmp_code\": 4,\n                \"requires_keep_connections\": false\n            }\n        ]\n    }\n]"
										}
									]
								},
								{
									"name": "Request a Group of Services c uuid Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"  pm.expect(pm.response.text()).to.include(\"members\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"The answer has a group with values of type: service\", () => {\r",
													"let jsonData = pm.response.json()[0]\r",
													"  pm.expect(jsonData.members[0].type).to.eql(\"service\");\r",
													"  pm.expect(jsonData.members[1].type).to.eql(\"service\");\r",
													"});\r",
													"pm.test(\"These groups include 2 types of objects\",() => {\r",
													"  pm.expect(pm.response.text()).to.include(\"UDP\");\r",
													"  pm.expect(pm.response.text()).to.include(\"ICMP\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/full-view/?uuids={{UuidGroupServObj}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"full-view",
												""
											],
											"query": [
												{
													"key": "uuids",
													"value": "{{UuidGroupServObj}}"
												}
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/group/full-view/?uuids={{UuidGroupServObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"full-view",
														""
													],
													"query": [
														{
															"key": "uuids",
															"value": "{{UuidGroupServObj}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 11:15:44 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 112,\n        \"subtype\": \"Service\",\n        \"uuid\": \"10aceeee-53da-45fe-af29-ef5495e2a070\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-07-12T11:05:59\",\n        \"domain_level\": 1,\n        \"name\": \"Object_group_service\",\n        \"description\": null,\n        \"is_autocreated\": false,\n        \"is_enabled\": true,\n        \"params\": {},\n        \"config\": 188,\n        \"version\": 10356,\n        \"parents\": [],\n        \"members\": [\n            {\n                \"type\": \"service\",\n                \"uuid\": \"8d6aa5c4-6756-42e9-b0a0-2355b8ae1db5\",\n                \"name\": \"UDP-jocelyn\",\n                \"description\": \"Jacob Jerde DDS\",\n                \"is_autocreated\": false,\n                \"dst\": \"0-224\",\n                \"src\": \"\",\n                \"proto\": 17\n            },\n            {\n                \"type\": \"service\",\n                \"uuid\": \"1577c3c3-2276-4644-903e-838c89d88dda\",\n                \"name\": \"ICMP-jocelyn\",\n                \"description\": \"Arlene Turner\",\n                \"is_autocreated\": false,\n                \"dst\": \"\",\n                \"src\": \"\",\n                \"proto\": 1\n            }\n        ]\n    }\n]"
										}
									]
								},
								{
									"name": "Request a Group of Services with the number of objects Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"members\");\r",
													"});\r",
													"// Checking the number of objects in the group\r",
													"pm.test(\"There are 2 objects in the group\", () => {\r",
													"    let jsonData = pm.response.json()[0]\r",
													"    pm.expect(jsonData.members_count).to.eql(2);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/app-profile-count/?uuids={{UuidGroupServObj}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"app-profile-count",
												""
											],
											"query": [
												{
													"key": "uuids",
													"value": "{{UuidGroupServObj}}"
												}
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/group/app-profile-count/?uuids={{UuidGroupServObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"app-profile-count",
														""
													],
													"query": [
														{
															"key": "uuids",
															"value": "{{UuidGroupServObj}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 11:16:16 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 112,\n        \"subtype\": \"Service\",\n        \"uuid\": \"10aceeee-53da-45fe-af29-ef5495e2a070\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-07-12T11:05:59\",\n        \"domain_level\": 1,\n        \"name\": \"Object_group_service\",\n        \"description\": null,\n        \"is_autocreated\": false,\n        \"is_enabled\": true,\n        \"params\": {},\n        \"config\": 188,\n        \"version\": 10356,\n        \"parents\": [],\n        \"members_count\": 2,\n        \"profiles_count\": 0\n    }\n]"
										}
									]
								},
								{
									"name": "Create a Service Group with objects and optional parameters Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"New group is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Service\");\r",
													"  pm.expect(jsonData.name).to.eql(\"Object_group3\");\r",
													"  pm.expect(jsonData.description).to.eql(\"Object_group_desc3\");\r",
													"});\r",
													"//Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"  pm.environment.set(\"UuidGroupServDelObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"Object_group3\",\n  \"description\": \"Object_group_desc3\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidServiceUdpObj}}\",\n    \"{{UuidServiceIcmpObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"Object_group3\",\n  \"description\": \"Object_group_desc3\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidServiceUdpObj}}\",\n    \"{{UuidServiceIcmpObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 11:19:17 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "294"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 113,\n    \"subtype\": \"Service\",\n    \"uuid\": \"359e6d11-0397-4ac3-a72e-9b228e1b1d26\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-12T11:19:17\",\n    \"domain_level\": 1,\n    \"name\": \"Object_group3\",\n    \"description\": \"Object_group_desc3\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 188,\n    \"version\": 10356\n}"
										}
									]
								},
								{
									"name": "Create a Service Group with valid characters Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"New group is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Service\");\r",
													"  pm.expect(jsonData.name).to.eql(\"azAZa09`!@#$^()-=_+[]’;,\");\r",
													"  pm.expect(jsonData.description).to.eql(\"azAZa09`!@#$^()-=_+[]’;,\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"azAZa09`!@#$^()-=_+[]’;,\",\n  \"description\": \"azAZa09`!@#$^()-=_+[]’;,\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidServiceUdpObj}}\",\n    \"{{UuidServiceIcmpObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"azAZa09`!@#$^()-=_+[]’;,\",\n  \"description\": \"azAZa09`!@#$^()-=_+[]’;,\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidServiceUdpObj}}\",\n    \"{{UuidServiceIcmpObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 11:22:07 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "329"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 114,\n    \"subtype\": \"Service\",\n    \"uuid\": \"d3413f38-d09c-40ab-abac-98c9faf9f5c3\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-12T11:22:07\",\n    \"domain_level\": 1,\n    \"name\": \"azAZa09`!@#$^()-=_+[]’;,\",\n    \"description\": \"azAZa09`!@#$^()-=_+[]’;,\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 188,\n    \"version\": 10356\n}"
										}
									]
								},
								{
									"name": "Change Services Group Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"subtype, name and description is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Service.\");\r",
													"  pm.expect(jsonData.name).to.eql(\"Changed name group Service\");\r",
													"  pm.expect(jsonData.description).to.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"Changed name group Service\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidServiceIcmpObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupServObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupServObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"Changed name group Service\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidServiceIcmpObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/{{UuidGroupServObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"{{UuidGroupServObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 11:25:18 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 116,\n    \"subtype\": \"Service\",\n    \"uuid\": \"ee4692d5-a9a3-4d33-b141-87db6f5ecd88\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-12T11:25:17\",\n    \"domain_level\": 1,\n    \"name\": \"Changed name group Service\",\n    \"description\": null,\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 188,\n    \"version\": 10356\n}"
										}
									]
								},
								{
									"name": "Change Services Group partially  Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Description is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.description).to.eql(\"Modified_object_PUTCH_Group_service\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Modified_object_PUTCH_Group_service\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupServObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupServObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Modified_object_PUTCH_Group_service\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/{{UuidGroupServObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"{{UuidGroupServObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 11:33:57 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 116,\n    \"subtype\": \"Service\",\n    \"uuid\": \"ee4692d5-a9a3-4d33-b141-87db6f5ecd88\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-12T11:33:57\",\n    \"domain_level\": 1,\n    \"name\": \"Changed name group Service\",\n    \"description\": \"Modified_object_PUTCH_Group_service\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 188,\n    \"version\": 10356\n}"
										}
									]
								},
								{
									"name": "Delete Group Positive Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupServDelObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupServDelObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "204 No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/{{UuidGroupServDelObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"{{UuidGroupServDelObj}}",
														""
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "plain",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 11:34:51 GMT"
												},
												{
													"key": "Content-Length",
													"value": "0"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "Create a Service Group with an object that does not exist Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Object not found\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.members[0]).to.include(\"Object 70c8af2d-e996-44fe-849f-777777777777 not found\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"Negative group service\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"70c8af2d-e996-44fe-849f-777777777777\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"Negative group service\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"70c8af2d-e996-44fe-849f-777777777777\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 11:39:54 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "137"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"members\": [\n        \"#Code 212: Object 70c8af2d-e996-44fe-849f-777777777777 not found or has the wrong type.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Create a Service Group with object doubles Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"New group is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Service.\");\r",
													"  pm.expect(jsonData.name).to.eql(\"Negative group service\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"Negative group service\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidServiceUdpObj}}\",\n    \"{{UuidServiceUdpObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"Negative group service\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidServiceUdpObj}}\",\n    \"{{UuidServiceUdpObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 11:41:41 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "287"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 119,\n    \"subtype\": \"Service.\",\n    \"uuid\": \"2e99e971-a053-491b-8d5b-0ed864bdee4b\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-12T11:41:41\",\n    \"domain_level\": 1,\n    \"name\": \"Negative group service\",\n    \"description\": null,\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 188,\n    \"version\": 10356\n}"
										}
									]
								},
								{
									"name": "Create a Service Group without authorization Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Checking the response code\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"// Checking for error information in the response\r",
													"pm.test(\"Response has title with error info\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"401 Authorization Required\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"Empty_group_service\",\n  \"description\": \"Empty_group_desc\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "401 Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"Empty_group_service\",\n  \"description\": \"Empty_group_desc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "html",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 11:52:11 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "269"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												}
											],
											"cookie": [],
											"body": "<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>401 Authorization Required</title>\n    </head>\n    <body bgcolor=\"white\">\n        <center>\n            <h1>HTTPS proxy. 401 Access is not authorized</h1>\n        </center>\n    </body>\n</html>"
										}
									]
								},
								{
									"name": "Request a Group of Services without authorization Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Checking the response code\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"// Checking for error information in the response\r",
													"pm.test(\"Response has title with error info\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"401 Authorization Required\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "401 Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "html",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 12:06:38 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "269"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												}
											],
											"cookie": [],
											"body": "<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>401 Authorization Required</title>\n    </head>\n    <body bgcolor=\"white\">\n        <center>\n            <h1>HTTPS proxy. 401 Access is not authorized</h1>\n        </center>\n    </body>\n</html>"
										}
									]
								},
								{
									"name": "Change Services Group without authorization Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Checking the response code\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"// Checking for error information in the response\r",
													"pm.test(\"Response has title with error info\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"401 Authorization Required\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"Changed name group service\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidServiceUdpObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupServObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupServObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "401 Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"service\",\n  \"name\": \"Changed name group service\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidServiceUdpObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/{{UuidGroupServObj}}//",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"{{UuidGroupServObj}}",
														"",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "html",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 12:08:27 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "269"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												}
											],
											"cookie": [],
											"body": "<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>401 Authorization Required</title>\n    </head>\n    <body bgcolor=\"white\">\n        <center>\n            <h1>HTTPS proxy. 401 Access is not authorized</h1>\n        </center>\n    </body>\n</html>"
										}
									]
								},
								{
									"name": "Change Services Group partially without authorization Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Checking the response code\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"// Checking for error information in the response\r",
													"pm.test(\"Response has title with error info\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"401 Authorization Required\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "// Checking the response code\npm.test(\"Status code is 401\", function () {\n    pm.response.to.have.status(401);\n});\n// Checking for error information in the response\npm.test(\"Response has title with error info\", function () {\n    pm.expect(pm.response.text()).to.include(\"401 Authorization Required\");\n});",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupServObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupServObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "401 Unauthorized",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "// Checking the response code\npm.test(\"Status code is 401\", function () {\n    pm.response.to.have.status(401);\n});\n// Checking for error information in the response\npm.test(\"Response has title with error info\", function () {\n    pm.expect(pm.response.text()).to.include(\"401 Authorization Required\");\n});",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/{{UuidGroupServObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"{{UuidGroupServObj}}",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "html",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 12:23:04 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "269"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												}
											],
											"cookie": [],
											"body": "<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>401 Authorization Required</title>\n    </head>\n    <body bgcolor=\"white\">\n        <center>\n            <h1>HTTPS proxy. 401 Access is not authorized</h1>\n        </center>\n    </body>\n</html>"
										}
									]
								},
								{
									"name": "Delete Group Services without authorization Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Checking the response code\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"// Checking for error information in the response\r",
													"pm.test(\"Response has title with error info\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"401 Authorization Required\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupServObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupServObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "401 Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/{{UuidGroupServObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"{{UuidGroupServObj}}",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "html",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Tue, 12 Jul 2022 12:18:19 GMT"
												},
												{
													"key": "Content-Type",
													"value": "text/html; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "269"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												},
												{
													"key": "WWW-Authenticate",
													"value": "Basic realm=\"Continent password auth\""
												}
											],
											"cookie": [],
											"body": "<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>401 Authorization Required</title>\n    </head>\n    <body bgcolor=\"white\">\n        <center>\n            <h1>HTTPS proxy. 401 Access is not authorized</h1>\n        </center>\n    </body>\n</html>"
										}
									]
								}
							]
						},
						{
							"name": "Destructive",
							"item": []
						},
						{
							"name": "Config Save/Unlock",
							"item": [
								{
									"name": "Saving Configuration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/{{CurrentIdConf}}/commit/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"{{CurrentIdConf}}",
												"commit",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/24/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"24",
														"commit",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/25/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"25",
														"commit",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 Jun 2022 14:38:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										}
									]
								},
								{
									"name": "Installing the policy on the MCC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check status\r",
													"pm.test(\"Status task is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.status).to.eql(\"ok\");\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Uuid=36\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.tasks[0]).to.length(36);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/install-policy/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"install-policy",
												""
											]
										},
										"description": "Performs policy installation on the node\n\n:post-data:\n    ::\n\n        {\n            'target': ['Serial number of the target node for the installation']\n        }\n:response:\n    ::\n\n        {\n            'task': <task_id>\n        }"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/install-policy/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"install-policy",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 13:18:42 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"ok\",\n    \"tasks\": [\n        \"e86dd596-b724-4b26-9107-ab4ac06c2efe\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Unlock the configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Waiting in \"ms\" for the policy to be installed\r",
													"setTimeout(() => {}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/free/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"free",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/lock/free/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"lock",
														"free",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "User",
					"item": [
						{
							"name": "Config Block/Create",
							"item": [
								{
									"name": "Locking configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/acquire/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"acquire",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "/acquire-config-lock",
													"path": [
														"acquire-config-lock"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates a new config",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201 and 'CurrentUuidConf'\", function () {\r",
													"    pm.response.to.have.status(201); //Checking that the answer is 201\r",
													"    var jsonData = pm.response.json(); //Create a variable and save the whole answer in it\r",
													"    var tempUuid = jsonData.uuid; //Create a variable and place the value in it \"uuid\"\r",
													"    pm.environment.set('CurrentUuidConf', tempUuid); //Passing uuid value to a variable 'CurrentUuidConf'\r",
													"    var tempId = jsonData.id; //Create a variable and place the value in it \"id\"\r",
													"    pm.environment.set('CurrentIdConf', tempId); //Passing the id value into a variable 'CurrentIdConf'\r",
													"    //console.info(\"Successfully created IdConf \" + pm.environment.get(\"CurrentIdConf\") + \" with uuid \" + pm.environment.get(\"CurrentUuidConf\")) //Write a message in the log\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"id\");\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"is_active\");\r",
													"    pm.expect(pm.response.text()).to.include(\"source\");\r",
													"    pm.expect(pm.response.text()).to.include(\"version\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"{{$randomUUID}}\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/config/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													},
													{
														"key": "Accept",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/config/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"id\": 24,\n    \"name\": \"string\",\n    \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n    \"is_active\": true,\n    \"domain_level\": 1,\n    \"subtype\": \"adminedit\",\n    \"description\": \"string\",\n    \"source\": 1,\n    \"version\": 10042\n}"
										}
									]
								}
							]
						},
						{
							"name": "Positive",
							"item": [
								{
									"name": "Create a User without options Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,id,name\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"id\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"uuid,id,full_name is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.full_name).to.eql(\"Simple User\");\r",
													"    pm.expect(jsonData.id).to.be.a('number');\r",
													"    pm.expect(jsonData.uuid).to.length(36);\r",
													"});\r",
													"// Checking for password\r",
													"pm.test(\"Body hasn't password\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.have.property('password');\r",
													"    pm.expect(pm.response.text()).to.not.have.property('raw_password');\r",
													"});\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"pm.environment.set(\"UuidUserDelObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"full_name\": \"Simple User\",\n    \"raw_password\": \"Aa123456!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												""
											]
										},
										"description": "\n    User\n    \n\n#### Submission information\n\n\n    Validating the User\n    \n\n"
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Simple User\",\n    \"raw_password\": \"Aa123456!\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 07:49:12 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "350"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 11,\n    \"uuid\": \"e8562d0a-a908-4be0-8700-8baa35cbea2a\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-13T07:49:12\",\n    \"domain_level\": 1,\n    \"name\": \"Simple User\",\n    \"description\": null,\n    \"is_enabled\": true,\n    \"last_login\": null,\n    \"login\": \"\",\n    \"full_name\": \"\",\n    \"organization\": \"\",\n    \"occupation\": \"\",\n    \"email\": \"\",\n    \"phone\": \"\",\n    \"created_at\": \"2022-07-13T07:49:12\",\n    \"config\": 194,\n    \"version\": 10368\n}"
										}
									]
								},
								{
									"name": "Request a list of Users Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,id,full_name\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"id\");\r",
													"    pm.expect(pm.response.text()).to.include(\"full_name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"full_name is OK\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"Simple User\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/full-view/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												"full-view",
												""
											]
										},
										"description": "\n    User\n    \n\n#### Submission information\n\n\n    Excluding the password from the base view\n    \n\n"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/full-view/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														"full-view",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 08:07:04 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 2,\n        \"uuid\": \"32555a0e-9e40-4a7b-8062-3fd17e13134c\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-06-06T07:37:35\",\n        \"domain_level\": 1,\n        \"name\": \"\",\n        \"description\": \"Direct\",\n        \"is_enabled\": true,\n        \"last_login\": null,\n        \"login\": \"Vergie\",\n        \"full_name\": \"Vergie\",\n        \"organization\": \"Treutel Inc\",\n        \"occupation\": \"Agent\",\n        \"email\": \"Johnny_Fadel@hotmail.com\",\n        \"phone\": \"\",\n        \"created_at\": \"2022-06-06T07:37:35\",\n        \"config\": 1,\n        \"version\": 10061,\n        \"certs\": [],\n        \"profile\": null,\n        \"groups\": [],\n        \"staticip\": []\n    },\n    {\n        \"id\": 3,\n        \"uuid\": \"883c01b5-7c74-44e5-9660-76a37af72d26\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-06-06T07:37:50\",\n        \"domain_level\": 1,\n        \"name\": \"\",\n        \"description\": \"Product\",\n        \"is_enabled\": true,\n        \"last_login\": null,\n        \"login\": \"Oda\",\n        \"full_name\": \"Oda\",\n        \"organization\": \"Hickle Inc\",\n        \"occupation\": \"Associate\",\n        \"email\": \"Eva92@hotmail.com\",\n        \"phone\": \"\",\n        \"created_at\": \"2022-06-06T07:37:50\",\n        \"config\": 1,\n        \"version\": 10061,\n        \"certs\": [],\n        \"profile\": null,\n        \"groups\": [],\n        \"staticip\": []\n    },\n    {\n        \"id\": 1,\n        \"uuid\": \"1ef030a3-dd18-4397-adcd-b113d7278bb5\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-06-06T07:27:15\",\n        \"domain_level\": 1,\n        \"name\": \"\",\n        \"description\": \"desc\",\n        \"is_enabled\": true,\n        \"last_login\": null,\n        \"login\": \"testuser\",\n        \"full_name\": \"username\",\n        \"organization\": \"work\",\n        \"occupation\": \"dosljnost\",\n        \"email\": \"mail@mail.ru\",\n        \"phone\": \"\",\n        \"created_at\": \"2022-06-06T07:27:15\",\n        \"config\": 1,\n        \"version\": 10054,\n        \"certs\": [],\n        \"profile\": null,\n        \"groups\": [],\n        \"staticip\": []\n    },\n    {\n        \"id\": 11,\n        \"uuid\": \"e8562d0a-a908-4be0-8700-8baa35cbea2a\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-07-13T07:49:12\",\n        \"domain_level\": 1,\n        \"name\": \"Simple User\",\n        \"description\": null,\n        \"is_enabled\": true,\n        \"last_login\": null,\n        \"login\": \"\",\n        \"full_name\": \"\",\n        \"organization\": \"\",\n        \"occupation\": \"\",\n        \"email\": \"\",\n        \"phone\": \"\",\n        \"created_at\": \"2022-07-13T07:49:12\",\n        \"config\": 194,\n        \"version\": 10368,\n        \"certs\": [],\n        \"profile\": null,\n        \"groups\": [],\n        \"staticip\": []\n    },\n    {\n        \"id\": 10,\n        \"uuid\": \"dc756882-a679-473b-a744-187f45c172a6\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-07-13T07:42:32\",\n        \"domain_level\": 1,\n        \"name\": \"Simple User\",\n        \"description\": null,\n        \"is_enabled\": true,\n        \"last_login\": null,\n        \"login\": \"\",\n        \"full_name\": \"\",\n        \"organization\": \"\",\n        \"occupation\": \"\",\n        \"email\": \"\",\n        \"phone\": \"\",\n        \"created_at\": \"2022-07-13T07:42:32\",\n        \"config\": 194,\n        \"version\": 10368,\n        \"certs\": [],\n        \"profile\": null,\n        \"groups\": [],\n        \"staticip\": []\n    }\n]"
										}
									]
								},
								{
									"name": "Create a User with additional parameters Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,id,full_name\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"id\");\r",
													"    pm.expect(pm.response.text()).to.include(\"full_name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"uuid,id,full_name is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.full_name).to.eql(\"Full_name\");\r",
													"    pm.expect(jsonData.phone).to.eql(\"\");\r",
													"    pm.expect(jsonData.uuid).to.length(36);\r",
													"});\r",
													"// Checking for password\r",
													"pm.test(\"Body hasn't password\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.have.property('password');\r",
													"    pm.expect(pm.response.text()).to.not.have.property('raw_password');\r",
													"});\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"pm.environment.set(\"UuidUserObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var VarUser = pm.variables.replaceIn('{{$randomFirstName}}'); //Assign a random value to the new variable\r",
													"pm.environment.set('VarUser', VarUser); //Passing the new value into a variable\r",
													"// console.log(VarIpObj);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"{{$randomJobDescriptor}}\",\n    \"is_enabled\": true,\n    \"login\": \"{{VarUser}}\",\n    \"full_name\": \"Full_name\",\n    \"organization\": \"{{$randomCompanyName}}\",\n    \"occupation\": \"{{$randomJobType}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"phone\": \"\",\n    \"raw_password\": \"Aa123456!\",\n    \"certs\": []\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												""
											]
										},
										"description": "\n    User\n    \n\n#### Submission information\n\n\n    Validating the User\n    \n\n"
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"\",\n    \"description\": \"{{$randomJobDescriptor}}\",\n    \"is_enabled\": true,\n    \"login\": \"{{VarUser}}\",\n    \"full_name\": \"Full_name\",\n    \"organization\": \"{{$randomCompanyName}}\",\n    \"occupation\": \"{{$randomJobType}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"phone\": \"\",\n    \"raw_password\": \"Aa123456!\",\n    \"certs\": []\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 09:03:43 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "401"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 18,\n    \"uuid\": \"4c10475b-5982-46d5-8339-02aaba5197ac\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-13T09:03:43\",\n    \"domain_level\": 1,\n    \"name\": \"\",\n    \"description\": \"Regional\",\n    \"is_enabled\": true,\n    \"last_login\": null,\n    \"login\": \"Ed\",\n    \"full_name\": \"Full_name\",\n    \"organization\": \"O'Hara - Boyle\",\n    \"occupation\": \"Officer\",\n    \"email\": \"Helmer.Kuvalis@gmail.com\",\n    \"phone\": \"\",\n    \"created_at\": \"2022-07-13T09:03:43\",\n    \"config\": 194,\n    \"version\": 10368\n}"
										}
									]
								},
								{
									"name": "Request a specific User Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,id,full_name\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"id\");\r",
													"    pm.expect(pm.response.text()).to.include(\"full_name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"uuid,id,full_name is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.full_name).to.eql(\"Full_name\");\r",
													"    pm.expect(jsonData.phone).to.eql(\"\");\r",
													"    pm.expect(jsonData.uuid).to.length(36);\r",
													"});\r",
													"// Checking for password\r",
													"pm.test(\"Body hasn't password\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.have.property('password');\r",
													"    pm.expect(pm.response.text()).to.not.have.property('raw_password');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/{{UuidUserObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												"{{UuidUserObj}}",
												""
											]
										},
										"description": "\n    User\n    \n\n"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/{{UuidUserObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														"{{UuidUserObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 09:08:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 18,\n    \"uuid\": \"4c10475b-5982-46d5-8339-02aaba5197ac\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-13T09:03:43\",\n    \"domain_level\": 1,\n    \"name\": \"\",\n    \"description\": \"Regional\",\n    \"is_enabled\": true,\n    \"last_login\": null,\n    \"login\": \"Ed\",\n    \"full_name\": \"Full_name\",\n    \"organization\": \"O'Hara - Boyle\",\n    \"occupation\": \"Officer\",\n    \"email\": \"Helmer.Kuvalis@gmail.com\",\n    \"phone\": \"\",\n    \"created_at\": \"2022-07-13T09:03:43\",\n    \"config\": 194,\n    \"version\": 10368\n}"
										}
									]
								},
								{
									"name": "Change a specific User Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"\r",
													"pm.test(\"Body has uuid,id,full_name\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"id\");\r",
													"    pm.expect(pm.response.text()).to.include(\"full_name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"email, uuid, name and description is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.full_name).to.eql(\"Full_name\");\r",
													"    pm.expect(jsonData.description).to.eql(\"Modified_User\");\r",
													"    pm.expect(jsonData.email).to.eql(\"pochta@mail.ru\");\r",
													"    pm.expect(jsonData.uuid).to.length(36);\r",
													"});\r",
													"// Checking for password\r",
													"pm.test(\"Body hasn't password\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.have.property('password');\r",
													"    pm.expect(pm.response.text()).to.not.have.property('raw_password');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Modified_User\",\n    \"is_enabled\": true,\n    \"login\": \"{{VarUser}}\",\n    \"organization\": \"Modified_Org\",\n    \"occupation\": \"Modified_Occup\",\n    \"email\": \"pochta@mail.ru\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/{{UuidUserObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												"{{UuidUserObj}}",
												""
											]
										},
										"description": "\n    User\n    \n\n"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"Modified_User\",\n    \"is_enabled\": true,\n    \"login\": \"{{VarUser}}\",\n    \"organization\": \"Modified_Org\",\n    \"occupation\": \"Modified_Occup\",\n    \"email\": \"Modified_mai@mail.ru\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/{{UuidUserObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														"{{UuidUserObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 09:47:58 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 19,\n    \"uuid\": \"1e85ec80-37d1-45b0-a342-38b720cef839\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-13T09:47:58\",\n    \"domain_level\": 1,\n    \"name\": \"\",\n    \"description\": \"Modified_User\",\n    \"is_enabled\": true,\n    \"last_login\": null,\n    \"login\": \"Myra\",\n    \"full_name\": \"Full_name\",\n    \"organization\": \"Modified_Org\",\n    \"occupation\": \"Modified_Occup\",\n    \"email\": \"Modified_mai@mail.ru\",\n    \"phone\": \"\",\n    \"created_at\": \"2022-07-13T09:47:56\",\n    \"config\": 194,\n    \"version\": 10368\n}"
										}
									]
								},
								{
									"name": "Change partially a specific User Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,id,full_name\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"id\");\r",
													"    pm.expect(pm.response.text()).to.include(\"full_name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"uuid,email,full_name,desc is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.full_name).to.eql(\"Full_name\");\r",
													"    pm.expect(jsonData.description).to.eql(\"Modified_User\");\r",
													"    pm.expect(jsonData.email).to.eql(\"Modified_mail@mail.ru\");\r",
													"    pm.expect(jsonData.uuid).to.length(36);\r",
													"});\r",
													"// Checking for password\r",
													"pm.test(\"Body hasn't password\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.have.property('password');\r",
													"    pm.expect(pm.response.text()).to.not.have.property('raw_password');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"Modified_mail@mail.ru\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/{{UuidUserObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												"{{UuidUserObj}}",
												""
											]
										},
										"description": "\n    User\n    \n\n"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"Modified_mail@mail.ru\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/{{UuidUserObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														"{{UuidUserObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 09:54:33 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 19,\n    \"uuid\": \"1e85ec80-37d1-45b0-a342-38b720cef839\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-13T09:54:33\",\n    \"domain_level\": 1,\n    \"name\": \"\",\n    \"description\": \"Modified_User\",\n    \"is_enabled\": true,\n    \"last_login\": null,\n    \"login\": \"Myra\",\n    \"full_name\": \"Full_name\",\n    \"organization\": \"Modified_Org\",\n    \"occupation\": \"Modified_Occup\",\n    \"email\": \"Modified_mail@mail.ru\",\n    \"phone\": \"\",\n    \"created_at\": \"2022-07-13T09:47:56\",\n    \"config\": 194,\n    \"version\": 10368\n}"
										}
									]
								},
								{
									"name": "Delete a specific User Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/{{UuidUserDelObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												"{{UuidUserDelObj}}",
												""
											]
										},
										"description": "\n    User\n    \n\n"
									},
									"response": [
										{
											"name": "204 No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/{{UuidUserDelObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														"{{UuidUserDelObj}}",
														""
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "plain",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 09:55:36 GMT"
												},
												{
													"key": "Content-Length",
													"value": "0"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "Create a User with an invalid name Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// pm.test(\"Status code is 201\", function () {\r",
													"//     pm.response.to.have.status(201);\r",
													"// });\r",
													"// // Check Header Content-Type=application/json\r",
													"// pm.test(\"Content-Type header is application/json\", () => {\r",
													"//   pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"// });\r",
													"// // Checking for keys in json\r",
													"// pm.test(\"Body has uuid,id,name\", function () {\r",
													"//     pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"//     pm.expect(pm.response.text()).to.include(\"id\");\r",
													"//     pm.expect(pm.response.text()).to.include(\"name\");\r",
													"// });\r",
													"// // Checking for values in the keys\r",
													"// pm.test(\"uuid,id,name is OK\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.name).to.eql(\"Simple User\");\r",
													"//     pm.expect(jsonData.id).to.be.a('number');\r",
													"//     pm.expect(jsonData.uuid).to.length(36);\r",
													"// });\r",
													"// // Checking for password\r",
													"// pm.test(\"Body hasn't password\", function () {\r",
													"//     pm.expect(pm.response.text()).to.not.have.property('password');\r",
													"//     pm.expect(pm.response.text()).to.not.have.property('raw_password');\r",
													"// });\r",
													"// var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"// pm.environment.set(\"UuidUserDelObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "// {\n//     \"login\": \"azAZa09`!@#$^()-=_+[]’;,\",\n//     \"full_name\": \"\",\n//     \"raw_password\": \"Aa123456!\"\n// }\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												""
											]
										},
										"description": "\n    User\n    \n\n#### Submission information\n\n\n    Validating the User\n    \n\n"
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Simple User\",\n    \"raw_password\": \"Aa123456!\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 07:49:12 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "350"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 11,\n    \"uuid\": \"e8562d0a-a908-4be0-8700-8baa35cbea2a\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-13T07:49:12\",\n    \"domain_level\": 1,\n    \"name\": \"Simple User\",\n    \"description\": null,\n    \"is_enabled\": true,\n    \"last_login\": null,\n    \"login\": \"\",\n    \"full_name\": \"\",\n    \"organization\": \"\",\n    \"occupation\": \"\",\n    \"email\": \"\",\n    \"phone\": \"\",\n    \"created_at\": \"2022-07-13T07:49:12\",\n    \"config\": 194,\n    \"version\": 10368\n}"
										}
									]
								},
								{
									"name": "Create a User with object doubles Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,id,name\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"id\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"uuid,id,login is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.login).to.eql(\"azAZa09\");\r",
													"    pm.expect(jsonData.id).to.be.a('number');\r",
													"    pm.expect(jsonData.uuid).to.length(36);\r",
													"});\r",
													"// Checking for password\r",
													"pm.test(\"Body hasn't password\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.have.property('password');\r",
													"    pm.expect(pm.response.text()).to.not.have.property('raw_password');\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"azAZa09\",\n    \"login\": \"azAZa09\",\n    \"full_name\": \"\",\n    \"raw_password\": \"Aa123456!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												""
											]
										},
										"description": "\n    User\n    \n\n#### Submission information\n\n\n    Validating the User\n    \n\n"
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"login\": \"azAZa09\",\n    \"login\": \"azAZa09\",\n    \"full_name\": \"\",\n    \"raw_password\": \"Aa123456!\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 12:18:10 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "353"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 28,\n    \"uuid\": \"da9e5a65-d66e-43b1-a39f-f6e8f0e79c2f\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-13T12:18:10\",\n    \"domain_level\": 1,\n    \"name\": \"\",\n    \"description\": null,\n    \"is_enabled\": true,\n    \"last_login\": null,\n    \"login\": \"azAZa09\",\n    \"full_name\": \"\",\n    \"organization\": \"\",\n    \"occupation\": \"\",\n    \"email\": \"\",\n    \"phone\": \"\",\n    \"created_at\": \"2022-07-13T12:18:10\",\n    \"config\": 197,\n    \"version\": 10373\n}"
										}
									]
								},
								{
									"name": "Create a User with an invalid number of characters Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Make sure that this field does not contain more than...\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.login[0]).to.include(\"Make sure that this field does not contain more than 128 characters.\");\r",
													"    pm.expect(jsonData.full_name[0]).to.include(\"Make sure that this field does not contain more than 256 characters.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"login\": \"iLDzvjHmCyxXnZdiWBcDtW7nui7ADSA2TExbNGpsAXHeXC2ZYAHEUHJsy5WpXJeQ2YPwGtzS6QZ8hjfPHhExEvBUwmHD38hbVXHWCeyMBCAsMcPAiDgvNi2mVvSLVAELe\",\n    \"full_name\": \"iLDzvjHmCyxXnZdiWBcDtW7nui7ADSA2TExbNGpsAXHeXC2ZYAHEUHJsy5WpXJeQ2YPwGtzS6QZ8hjfPHhExEvBUwmHD38hbVXHWCeyMBCAsMcPAiDgvNi2mVvSLVAELeiLDzvjHmCyxXnZdiWBcDtW7nui7ADSA2TExbNGpsAXHeXC2ZYAHEUHJsy5WpXJeQ2YPwGtzS6QZ8hjfPHhExEvBUwmHD38hbVXHWCeyMBCAsMcPAiDgvNi2mVvSLVAELe\",\n    \"raw_password\": \"Aa123456!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												""
											]
										},
										"description": "\n    User\n    \n\n#### Submission information\n\n\n    Validating the User\n    \n\n"
									},
									"response": [
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"login\": \"iLDzvjHmCyxXnZdiWBcDtW7nui7ADSA2TExbNGpsAXHeXC2ZYAHEUHJsy5WpXJeQ2YPwGtzS6QZ8hjfPHhExEvBUwmHD38hbVXHWCeyMBCAsMcPAiDgvNi2mVvSLVAELe\",\n    \"full_name\": \"iLDzvjHmCyxXnZdiWBcDtW7nui7ADSA2TExbNGpsAXHeXC2ZYAHEUHJsy5WpXJeQ2YPwGtzS6QZ8hjfPHhExEvBUwmHD38hbVXHWCeyMBCAsMcPAiDgvNi2mVvSLVAELeiLDzvjHmCyxXnZdiWBcDtW7nui7ADSA2TExbNGpsAXHeXC2ZYAHEUHJsy5WpXJeQ2YPwGtzS6QZ8hjfPHhExEvBUwmHD38hbVXHWCeyMBCAsMcPAiDgvNi2mVvSLVAELe\",\n    \"raw_password\": \"Aa123456!\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 12:37:54 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "205"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"login\": [\n        \"Make sure that this field does not contain more than 128 characters.\"\n    ],\n    \"full_name\": [\n        \"Make sure that this field does not contain more than 256 characters.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Change User with incorrect data Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Enter a valid email address.\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.email[0]).to.include(\"Enter a valid email address.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Modified_User\",\n    \"is_enabled\": true,\n    \"login\": \"{{VarUser}}\",\n    \"organization\": \"Modified_Org\",\n    \"occupation\": \"Modified_Occup\",\n    \"email\": \"@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/{{UuidUserObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												"{{UuidUserObj}}",
												""
											]
										},
										"description": "\n    User\n    \n\n"
									},
									"response": [
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"Modified_User\",\n    \"is_enabled\": true,\n    \"login\": \"{{VarUser}}\",\n    \"organization\": \"Modified_Org\",\n    \"occupation\": \"Modified_Occup\",\n    \"email\": \"@@\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/{{UuidUserObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														"{{UuidUserObj}}",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 12:24:05 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "95"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"email\": [\n        \"Enter a valid email address.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Change User with incorrect data partially  Negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Enter a valid email address.\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.email[0]).to.include(\"Enter a valid email address.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/{{UuidUserObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												"{{UuidUserObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"@@\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/{{UuidUserObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														"{{UuidUserObj}}",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 12:27:24 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "95"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"email\": [\n        \"Enter a valid email address.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Delete a non-existent User Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Checking the response code\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Status is 'Not found.'\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Not found.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/f59bb717-c04a-7777-7777-f30f73e2752b/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												"f59bb717-c04a-7777-7777-f30f73e2752b",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/f59bb717-c04a-7777-7777-f30f73e2752b/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														"f59bb717-c04a-7777-7777-f30f73e2752b",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 12:29:09 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"Not found.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Destructive",
							"item": [
								{
									"name": "Create a User with an invalid structure Destructive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"JSON parse error\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.include(\"JSON parse error\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"full_name\": \"Simple User\",\n    \"raw_password\": \"Aa123456!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												""
											]
										},
										"description": "\n    User\n    \n\n#### Submission information\n\n\n    Validating the User\n    \n\n"
									},
									"response": [
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"full_name\": \"Simple User\"\n    \"raw_password\": \"Aa123456!\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 13:44:36 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"JSON parse error - Expecting ',' delimiter: line 3 column 5 (char 37)\"\n}"
										}
									]
								},
								{
									"name": "Create a User with an incorrect \"Content-Length\" Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"  pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has code, error, error_description\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"code\");\r",
													"  pm.expect(pm.response.text()).to.include(\"error\");\r",
													"  pm.expect(pm.response.text()).to.include(\"error_description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Bad Request\", function () {\r",
													"  var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.error_description).to.eql(\"Bad Request\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-length": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Length",
												"value": "GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"full_name\": \"Simple User\",\n    \"raw_password\": \"Aa123456!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Length",
														"value": "GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"full_name\": \"Simple User\",\n    \"raw_password\": \"Aa123456!\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 13:46:00 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "82"
												},
												{
													"key": "Connection",
													"value": "close"
												},
												{
													"key": "ETag",
													"value": "\"6107cac5-52\""
												}
											],
											"cookie": [],
											"body": "{\n    \"code\": 400,\n    \"error\": \"bad_request\",\n    \"error_description\": \"Bad Request\"\n}"
										}
									]
								},
								{
									"name": "Create a User with an empty structure Destructive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has non_field_errors\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"non_field_errors\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"JSON parse error\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.non_field_errors).to.include(\"#Code 623: You must specify a password or certificate for the account.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												""
											]
										},
										"description": "\n    User\n    \n\n#### Submission information\n\n\n    Validating the User\n    \n\n"
									},
									"response": [
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 13:49:15 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "148"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"non_field_errors\": [\n        \"#Code 623: You must specify a password or certificate for the account.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Create a User without \"Content-type\" Destructive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 415\", function () {\r",
													"    pm.response.to.have.status(415);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Unsupported data type\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Unsupported data type \\\"\\\" in a query.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true
										}
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"full_name\": \"Simple User\",\n    \"raw_password\": \"Aa123456!\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "415 Unsupported Media Type",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"full_name\": \"Simple User\",\n    \"raw_password\": \"Aa123456!\"\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Unsupported Media Type",
											"code": 415,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 13:55:14 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "89"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"Unsupported data type \\\"\\\" in a query.\"\n}"
										}
									]
								},
								{
									"name": "Request User uuid 1025 characters Destructive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Status is 'Not found.'\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Not found.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												"GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														"GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 13:58:48 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"Not found.\"\n}"
										}
									]
								},
								{
									"name": "Change User uuid 1025 characters Destructive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Changing the filter rule\r",
													"\r",
													"// Checking the response code\r",
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has detail\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"detail\");\r",
													"});\r",
													"// Checking the presence of values in the keys\r",
													"pm.test(\"Status is 'Not found.'\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Not found.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Modified_User\",\r\n    \"is_enabled\": true,\r\n    \"login\": \"{{VarUser}}\",\r\n    \"organization\": \"Modified_Org\",\r\n    \"occupation\": \"Modified_Occup\",\r\n    \"email\": \"pochta@mail.ru\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												"GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
												""
											]
										}
									},
									"response": [
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"description\": \"Modified_User\",\r\n    \"is_enabled\": true,\r\n    \"login\": \"{{VarUser}}\",\r\n    \"organization\": \"Modified_Org\",\r\n    \"occupation\": \"Modified_Occup\",\r\n    \"email\": \"pochta@mail.ru\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														"GloK7ljRlwoAF2fJLEKT8Fo3dEYlbqKIL7FQlWaOPmgZ05ATphrAzzVq4uhruGG4U4ZCI2UyD6WVw776ODdnvVCpPiGYVKnKnz3KbAoislMKRCfyGFQtCC3aNx9hlmgayxxRmGRPm61sQsgcRItSfhn7NweMOrrJYtOFC1XdMynAjfzcf5NZdTyvwNh2FfJlBCeSgqBHGOHkvBFZJktFWyKuyJkVcB5Tzm7Ja9x1mnQYz7L4VruehAG2giXZhk9U7tsLpDFzs83SATYoBuHkQi0rglKz5KBlXWkCDin7YeBRIHl5jhEAIulPPNQx3aPkG0zHumnAJGTwjoorSRuMQ8wsoYH5FxmtSM9NzaZqz0lGDjW4gllZTCdPT637j1Y4QhTiBDt5vtAM5X5HQaJfaBesiS3HhoZtmCDum18NybR7fBoQpTXktTEUSlyUVZiovcu6HNeFXxOkMc3XnYEVFiLzywFIBjli6D6unTaRV7W1PMV8wPRFTZ8lBreLu1DZ5GNWEvVYTQOQrN3aSP7w2yEIPjyqhCadMGnz9HIEQk4mF3qgv0iAsnbRP8qPlDoZpiCF7YNSgh19DFk9mkOClsVXiI81YaLkphsrP7MpuBwMKkDv4yAM2JbsHmgIokZGPqfd3Kq3B5V1CPlaJ6cymo97abiHTOBIbECGQFecMzsocvHeqVX1MMnww56X2vq6v8ywhtqZ05aoBqclAnDSngGqazg3uNRca7X0dstcWFyeCveeRs3Mo13aM3Ay7XxAcqpM65l358lSMNbbRnkhrsZ6MmgBTAxDvjjRgfl9OrkGu0xtqu7dPgeFnrZ9kjlTQoIiHzn6fhPg6xJOYCCF8UPGs9f3ebI4Y1RVXYGx9G6t7jqZrg0mrxYqbc82RTGnj0s1sPJqhCmkukxZP1J1USgkpVLaBABYqZEsYRlcfyjNjPsBhPFUdKHviXImWQeJxwHKElVHPy05C3X1ijnG1k2fX82BEAARmm1d7hL11111111111111111111111111",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 14:00:29 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"detail\": \"Not found.\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Config Save/Unlock",
							"item": [
								{
									"name": "Saving Configuration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/{{CurrentIdConf}}/commit/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"{{CurrentIdConf}}",
												"commit",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/24/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"24",
														"commit",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/25/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"25",
														"commit",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 Jun 2022 14:38:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										}
									]
								},
								{
									"name": "Installing the policy on the MCC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check status\r",
													"pm.test(\"Status task is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.status).to.eql(\"ok\");\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Uuid=36\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.tasks[0]).to.length(36);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/install-policy/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"install-policy",
												""
											]
										},
										"description": "Performs policy installation on the node\n\n:post-data:\n    ::\n\n        {\n            'target': ['Serial number of the target node for the installation']\n        }\n:response:\n    ::\n\n        {\n            'task': <task_id>\n        }"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/install-policy/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"install-policy",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 13:18:42 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"ok\",\n    \"tasks\": [\n        \"e86dd596-b724-4b26-9107-ab4ac06c2efe\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Unlock the configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Waiting in \"ms\" for the policy to be installed\r",
													"setTimeout(() => {}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/free/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"free",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/lock/free/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"lock",
														"free",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "User groups",
					"item": [
						{
							"name": "Config Block/Create",
							"item": [
								{
									"name": "Locking configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/acquire/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"acquire",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "/acquire-config-lock",
													"path": [
														"acquire-config-lock"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates a new config",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201 and 'CurrentUuidConf'\", function () {\r",
													"    pm.response.to.have.status(201); //Checking that the answer is 201\r",
													"    var jsonData = pm.response.json(); //Create a variable and save the whole answer in it\r",
													"    var tempUuid = jsonData.uuid; //Create a variable and place the value in it \"uuid\"\r",
													"    pm.environment.set('CurrentUuidConf', tempUuid); //Passing uuid value to a variable 'CurrentUuidConf'\r",
													"    var tempId = jsonData.id; //Create a variable and place the value in it \"id\"\r",
													"    pm.environment.set('CurrentIdConf', tempId); //Passing the id value into a variable 'CurrentIdConf'\r",
													"    //console.info(\"Successfully created IdConf \" + pm.environment.get(\"CurrentIdConf\") + \" with uuid \" + pm.environment.get(\"CurrentUuidConf\")) //Write a message in the log\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,name,desc,ip,subtype\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"id\");\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"is_active\");\r",
													"    pm.expect(pm.response.text()).to.include(\"source\");\r",
													"    pm.expect(pm.response.text()).to.include(\"version\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"{{$randomUUID}}\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/config/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													},
													{
														"key": "Accept",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 0,\n  \"name\": \"string\",\n  \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n  \"is_active\": true,\n  \"domain_level\": 1,\n  \"subtype\": \"adminedit\",\n  \"description\": \"string\",\n  \"source\": 1,\n  \"version\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/config/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": "{\n    \"id\": 24,\n    \"name\": \"string\",\n    \"uuid\": \"80413094-bd05-4f61-8389-1e6727c7d1b9\",\n    \"is_active\": true,\n    \"domain_level\": 1,\n    \"subtype\": \"adminedit\",\n    \"description\": \"string\",\n    \"source\": 1,\n    \"version\": 10042\n}"
										}
									]
								}
							]
						},
						{
							"name": "Positive",
							"item": [
								{
									"name": "[Service] Create a User with additional parameters",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has uuid,id,full_name\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"id\");\r",
													"    pm.expect(pm.response.text()).to.include(\"full_name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"uuid,id,full_name is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.full_name).to.eql(\"Full_name_second\");\r",
													"    pm.expect(jsonData.phone).to.eql(\"\");\r",
													"    pm.expect(jsonData.uuid).to.length(36);\r",
													"});\r",
													"// Checking for password\r",
													"pm.test(\"Body hasn't password\", function () {\r",
													"    pm.expect(pm.response.text()).to.not.have.property('password');\r",
													"    pm.expect(pm.response.text()).to.not.have.property('raw_password');\r",
													"});\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"pm.environment.set(\"UuidUserSecondObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var VarUser = pm.variables.replaceIn('{{$randomFirstName}}'); //Assign a random value to the new variable\r",
													"pm.environment.set('VarUser', VarUser); //Passing the new value into a variable\r",
													"// console.log(VarIpObj);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"{{$randomJobDescriptor}}\",\n    \"is_enabled\": true,\n    \"login\": \"{{VarUser}}\",\n    \"full_name\": \"Full_name_second\",\n    \"organization\": \"{{$randomCompanyName}}\",\n    \"occupation\": \"{{$randomJobType}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"phone\": \"\",\n    \"raw_password\": \"Aa123456!\",\n    \"certs\": []\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consumer/user-net-object/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consumer",
												"user-net-object",
												""
											]
										},
										"description": "\n    User\n    \n\n#### Submission information\n\n\n    Validating the User\n    \n\n"
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"\",\n    \"description\": \"{{$randomJobDescriptor}}\",\n    \"is_enabled\": true,\n    \"login\": \"{{VarUser}}\",\n    \"full_name\": \"Full_name\",\n    \"organization\": \"{{$randomCompanyName}}\",\n    \"occupation\": \"{{$randomJobType}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"phone\": \"\",\n    \"raw_password\": \"Aa123456!\",\n    \"certs\": []\n}\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consumer/user-net-object/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consumer",
														"user-net-object",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 13 Jul 2022 09:03:43 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "401"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 18,\n    \"uuid\": \"4c10475b-5982-46d5-8339-02aaba5197ac\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-13T09:03:43\",\n    \"domain_level\": 1,\n    \"name\": \"\",\n    \"description\": \"Regional\",\n    \"is_enabled\": true,\n    \"last_login\": null,\n    \"login\": \"Ed\",\n    \"full_name\": \"Full_name\",\n    \"organization\": \"O'Hara - Boyle\",\n    \"occupation\": \"Officer\",\n    \"email\": \"Helmer.Kuvalis@gmail.com\",\n    \"phone\": \"\",\n    \"created_at\": \"2022-07-13T09:03:43\",\n    \"config\": 194,\n    \"version\": 10368\n}"
										}
									]
								},
								{
									"name": "Create a User Group with objects Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"New group is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Resource user\");\r",
													"  pm.expect(jsonData.name).to.eql(\"Object_group_users\");\r",
													"});\r",
													"//Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"  pm.environment.set(\"UuidGroupUsersObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"usernetobject\",\n  \"name\": \"Object_group_users\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidUserObj}}\",\n    \"{{UuidUserSecondObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"usernetobject\",\n  \"name\": \"Object_group_users\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidUserObj}}\",\n    \"{{UuidUserNegObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 14 Jul 2022 14:12:55 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "310"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 129,\n    \"subtype\": \"Resource user\",\n    \"uuid\": \"f15cf2ce-5065-4a18-a1f9-655f575ed01f\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-14T14:12:55\",\n    \"domain_level\": 1,\n    \"name\": \"Object_group_users\",\n    \"description\": null,\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 205,\n    \"version\": 10388\n}"
										}
									]
								},
								{
									"name": "Request a User Group without uuid Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"  pm.expect(pm.response.text()).to.include(\"members\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"The answer has a group with 2 objects with id\", () => {\r",
													"let jsonData = pm.response.json()[0]\r",
													"  pm.expect(jsonData.members[0].id).to.be.a('number');\r",
													"  pm.expect(jsonData.members[1].id).to.be.a('number');\r",
													"});\r",
													"pm.test(\"These groups are of 2 types\",() => {\r",
													"  pm.expect(pm.response.text()).to.include(\"Full_name_second\");\r",
													"  pm.expect(pm.response.text()).to.include(\"Full_name\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/full-members/?uuids={{UuidGroupUsersObj}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"full-members",
												""
											],
											"query": [
												{
													"key": "uuids",
													"value": "{{UuidGroupUsersObj}}"
												}
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/group/full-members/?uuids={{UuidGroupUsersObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"full-members",
														""
													],
													"query": [
														{
															"key": "uuids",
															"value": "{{UuidGroupUsersObj}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 14 Jul 2022 14:25:01 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 130,\n        \"subtype\": \"User Resource\",\n        \"uuid\": \"eea684c4-45d3-48aa-81c4-d70dc77bf52f\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-07-14T14:21:34\",\n        \"domain_level\": 1,\n        \"name\": \"Object_group_users\",\n        \"description\": null,\n        \"is_autocreated\": false,\n        \"is_enabled\": true,\n        \"params\": {},\n        \"config\": 205,\n        \"version\": 10388,\n        \"parents\": [],\n        \"members\": [\n            {\n                \"id\": 36,\n                \"domain_level\": 1,\n                \"name\": \"\",\n                \"description\": \"Investor\",\n                \"is_enabled\": true,\n                \"password\": \"gost2012$gR6mDQjMvzRt$E/qrU5qnpuEIuP1iSUJku5+jGpIFqkr0dQZxCNVLa1BnUjZtRFFqTXZ6UnQ=\",\n                \"last_login\": null,\n                \"login\": \"Pierce\",\n                \"full_name\": \"Full_name_second\",\n                \"organization\": \"Murphy LLC\",\n                \"occupation\": \"Analyst\",\n                \"email\": \"Steve.Ward@yahoo.com\",\n                \"phone\": \"\",\n                \"password_expired_date\": \"2023-01-10T14:21:22.312794\",\n                \"created_at\": \"2022-07-14T14:21:22.316296\"\n            },\n            {\n                \"id\": 32,\n                \"domain_level\": 1,\n                \"name\": \"\",\n                \"description\": \"Modified_User\",\n                \"is_enabled\": true,\n                \"password\": \"gost2012$2GM5FSCZMsb9$hYzT7vD0cZjdMeBqstGReW0HUq4B8V3Phy8sJTtPFlkyR001RlNDWk1zYjk=\",\n                \"last_login\": null,\n                \"login\": \"Lloyd\",\n                \"full_name\": \"Full_name\",\n                \"organization\": \"Modified_Org\",\n                \"occupation\": \"Modified_Occup\",\n                \"email\": \"Modified_mail@mail.ru\",\n                \"phone\": \"\",\n                \"password_expired_date\": \"2023-01-09T14:48:48.751324\",\n                \"created_at\": \"2022-07-13T14:48:48.754463\"\n            }\n        ]\n    }\n]"
										}
									]
								},
								{
									"name": "Request a User Group c uuid Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"  pm.expect(pm.response.text()).to.include(\"members\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"The answer has a group with values of type: usernetobject\", () => {\r",
													"let jsonData = pm.response.json()[0]\r",
													"  pm.expect(jsonData.members[0].type).to.eql(\"usernetobject\");\r",
													"  pm.expect(jsonData.members[1].type).to.eql(\"usernetobject\");\r",
													"});\r",
													"pm.test(\"These groups include 2 types of objects\",() => {\r",
													"  pm.expect(pm.response.text()).to.include(\"Full_name_second\");\r",
													"  pm.expect(pm.response.text()).to.include(\"Full_name\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/full-view/?uuids={{UuidGroupUsersObj}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"full-view",
												""
											],
											"query": [
												{
													"key": "uuids",
													"value": "{{UuidGroupUsersObj}}"
												}
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/group/full-view/?uuids={{UuidGroupUsersObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"full-view",
														""
													],
													"query": [
														{
															"key": "uuids",
															"value": "{{UuidGroupUsersObj}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 14 Jul 2022 14:26:42 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 130,\n        \"subtype\": \"User Resource\",\n        \"uuid\": \"eea684c4-45d3-48aa-81c4-d70dc77bf52f\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-07-14T14:21:34\",\n        \"domain_level\": 1,\n        \"name\": \"Object_group_users\",\n        \"description\": null,\n        \"is_autocreated\": false,\n        \"is_enabled\": true,\n        \"params\": {},\n        \"config\": 205,\n        \"version\": 10388,\n        \"parents\": [],\n        \"members\": [\n            {\n                \"type\": \"usernetobject\",\n                \"uuid\": \"f3eac3d9-d255-466a-b4ac-8777b2d4dcb9\",\n                \"login\": \"Pierce\",\n                \"name\": \"\",\n                \"description\": \"Investor\",\n                \"full_name\": \"Full_name_second\"\n            },\n            {\n                \"type\": \"usernetobject\",\n                \"uuid\": \"263953a7-458b-4ab8-b653-1633ea27d0c9\",\n                \"login\": \"Lloyd\",\n                \"name\": \"\",\n                \"description\": \"Modified_User\",\n                \"full_name\": \"Full_name\"\n            }\n        ]\n    }\n]"
										}
									]
								},
								{
									"name": "Request a User Group with the number of objects Positive",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"    pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"    pm.expect(pm.response.text()).to.include(\"name\");\r",
													"    pm.expect(pm.response.text()).to.include(\"description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"members\");\r",
													"});\r",
													"// Checking the number of objects in the group\r",
													"pm.test(\"There are 2 objects in the group\", () => {\r",
													"    let jsonData = pm.response.json()[0]\r",
													"    pm.expect(jsonData.members_count).to.eql(2);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/group/app-profile-count/?uuids={{UuidGroupUsersObj}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"app-profile-count",
												""
											],
											"query": [
												{
													"key": "uuids",
													"value": "{{UuidGroupUsersObj}}"
												}
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/group/app-profile-count/?uuids={{UuidGroupUsersObj}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"app-profile-count",
														""
													],
													"query": [
														{
															"key": "uuids",
															"value": "{{UuidGroupUsersObj}}"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 14 Jul 2022 14:27:15 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "[\n    {\n        \"id\": 130,\n        \"subtype\": \"User Resource\",\n        \"uuid\": \"eea684c4-45d3-48aa-81c4-d70dc77bf52f\",\n        \"is_deleted\": false,\n        \"lastmodified\": \"2022-07-14T14:21:34\",\n        \"domain_level\": 1,\n        \"name\": \"Object_group_users\",\n        \"description\": null,\n        \"is_autocreated\": false,\n        \"is_enabled\": true,\n        \"params\": {},\n        \"config\": 205,\n        \"version\": 10388,\n        \"parents\": [],\n        \"members_count\": 2,\n        \"profiles_count\": 0\n    }\n]"
										}
									]
								},
								{
									"name": "Create a User Group with objects and optional parameters Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"New group is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Resource user\");\r",
													"  pm.expect(jsonData.name).to.eql(\"azAZa09`!@#$^()-=_+[]’;,\");\r",
													"  pm.expect(jsonData.description).to.eql(\"azAZa09`!@#$^()-=_+[]’;,\");\r",
													"});\r",
													"//Create a variable\r",
													"var jsonData = JSON.parse(responseBody); //Parsing the answer\r",
													"  pm.environment.set(\"UuidGroupUsersDelObj\", jsonData.uuid); //Transferring uuid into a variable"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"usernetobject\",\n  \"name\": \"azAZa09`!@#$^()-=_+[]’;,\",\n  \"description\": \"azAZa09`!@#$^()-=_+[]’;,\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidUserObj}}\",\n    \"{{UuidUserSecondObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"usernetobject\",\n  \"name\": \"azAZa09`!@#$^()-=_+[]’;,\",\n  \"description\": \"azAZa09`!@#$^()-=_+[]’;,\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidUserObj}}\",\n    \"{{UuidUserSecondObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 14 Jul 2022 14:33:06 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "356"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 132,\n    \"subtype\": \"Resource user\",\n    \"uuid\": \"e1fbb774-6dc2-4154-ac0f-e01a6dbf3570\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-14T14:33:06\",\n    \"domain_level\": 1,\n    \"name\": \"azAZa09`!@#$^()-=_+[]’;,\",\n    \"description\": \"azAZa09`!@#$^()-=_+[]’;,\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 205,\n    \"version\": 10388\n}"
										}
									]
								},
								{
									"name": "Change User Group Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"subtype, name and description is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"User Resource\");\r",
													"  pm.expect(jsonData.name).to.eql(\"Changed name group Users\");\r",
													"  pm.expect(jsonData.description).to.eql(null);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"usernetobject\",\n  \"name\": \"Changed name group Users\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidUserObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupUsersObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupUsersObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"usernetobject\",\n  \"name\": \"Changed name group Users\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidUserObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/{{UuidGroupUsersObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"{{UuidGroupUsersObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 14 Jul 2022 14:42:36 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 130,\n    \"subtype\": \"Resource user\",\n    \"uuid\": \"eea684c4-45d3-48aa-81c4-d70dc77bf52f\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-14T14:42:36\",\n    \"domain_level\": 1,\n    \"name\": \"Changed name group Users\",\n    \"description\": null,\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 205,\n    \"version\": 10388\n}"
										}
									]
								},
								{
									"name": "Change User Group Positive",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has desc, subtype\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"description\");\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"Description is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.description).to.eql(\"Modified_object_PUTCH_Group_users\");\r",
													"  pm.expect(jsonData.subtype).to.eql(\"User Resource\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Modified_object_PUTCH_Group_users\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupUsersObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupUsersObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Modified_object_PUTCH_Group_users\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/{{UuidGroupUsersObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"{{UuidGroupUsersObj}}",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 14 Jul 2022 15:39:50 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 130,\n    \"subtype\": \"Resource user\",\n    \"uuid\": \"eea684c4-45d3-48aa-81c4-d70dc77bf52f\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-14T15:39:50\",\n    \"domain_level\": 1,\n    \"name\": \"Changed name group Users\",\n    \"description\": \"Modified_object_PUTCH_Group_users\",\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 205,\n    \"version\": 10388\n}"
										}
									]
								},
								{
									"name": "Delete Group Positive Copy",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/{{UuidGroupUsersDelObj}}/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												"{{UuidGroupUsersDelObj}}",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "204 No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/{{UuidGroupUsersDelObj}}/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														"{{UuidGroupUsersDelObj}}",
														""
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "plain",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 14 Jul 2022 15:41:14 GMT"
												},
												{
													"key": "Content-Length",
													"value": "0"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, PUT, PATCH, DELETE, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Negative",
							"item": [
								{
									"name": "Create a User Group with an object that does not exist Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Object not found\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.members[0]).to.include(\"Object 70c8af2d-e996-44fe-849f-777777777777 not found\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"usernetobject\",\n  \"name\": \"Negative group users\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"70c8af2d-e996-44fe-849f-777777777777\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "400 Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"usernetobject\",\n  \"name\": \"Negative group users\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"70c8af2d-e996-44fe-849f-777777777777\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 20 Jul 2022 07:22:42 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "137"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"members\": [\n        \"#Code 212: Object 70c8af2d-e996-44fe-849f-777777777777 not found or has the wrong type.\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Create a User Group with object doubles Negative",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"// Check Header Content-Type=application/json\r",
													"pm.test(\"Content-Type header is application/json\", () => {\r",
													"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
													"});\r",
													"// Checking for keys in json\r",
													"pm.test(\"Body has subtype, uuid, name, desc\", function () {\r",
													"  pm.expect(pm.response.text()).to.include(\"subtype\");\r",
													"  pm.expect(pm.response.text()).to.include(\"uuid\");\r",
													"  pm.expect(pm.response.text()).to.include(\"name\");\r",
													"});\r",
													"// Checking for values in the keys\r",
													"pm.test(\"New group is OK\", function () {\r",
													"var jsonData = pm.response.json();\r",
													"  pm.expect(jsonData.subtype).to.eql(\"Resource user\");\r",
													"  pm.expect(jsonData.name).to.eql(\"Negative group users\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"subtype\": \"usernetobject\",\n  \"name\": \"Negative group users\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidUserSecondObj}}\",\n    \"{{UuidUserSecondObj}}\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/group/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"group",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "201 Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subtype\": \"usernetobject\",\n  \"name\": \"Negative group users\",\n  \"is_autocreated\": false,\n  \"is_enabled\": true,\n  \"params\": {},\n  \"members\": [\n    \"{{UuidUserSecondObj}}\",\n    \"{{UuidUserSecondObj}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/group/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"group",
														""
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Wed, 20 Jul 2022 07:24:27 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Content-Length",
													"value": "312"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "GET, POST, HEAD, OPTIONS"
												}
											],
											"cookie": [],
											"body": "{\n    \"id\": 133,\n    \"subtype\": \"Resource user\",\n    \"uuid\": \"3dd8978e-ad6d-430a-97c6-29d2859f343f\",\n    \"is_deleted\": false,\n    \"lastmodified\": \"2022-07-20T07:24:27\",\n    \"domain_level\": 1,\n    \"name\": \"Negative group users\",\n    \"description\": null,\n    \"is_autocreated\": false,\n    \"is_enabled\": true,\n    \"params\": {},\n    \"config\": 207,\n    \"version\": 10392\n}"
										}
									]
								}
							]
						},
						{
							"name": "Destructive",
							"item": []
						},
						{
							"name": "Config Save/Unlock",
							"item": [
								{
									"name": "Saving Configuration",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/{{CurrentIdConf}}/commit/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"{{CurrentIdConf}}",
												"commit",
												""
											]
										},
										"description": ""
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/24/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"24",
														"commit",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "404 Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/25/commit/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"25",
														"commit",
														""
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "JSON",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Thu, 02 Jun 2022 14:38:34 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\"detail\":\"Not found.\"}"
										}
									]
								},
								{
									"name": "Installing the policy on the MCC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// Check status\r",
													"pm.test(\"Status task is OK\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.status).to.eql(\"ok\");\r",
													"});\r",
													"// Checking for data in the json response in an array\r",
													"pm.test(\"Uuid=36\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.tasks[0]).to.length(36);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/install-policy/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"install-policy",
												""
											]
										},
										"description": "Performs policy installation on the node\n\n:post-data:\n    ::\n\n        {\n            'target': ['Serial number of the target node for the installation']\n        }\n:response:\n    ::\n\n        {\n            'task': <task_id>\n        }"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"target\": [\r\n        \r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/install-policy/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"install-policy",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Server",
													"value": "\"Secret firewall\""
												},
												{
													"key": "Date",
													"value": "Mon, 20 Jun 2022 13:18:42 GMT"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Vary",
													"value": "Accept, Cookie"
												},
												{
													"key": "Allow",
													"value": "POST, OPTIONS"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"ok\",\n    \"tasks\": [\n        \"e86dd596-b724-4b26-9107-ab4ac06c2efe\"\n    ]\n}"
										}
									]
								},
								{
									"name": "Unlock the configuration",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Response is empty\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Waiting in \"ms\" for the policy to be installed\r",
													"setTimeout(() => {}, 10000)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/config/lock/free/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"config",
												"lock",
												"free",
												""
											]
										}
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/config/lock/free/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"config",
														"lock",
														"free",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "admin",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}